(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["44994"], {
        979897: function(e, t, s) {
            e = s.nmd(e), s("854508");
            var a = a || function(e) {
                "use strict";
                if (!("undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
                    var t = e.document,
                        s = function() {
                            return e.URL || e.webkitURL || e
                        },
                        a = t.createElementNS("http://www.w3.org/1999/xhtml", "a"),
                        n = "download" in a,
                        l = function(e) {
                            var t = new MouseEvent("click");
                            e.dispatchEvent(t)
                        },
                        i = /Version\/[\d\.]+.*Safari/.test(navigator.userAgent),
                        r = e.webkitRequestFileSystem,
                        o = e.requestFileSystem || r || e.mozRequestFileSystem,
                        d = function(t) {
                            (e.setImmediate || e.setTimeout)(function() {
                                throw t
                            }, 0)
                        },
                        u = "application/octet-stream",
                        c = 0,
                        S = function(e) {
                            setTimeout(function() {
                                "string" == typeof e ? s().revokeObjectURL(e) : e.remove()
                            }, 4e4)
                        },
                        E = function(e, t, s) {
                            for (var a = (t = [].concat(t)).length; a--;) {
                                var n = e["on" + t[a]];
                                if ("function" == typeof n) try {
                                    n.call(e, s || e)
                                } catch (e) {
                                    d(e)
                                }
                            }
                        },
                        f = function(e) {
                            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob(["\xef\xbb\xbf", e], {
                                type: e.type
                            }) : e
                        },
                        T = function(t, d, T) {
                            !T && (t = f(t));
                            var m, _, g = this,
                                h = t.type,
                                I = !1,
                                N = function() {
                                    E(g, "writestart progress write writeend".split(" "))
                                },
                                p = function() {
                                    if (_ && i && "undefined" != typeof FileReader) {
                                        var a = new FileReader;
                                        a.onloadend = function() {
                                            var e = a.result;
                                            _.location.href = "data:attachment/file" + e.slice(e.search(/[,;]/)), g.readyState = g.DONE, N()
                                        }, a.readAsDataURL(t), g.readyState = g.INIT;
                                        return
                                    }(I || !m) && (m = s().createObjectURL(t)), _ ? _.location.href = m : void 0 === e.open(m, "_blank") && i && (e.location.href = m), g.readyState = g.DONE, N(), S(m)
                                },
                                C = function(e) {
                                    return function() {
                                        if (g.readyState !== g.DONE) return e.apply(this, arguments)
                                    }
                                },
                                A = {
                                    create: !0,
                                    exclusive: !1
                                };
                            if (g.readyState = g.INIT, !d && (d = "download"), n) {
                                m = s().createObjectURL(t), setTimeout(function() {
                                    a.href = m, a.download = d, l(a), N(), S(m), g.readyState = g.DONE
                                });
                                return
                            }
                            if (e.chrome && h && h !== u && (t = (t.slice || t.webkitSlice).call(t, 0, t.size, u), I = !0), r && "download" !== d && (d += ".download"), (h === u || r) && (_ = e), !o) {
                                p();
                                return
                            }
                            c += t.size, o(e.TEMPORARY, c, C(function(e) {
                                e.root.getDirectory("saved", A, C(function(e) {
                                    var s = function() {
                                        e.getFile(d, A, C(function(e) {
                                            e.createWriter(C(function(s) {
                                                s.onwriteend = function(t) {
                                                    _.location.href = e.toURL(), g.readyState = g.DONE, E(g, "writeend", t), S(e)
                                                }, s.onerror = function() {
                                                    var e = s.error;
                                                    e.code !== e.ABORT_ERR && p()
                                                }, "writestart progress write abort".split(" ").forEach(function(e) {
                                                    s["on" + e] = g["on" + e]
                                                }), s.write(t), g.abort = function() {
                                                    s.abort(), g.readyState = g.DONE
                                                }, g.readyState = g.WRITING
                                            }), p)
                                        }), p)
                                    };
                                    e.getFile(d, {
                                        create: !1
                                    }, C(function(e) {
                                        e.remove(), s()
                                    }), C(function(e) {
                                        e.code === e.NOT_FOUND_ERR ? s() : p()
                                    }))
                                }), p)
                            }), p)
                        },
                        m = T.prototype;
                    return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e, t, s) {
                        return !s && (e = f(e)), navigator.msSaveOrOpenBlob(e, t || "download")
                    } : (m.abort = function() {
                        this.readyState = this.DONE, E(this, "abort")
                    }, m.readyState = m.INIT = 0, m.WRITING = 1, m.DONE = 2, m.error = m.onwritestart = m.onprogress = m.onwrite = m.onabort = m.onerror = m.onwriteend = null, function(e, t, s) {
                        return new T(e, t, s)
                    })
                }
            }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
            void 0 !== e && e.exports ? e.exports.saveAs = a : "undefined" != typeof define && null !== define && null !== define.amd && define([], function() {
                return a
            })
        },
        584811: function(e, t, s) {
            var a = s("818477");
            t.encode = a.encode, t.decode = a.decode
        },
        818477: function(e, t, s) {
            var a = s("446825").Buffer;
            s("70102");
            var n = [255, 255, 26, 27, 28, 29, 30, 31, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 255];
            t.encode = function(e) {
                !a.isBuffer(e) && (e = new a(e));
                var t, s, n = 0,
                    l = 0,
                    i = 0,
                    r = 0;
                for (var o = new a(8 * (s = Math.floor((t = e).length / 5), t.length % 5 == 0 ? s : s + 1)); n < e.length;) {
                    var d = e[n];
                    i > 3 ? (r = (r = d & 255 >> i) << (i = (i + 5) % 8) | (n + 1 < e.length ? e[n + 1] : 0) >> 8 - i, n++) : (r = d >> 8 - (i + 5) & 31, 0 == (i = (i + 5) % 8) && n++), o[l] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".charCodeAt(r), l++
                }
                for (n = l; n < o.length; n++) o[n] = 61;
                return o
            }, t.decode = function(e) {
                var t, s = 0,
                    l = 0,
                    i = 0;
                !a.isBuffer(e) && (e = new a(e));
                for (var r = new a(Math.ceil(5 * e.length / 8)), o = 0; o < e.length && 61 != e[o]; o++) {
                    var d = e[o] - 48;
                    if (d < n.length) l = n[d], s <= 3 ? 0 == (s = (s + 5) % 8) ? (t |= l, r[i] = t, i++, t = 0) : t |= 255 & l << 8 - s : (t |= 255 & l >>> (s = (s + 5) % 8), r[i] = t, i++, t = 255 & l << 8 - s);
                    else throw Error("Invalid input - it is not base32 encoded string")
                }
                return r.slice(0, i)
            }
        },
        337695: function(e, t, s) {
            "use strict";
            e.exports = s.p + "d29a5e9ac3e2efa42e40.svg"
        },
        682407: function(e, t, s) {
            "use strict";
            e.exports = s.p + "5dacee8566b3fa5d05e7.png"
        },
        522025: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8debd25fc894741dafd0.svg"
        },
        471737: function(e, t, s) {
            "use strict";
            e.exports = s.p + "a0e249703c7cad81a7c1.svg"
        },
        541956: function(e, t, s) {
            "use strict";
            e.exports = s.p + "5ed4b36fc88424ef09b0.svg"
        },
        301037: function(e, t, s) {
            "use strict";
            e.exports = s.p + "4a0bbd7108c55228c0a7.svg"
        },
        137718: function(e, t, s) {
            "use strict";
            e.exports = s.p + "53e9102a961af6cf7254.svg"
        },
        631399: function(e, t, s) {
            "use strict";
            e.exports = s.p + "db947193d549bd45c3a3.svg"
        },
        867369: function(e, t, s) {
            "use strict";
            e.exports = s.p + "0fcdddd7e59d53cf3253.svg"
        },
        200324: function(e, t, s) {
            "use strict";
            e.exports = s.p + "ff9cfb0571740063f0be.svg"
        },
        605149: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c166e3edbd9dc71381fd.svg"
        },
        203017: function(e, t, s) {
            "use strict";
            e.exports = s.p + "d2884ba829223582b3bf.svg"
        },
        137963: function(e, t, s) {
            "use strict";
            e.exports = s.p + "1de079b3a4d002a51a15.svg"
        },
        700930: function(e, t, s) {
            "use strict";
            e.exports = s.p + "ce0628c13e297670b496.svg"
        },
        742737: function(e, t, s) {
            "use strict";
            e.exports = s.p + "f2230dc3b0d0362eb79a.svg"
        },
        412457: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8224481274681d0608a9.svg"
        },
        335138: function(e, t, s) {
            "use strict";
            e.exports = s.p + "731bd00d0cba7b0ad9a2.svg"
        },
        492078: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c0c99b912780c3933ee2.svg"
        },
        269304: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8038d36ff150656fed89.svg"
        },
        507822: function(e, t, s) {
            "use strict";
            e.exports = s.p + "2035204bfda605f5ac43.svg"
        },
        389671: function(e, t, s) {
            "use strict";
            e.exports = s.p + "d8fed90d3e2823445104.svg"
        },
        445113: function(e, t, s) {
            "use strict";
            e.exports = s.p + "a6bdd16f1b2d92dd9865.svg"
        },
        295450: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6c7e4648f08a48073917.svg"
        },
        345598: function(e, t, s) {
            "use strict";
            e.exports = s.p + "1dd01e7f98785e600f91.svg"
        },
        385622: function(e, t, s) {
            "use strict";
            e.exports = s.p + "e5ee547697275994f034.svg"
        },
        178266: function(e, t, s) {
            "use strict";
            e.exports = s.p + "7c0e125dc9e3990f9dfc.svg"
        },
        140090: function(e, t, s) {
            "use strict";
            e.exports = s.p + "7d917b4bfa064c89919b.svg"
        },
        553847: function(e, t, s) {
            "use strict";
            e.exports = s.p + "13a8bb57a95635a785ae.svg"
        },
        963040: function(e, t, s) {
            "use strict";
            e.exports = s.p + "013a3e2bea3d51d71775.svg"
        },
        596482: function(e, t, s) {
            "use strict";
            e.exports = s.p + "99a94741486949920394.svg"
        },
        471208: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8bc13200408a99819215.svg"
        },
        748268: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c87be216431a35927431.svg"
        },
        473604: function(e, t, s) {
            "use strict";
            e.exports = s.p + "221c7480010a4ceeadf1.png"
        },
        47919: function(e, t, s) {
            "use strict";
            e.exports = s.p + "fa8cd14c4cb1193731c8.png"
        },
        126953: function(e, t, s) {
            "use strict";
            e.exports = s.p + "33de08d0b379a019874a.svg"
        },
        153346: function(e, t, s) {
            "use strict";
            e.exports = s.p + "df61b5a072692e93e9a7.svg"
        },
        670640: function(e, t, s) {
            "use strict";
            e.exports = s.p + "5d5299b59e078e119f24.svg"
        },
        887356: function(e, t, s) {
            "use strict";
            e.exports = s.p + "5deaff8a5a4b53d68928.svg"
        },
        255930: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c3b2b165fbefe476abc5.svg"
        },
        12483: function(e, t, s) {
            "use strict";
            e.exports = s.p + "fa7c7d8e213243eda4e5.svg"
        },
        391590: function(e, t, s) {
            "use strict";
            e.exports = s.p + "2e0140afe6dd3a9a1bfa.svg"
        },
        435021: function(e, t, s) {
            "use strict";
            e.exports = s.p + "e881e01b06b1b0ee45b2.svg"
        },
        629551: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6762ed8abdaef6a7f6fc.png"
        },
        305213: function(e, t, s) {
            "use strict";
            e.exports = s.p + "5af9f85713084d6867a6.png"
        },
        240547: function(e, t, s) {
            "use strict";
            e.exports = s.p + "1e778bb85ac27d961943.svg"
        },
        587531: function(e, t, s) {
            "use strict";
            e.exports = s.p + "48a28e207ce985f03e7b.svg"
        },
        469414: function(e, t, s) {
            "use strict";
            e.exports = s.p + "717e47f4e1c8f4d86f00.svg"
        },
        481701: function(e, t, s) {
            "use strict";
            e.exports = s.p + "de0896237eebfc178931.png"
        },
        525109: function(e, t, s) {
            "use strict";
            e.exports = s.p + "ae092b03d45651e7eb45.png"
        },
        125001: function(e, t, s) {
            "use strict";
            e.exports = s.p + "db36f11a654acc0fdc8c.jpg"
        },
        872702: function(e, t, s) {
            "use strict";
            e.exports = s.p + "e62a3b5f49dad09eea9d.png"
        },
        280414: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8693cf27588b5d099f98.png"
        },
        156465: function(e, t, s) {
            "use strict";
            e.exports = s.p + "42b086ee3d9863ea45bc.svg"
        },
        709976: function(e, t, s) {
            "use strict";
            e.exports = s.p + "9fdb9e06aa233a3af0d1.png"
        },
        555657: function(e, t, s) {
            "use strict";
            e.exports = s.p + "16e7fcbfbd488cc6d5d9.png"
        },
        269863: function(e, t, s) {
            "use strict";
            e.exports = s.p + "e9dc9eab2d472da0d6f4.svg"
        },
        226992: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6bd54527c7eb6fa18c21.svg"
        },
        901979: function(e, t, s) {
            "use strict";
            e.exports = s.p + "56d360a7672d87843eaa.png"
        },
        445810: function(e, t, s) {
            "use strict";
            e.exports = s.p + "eba209d997b058b19dc8.svg"
        },
        430208: function(e, t, s) {
            "use strict";
            e.exports = s.p + "1e62cabfa6b0da1c840d.svg"
        },
        834461: function(e, t, s) {
            "use strict";
            e.exports = s.p + "901bb05cc5cba64d219c.svg"
        },
        203705: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8f2475066b3742df9f0d.svg"
        },
        591779: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c4a300333537caaf68ba.png"
        },
        106785: function(e, t, s) {
            "use strict";
            e.exports = s.p + "594df69499dc25c515c8.gif"
        },
        474200: function(e, t, s) {
            "use strict";
            e.exports = s.p + "413fa93792c1a4566f3b.svg"
        },
        776466: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return i
                }
            });
            var a = s("872717"),
                n = s("913144"),
                l = s("49111"),
                i = {
                    fetch() {
                        a.default.get({
                            url: l.Endpoints.OAUTH2_TOKENS,
                            oldFormErrors: !0
                        }).then(e => n.default.dispatch({
                            type: "USER_AUTHORIZED_APPS_UPDATE",
                            apps: e.body
                        }), () => n.default.dispatch({
                            type: "USER_AUTHORIZED_APPS_UPDATE",
                            apps: []
                        }))
                    },
                    delete(e) {
                        a.default.delete({
                            url: l.Endpoints.OAUTH2_TOKEN(e),
                            oldFormErrors: !0
                        }).then(() => {
                            this.fetch()
                        })
                    }
                }
        },
        6481: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("872717"),
                n = s("913144"),
                l = s("448993"),
                i = s("49111");
            let r = {
                [i.HypeSquadHouses.HOUSE_1]: 1,
                [i.HypeSquadHouses.HOUSE_2]: 2,
                [i.HypeSquadHouses.HOUSE_3]: 3
            };
            var o = {
                joinHypeSquadOnline: e => a.default.post({
                    url: i.Endpoints.HYPESQUAD_ONLINE,
                    body: {
                        house_id: r[e.houseID]
                    },
                    oldFormErrors: !0
                }).then(() => n.default.dispatch({
                    type: "HYPESQUAD_ONLINE_MEMBERSHIP_JOIN_SUCCESS",
                    houseID: e.houseID
                })).catch(e => {
                    throw new l.V6OrEarlierAPIError(e)
                }),
                leaveHypeSquadOnline: () => a.default.delete({
                    url: i.Endpoints.HYPESQUAD_ONLINE,
                    oldFormErrors: !0
                }).then(() => n.default.dispatch({
                    type: "HYPESQUAD_ONLINE_MEMBERSHIP_LEAVE_SUCCESS"
                })).catch(e => {
                    throw new l.V6OrEarlierAPIError(e)
                })
            }
        },
        913139: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return n
                }
            });
            var a = s("913144"),
                n = {
                    addKeybind(e) {
                        a.default.dispatch({
                            type: "KEYBINDS_ADD_KEYBIND",
                            keybind: e
                        })
                    },
                    setKeybind(e) {
                        a.default.dispatch({
                            type: "KEYBINDS_SET_KEYBIND",
                            keybind: e
                        })
                    },
                    deleteKeybind(e) {
                        a.default.dispatch({
                            type: "KEYBINDS_DELETE_KEYBIND",
                            id: e
                        })
                    },
                    enableAll(e) {
                        a.default.dispatch({
                            type: "KEYBINDS_ENABLE_ALL_KEYBINDS",
                            enable: e
                        })
                    }
                }
        },
        430713: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("872717"),
                n = s("913144"),
                l = s("650893"),
                i = s("49111");

            function r(e, t) {
                return n.default.dispatch({
                    type: "MFA_SMS_TOGGLE"
                }), a.default.post({
                    url: e,
                    body: {
                        password: t
                    },
                    oldFormErrors: !0
                }).then(e => (n.default.dispatch({
                    type: "MFA_SMS_TOGGLE_COMPLETE"
                }), e), e => {
                    throw n.default.dispatch({
                        type: "MFA_SMS_TOGGLE_COMPLETE"
                    }), e
                })
            }
            var o = {
                async enableMFAStart(e) {
                    let t = await a.default.post({
                        url: i.Endpoints.MFA_TOTP_ENABLE,
                        body: {
                            password: e
                        },
                        oldFormErrors: !0
                    });
                    return t.body
                },
                async verifyEmailCode(e) {
                    let t = await a.default.post({
                        url: i.Endpoints.MFA_TOTP_ENABLE_VERIFY,
                        body: {
                            code: e
                        }
                    });
                    return t.body
                },
                resendEmailCode: e => a.default.post({
                    url: i.Endpoints.MFA_TOTP_ENABLE_RESEND,
                    body: {
                        password: e
                    }
                }),
                setEmailToken(e) {
                    n.default.dispatch({
                        type: "MFA_ENABLE_EMAIL_TOKEN",
                        token: e
                    })
                },
                enable(e) {
                    let {
                        password: t,
                        code: s,
                        secret: l,
                        emailToken: r
                    } = e;
                    return a.default.post({
                        url: i.Endpoints.MFA_TOTP_ENABLE,
                        body: {
                            code: s,
                            secret: l,
                            password: t,
                            email_token: r
                        },
                        oldFormErrors: !0
                    }).then(e => n.default.dispatch({
                        type: "MFA_ENABLE_SUCCESS",
                        token: e.body.token,
                        codes: e.body.backup_codes
                    }))
                },
                disable() {
                    a.default.post({
                        url: i.Endpoints.MFA_TOTP_DISABLE,
                        oldFormErrors: !0
                    }).then(e => {
                        let {
                            body: {
                                token: t
                            }
                        } = e;
                        return n.default.dispatch({
                            type: "MFA_DISABLE_SUCCESS",
                            token: t
                        })
                    })
                },
                enableSMS: e => r(i.Endpoints.MFA_SMS_ENABLE, e),
                disableSMS: e => r(i.Endpoints.MFA_SMS_DISABLE, e),
                sendMFABackupCodesVerificationKeyEmail: e => a.default.post({
                    url: i.Endpoints.MFA_SEND_VERIFICATION_KEY,
                    body: {
                        password: e
                    },
                    oldFormErrors: !0
                }).then(e => n.default.dispatch({
                    type: "MFA_SEND_VERIFICATION_KEY",
                    nonces: {
                        viewNonce: e.body.nonce,
                        regenerateNonce: e.body.regenerate_nonce
                    }
                }), e => {
                    throw e
                }),
                confirmViewBackupCodes(e, t) {
                    let {
                        viewNonce: s,
                        regenerateNonce: r
                    } = l.default.getNonces();
                    return a.default.post({
                        url: i.Endpoints.MFA_CODES_VERIFICATION,
                        body: {
                            key: e,
                            nonce: t ? r : s,
                            regenerate: t
                        },
                        oldFormErrors: !0
                    }).then(t => n.default.dispatch({
                        type: "MFA_VIEW_BACKUP_CODES",
                        codes: t.body.backup_codes,
                        key: e
                    }), e => {
                        throw e
                    })
                },
                clearBackupCodes() {
                    n.default.dispatch({
                        type: "MFA_CLEAR_BACKUP_CODES"
                    })
                }
            }
        },
        335430: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                CurrencyWrapper: function() {
                    return i
                },
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("575209");

            function i(e) {
                let {
                    currencies: t,
                    className: s,
                    children: n
                } = e;
                return t.length < 2 ? null : (0, a.jsx)("div", {
                    className: s,
                    children: n
                })
            }
            var r = function(e) {
                let {
                    currencies: t,
                    onChange: s,
                    selectedCurrency: i,
                    className: r,
                    disabled: o = !1
                } = e;
                if (t.length < 2) return null;
                let d = t.map((e, t) => ({
                    key: t,
                    value: e,
                    label: "".concat(e.toUpperCase(), " - ").concat((0, l.getCurrencyFullName)(e))
                }));
                return (0, a.jsx)(n.SingleSelect, {
                    value: i,
                    options: d,
                    onChange: e => {
                        null != e && s(e)
                    },
                    className: r,
                    isDisabled: o
                })
            }
        },
        58502: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("222007");
            var a, n = s("37983"),
                l = s("884691"),
                i = s("476765"),
                r = s("520713"),
                o = s("137460"),
                d = s("983299"),
                u = s("782340"),
                c = s("991300");
            (a || (a = {})).EXPIRATION_DATE = "expirationDate";
            let S = {
                    expirationDate: {
                        name: "expirationDate",
                        id: (0, i.uid)(),
                        title: () => u.default.Messages.CREDIT_CARD_EXPIRATION_DATE,
                        autoComplete: "cc-exp",
                        placeholder: () => u.default.Messages.PAYMENT_SOURCE_EXPIRATION_DATE_PLACEHOLDER,
                        pattern: "\\d*",
                        getClassNameForLayout: () => c.width50,
                        renderInput: e => (0, n.jsx)(o.default, {
                            ...e
                        })
                    }
                },
                E = [{
                    fields: [S.expirationDate]
                }];
            var f = function(e) {
                let {
                    onCardInfoChange: t,
                    className: s,
                    expirationDate: a,
                    error: i
                } = e, [o, c] = l.useState(!1), [S, f] = l.useState(null), [T, m] = l.useState(a);
                return l.useEffect(() => {
                    t({
                        expirationDate: T
                    }, null === S)
                }, [T, t, S]), (0, n.jsx)(d.default, {
                    className: s,
                    form: E,
                    values: {
                        expirationDate: T
                    },
                    errors: null != S ? {
                        expirationDate: S
                    } : {},
                    formError: i,
                    onFieldChange: e => {
                        !o && "" !== e && c(!0), o && "" === e || !(0, r.validateExpiry)(e) ? f(u.default.Messages.CREDIT_CARD_ERROR_EXPIRATION) : f(null), m(e)
                    }
                })
            }
        },
        793133: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("394846"),
                o = s("446674"),
                d = s("77078"),
                u = s("913144"),
                c = s("850068"),
                S = s("607191"),
                E = s("865146"),
                f = s("160299"),
                T = s("449008"),
                m = s("18502"),
                _ = s("58502"),
                g = s("364735"),
                h = s("782340"),
                I = s("605085");
            let N = {
                IS_DEFAULT: "isDefault"
            };
            class p extends n.PureComponent {
                componentWillUnmount() {
                    u.default.wait(() => {
                        (0, c.clearUpdatePaymentSourceError)(), (0, c.clearRemovePaymentSourceError)()
                    })
                }
                renderError() {
                    let {
                        updateError: e,
                        removeError: t
                    } = this.props;
                    return null == e || e.hasCardError() || e.hasAddressError() ? null != t ? (0, a.jsx)(d.FormErrorBlock, {
                        className: I.formError,
                        children: t.message
                    }) : null : (0, a.jsx)(d.FormErrorBlock, {
                        className: I.formError,
                        children: e.message
                    })
                }
                renderBillingAddressSection() {
                    let {
                        billingAddress: e
                    } = this.state, {
                        updateError: t,
                        paymentSource: s
                    } = this.props, n = (0, S.getBillingAddressLayout)(s);
                    return (0, a.jsxs)("div", {
                        className: I.addressSection,
                        children: [(0, a.jsx)(d.Text, {
                            className: I.sectionHeader,
                            variant: "text-sm/normal",
                            children: h.default.Messages.BILLING_ADDRESS
                        }), (0, a.jsx)(m.default, {
                            ...e,
                            mode: m.default.Modes.EDIT,
                            layout: n,
                            onBillingAddressChange: this.handleAddressUpdate,
                            error: t
                        })]
                    })
                }
                renderCardExpirationSection() {
                    let {
                        expiresMonth: e,
                        expiresYear: t
                    } = this.state;
                    if (null == e || null == t) return null;
                    let s = "".concat(e.toString().padStart(2, "0"), "/").concat(t.toString().padStart(2, "0").slice(-2));
                    return (0, a.jsxs)("div", {
                        className: I.addressSection,
                        children: [(0, a.jsx)(d.Text, {
                            className: I.sectionHeader,
                            variant: "text-sm/normal",
                            children: h.default.Messages.BILLING_STEP_CREDIT_CARD_INFORMATION
                        }), (0, a.jsx)(_.default, {
                            expirationDate: s,
                            onCardInfoChange: this.handleExpirationDateUpdate,
                            error: this.props.updateError
                        })]
                    })
                }
                renderActions() {
                    let {
                        submitting: e,
                        removing: t,
                        isForSubscription: s
                    } = this.props, {
                        billingAddressValid: n,
                        expirationValid: l
                    } = this.state;
                    return (0, a.jsxs)("div", {
                        className: I.formActions,
                        children: [(0, a.jsx)("div", {
                            className: I.leftAlignedButtons,
                            children: (0, a.jsxs)("div", {
                                className: I.disabledTooltipWrapper,
                                children: [s ? (0, a.jsx)(d.Tooltip, {
                                    text: h.default.Messages.PAYMENT_SOURCE_DELETE_DISABLED_TOOLTIP,
                                    children: e => (0, a.jsx)("div", {
                                        "aria-hidden": !0,
                                        className: I.disabledTooltipTarget,
                                        ...e
                                    })
                                }) : null, (0, a.jsx)(d.Button, {
                                    type: "button",
                                    disabled: s || e,
                                    submitting: t,
                                    onClick: this.handleDelete,
                                    look: d.Button.Looks.OUTLINED,
                                    color: d.Button.Colors.RED,
                                    size: r.isMobile ? d.ButtonSizes.SMALL : d.ButtonSizes.MEDIUM,
                                    children: r.isMobile ? h.default.Messages.DELETE : h.default.Messages.PAYMENT_SOURCE_DELETE
                                })]
                            })
                        }), (0, a.jsxs)("div", {
                            className: I.rightAlignedButtons,
                            children: [(0, a.jsx)(d.Button, {
                                type: "button",
                                disabled: e || t,
                                onClick: this.handleCancel,
                                look: d.Button.Looks.LINK,
                                color: d.Button.Colors.PRIMARY,
                                size: r.isMobile ? d.ButtonSizes.SMALL : d.ButtonSizes.MEDIUM,
                                children: h.default.Messages.CANCEL
                            }), (0, a.jsx)(d.Button, {
                                submitting: e,
                                disabled: !n || t || !l,
                                type: "submit",
                                color: d.Button.Colors.GREEN,
                                size: r.isMobile ? d.ButtonSizes.SMALL : d.ButtonSizes.MEDIUM,
                                children: h.default.Messages.SAVE
                            })]
                        })]
                    })
                }
                render() {
                    let {
                        paymentSource: e,
                        isDefault: t,
                        locale: s,
                        className: n,
                        isForSubscription: l
                    } = this.props, {
                        isDefault: r
                    } = this.state, o = e instanceof E.PaypalSourceRecord;
                    return (0, a.jsx)(d.Card, {
                        editable: !0,
                        className: i(I.card, n),
                        children: (0, a.jsxs)("form", {
                            onSubmit: this.handleSubmit,
                            noValidate: !0,
                            children: [this.renderError(), (0, a.jsxs)("div", {
                                className: I.paymentSection,
                                children: [(0, a.jsx)(g.default, {
                                    paymentSource: e,
                                    isDefault: t,
                                    isForSubscription: l,
                                    locale: s
                                }), e.invalid ? (0, a.jsx)("div", {
                                    className: I.errorSubText,
                                    children: h.default.Messages.PAYMENT_SOURCE_INVALID_HELP
                                }) : null, (0, a.jsx)("div", {
                                    className: I.subText,
                                    children: o ? h.default.Messages.PAYMENT_SOURCE_EDIT_HELP_PAYPAL.format({
                                        paypalURL: "https://www.paypal.com"
                                    }) : h.default.Messages.PAYMENT_SOURCE_EDIT_HELP_CARD
                                })]
                            }), this.renderCardExpirationSection(), this.renderBillingAddressSection(), (0, a.jsx)(d.Checkbox, {
                                name: N.IS_DEFAULT,
                                value: r,
                                onChange: (e, t) => this.handleFieldChange(t, N.IS_DEFAULT),
                                type: d.Checkbox.Types.INVERTED,
                                className: I.defaultSection,
                                children: (0, a.jsx)(d.Text, {
                                    className: I.defaultCheckboxLabel,
                                    variant: "text-sm/normal",
                                    children: h.default.Messages.PAYMENT_SOURCE_MAKE_DEFAULT
                                })
                            }), (0, a.jsx)(d.FormDivider, {}), this.renderActions()]
                        })
                    })
                }
                constructor(e) {
                    var t, s, a, n, l, i, r;
                    super(e), this.handleSubmit = e => {
                        if (e.preventDefault(), e.stopPropagation(), 0 === Object.values(this.state.dirtyFields).filter(T.isNotNullish).length) this.props.onCancel();
                        else {
                            let {
                                billingAddress: e,
                                isDefault: t,
                                expiresMonth: s,
                                expiresYear: a
                            } = this.state;
                            this.props.onSubmit(this.props.paymentSource.id, {
                                billingAddress: e,
                                expiresMonth: s,
                                expiresYear: a,
                                isDefault: t
                            })
                        }
                    }, this.handleCancel = () => {
                        this.props.onCancel()
                    }, this.handleDelete = () => {
                        let {
                            onDelete: e,
                            paymentSource: t
                        } = this.props;
                        e(t.id)
                    }, this.handleAddressUpdate = (e, t, s) => {
                        this.setState({
                            billingAddress: e,
                            billingAddressValid: t,
                            dirtyFields: {
                                ...this.state.dirtyFields,
                                billingAddress: s
                            }
                        })
                    }, this.handleExpirationDateUpdate = (e, t) => {
                        let {
                            expirationDate: s
                        } = e;
                        if (this.setState({
                                expirationValid: t
                            }), null == s || "" === s) return;
                        let [a, n] = s.split("/");
                        this.handleFieldChange(Number(a), "expiresMonth"), this.handleFieldChange(Number("".concat(new Date().getFullYear().toString().slice(0, 2)).concat(n)), "expiresYear")
                    }, this.handleFieldChange = (e, t) => {
                        null != t && this.setState({
                            [t]: e,
                            dirtyFields: {
                                ...this.state.dirtyFields,
                                [t]: !0
                            }
                        })
                    };
                    let {
                        paymentSource: o,
                        isDefault: d
                    } = e, u = o.billingAddress;
                    this.state = {
                        billingAddress: {
                            name: null !== (t = u.name) && void 0 !== t ? t : "",
                            line1: null !== (s = u.line1) && void 0 !== s ? s : "",
                            line2: null !== (a = u.line2) && void 0 !== a ? a : "",
                            country: null !== (n = u.country) && void 0 !== n ? n : "",
                            state: null !== (l = u.state) && void 0 !== l ? l : "",
                            city: null !== (i = u.city) && void 0 !== i ? i : "",
                            postalCode: null !== (r = u.postalCode) && void 0 !== r ? r : ""
                        },
                        expiresMonth: o instanceof E.CreditCardSourceRecord ? o.expiresMonth : void 0,
                        expiresYear: o instanceof E.CreditCardSourceRecord ? o.expiresYear : void 0,
                        billingAddressValid: !1,
                        isDefault: d,
                        expirationValid: !0,
                        dirtyFields: {}
                    }
                }
            }
            p.defaultProps = {
                onDelete: () => {},
                onSubmit: () => {},
                onCancel: () => {}
            };
            var C = o.default.connectStores([f.default], () => ({
                updateError: f.default.editSourceError,
                removeError: f.default.removeSourceError
            }))(p)
        },
        137460: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            }), s("222007"), s("781738");
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("417809");
            let r = /[^0-9]/g;
            class o extends n.PureComponent {
                componentDidUpdate(e) {
                    let t = this._inputRef;
                    e.value !== this.props.value && null != t && t.setSelectionRange(this.selectionStart, this.selectionStart)
                }
                render() {
                    return (0, a.jsx)(l.TextInput, {
                        ...this.props,
                        inputMode: "numeric",
                        onChange: this.handleChange,
                        inputRef: this.setRef
                    })
                }
                constructor(...e) {
                    super(...e), this.selectionStart = 0, this.setRef = e => {
                        let {
                            inputRef: t
                        } = this.props;
                        this._inputRef = e, null != t && t(e)
                    }, this.handleChange = (e, t) => {
                        let {
                            value: s,
                            onChange: a
                        } = this.props, n = this._inputRef;
                        if (e === s || null == n || null == s) return;
                        let l = (0, i.formatExpiration)(e),
                            o = n.selectionStart;
                        l === s && l.length <= 3 && s.includes("/") && !e.includes("/") ? l = l.replace(r, "") : l === s && e.includes("/") && !s.includes("/") && (l += "/"), l.length > e.length && (o += l.length - e.length), this.selectionStart = o, null != a && a(l, t)
                    }
                }
            }
            var d = o
        },
        87641: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("917351"),
                i = s.n(l),
                r = s("249654"),
                o = s("77078"),
                d = s("850068"),
                u = s("112679"),
                c = s("145131"),
                S = s("600785"),
                E = s("713518"),
                f = s("793133"),
                T = s("364735"),
                m = s("49111"),
                _ = s("782340"),
                g = s("224707");
            class h extends n.PureComponent {
                render() {
                    let {
                        paymentSource: e,
                        isDefault: t,
                        isEditing: s,
                        index: n,
                        hideDivider: l,
                        isForSubscription: i,
                        locale: r,
                        removing: d,
                        submitting: u,
                        onSubmit: S,
                        onCancel: E,
                        onDelete: m
                    } = this.props;
                    return s ? (0, a.jsx)(f.default, {
                        paymentSource: e,
                        isDefault: t,
                        removing: d,
                        submitting: u,
                        locale: r,
                        isForSubscription: i,
                        onSubmit: S,
                        onCancel: E,
                        onDelete: m
                    }) : (0, a.jsxs)("div", {
                        className: g.paymentSourceItem,
                        children: [n > 0 && !l ? (0, a.jsx)(o.FormDivider, {
                            className: g.sourceDivider
                        }) : null, (0, a.jsxs)(c.default, {
                            align: c.default.Align.CENTER,
                            justify: c.default.Justify.BETWEEN,
                            className: g.paymentSourceRow,
                            children: [(0, a.jsx)(T.default, {
                                paymentSource: e,
                                isDefault: t,
                                isForSubscription: i,
                                locale: r,
                                showSubtext: !0
                            }), s ? null : (0, a.jsx)(o.Button, {
                                color: o.Button.Colors.PRIMARY,
                                onClick: this.handleEditClick,
                                size: o.Button.Sizes.SMALL,
                                children: _.default.Messages.EDIT
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleEditClick = () => {
                        this.props.onEditClick(this.props.paymentSource.id)
                    }
                }
            }
            h.defaultProps = {
                isEditing: !1,
                hideDivider: !1,
                onEditClick: () => {}
            };
            class I extends n.PureComponent {
                renderFooter() {
                    let {
                        paymentSources: e
                    } = this.props;
                    return (0, a.jsxs)(c.default, {
                        justify: c.default.Justify.END,
                        className: g.footer,
                        children: [0 === Object.keys(e).length ? (0, a.jsxs)(c.default.Child, {
                            children: [(0, a.jsx)(o.Text, {
                                variant: "text-sm/normal",
                                children: _.default.Messages.BILLING_NO_PAYMENT_METHOD
                            }), (0, a.jsx)("div", {
                                className: g.subText,
                                children: _.default.Messages.BILLING_NO_PAYMENT_METHOD_DESCRIPTION
                            })]
                        }) : null, (0, a.jsx)(o.Button, {
                            onClick: this.handleAddPaymentMethod,
                            children: _.default.Messages.BILLING_ADD_PAYMENT_METHOD
                        })]
                    })
                }
                render() {
                    let {
                        defaultPaymentSourceId: e,
                        paymentSources: t,
                        locale: s,
                        removing: n,
                        submitting: l,
                        premiumSubscriptionPaymentSourceId: d
                    } = this.props, u = i.values(t).sort((t, s) => t.id === e ? -1 : s.id === e ? 1 : r.default.compare(t.id, s.id)), E = this.state.editingPayment, f = u.findIndex(e => e.id === E), T = u.map((t, i) => (0, a.jsx)(h, {
                        locale: s,
                        paymentSource: t,
                        isDefault: e === t.id,
                        onCancel: this.handleCancel,
                        onDelete: this.handleDelete,
                        isForSubscription: t.id === d,
                        hideDivider: f === i - 1,
                        onSubmit: this.handleSubmit,
                        index: i,
                        submitting: l,
                        removing: n,
                        isEditing: E === t.id,
                        onEditClick: this.handleEditClick
                    }, t.id));
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(o.FormTitle, {
                            tag: "h1",
                            children: (0, a.jsxs)(c.default, {
                                align: c.default.Align.CENTER,
                                children: [(0, a.jsx)(o.Tooltip, {
                                    position: "left",
                                    text: _.default.Messages.BILLING_SECURE_TOOLTIP,
                                    children: e => (0, a.jsx)(S.default, {
                                        className: g.lockIcon,
                                        ...e
                                    })
                                }), _.default.Messages.BILLING_PAYMENT_SOURCES]
                            })
                        }), T, f !== u.length - 1 ? (0, a.jsx)(o.FormDivider, {
                            className: g.sourceDivider
                        }) : null, this.renderFooter()]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        editingPayment: null
                    }, this.handleEditClick = e => {
                        this.setState({
                            editingPayment: e
                        })
                    }, this.handleCancel = () => {
                        this.setState({
                            editingPayment: null
                        })
                    }, this.handleDelete = async e => {
                        try {
                            await d.deletePaymentSource(e), this.setState({
                                editingPayment: null
                            })
                        } catch (e) {}
                    }, this.handleSubmit = async (e, t) => {
                        if (null != e) try {
                            await d.updatePaymentSource(e, t), this.setState({
                                editingPayment: null
                            })
                        } catch (e) {}
                    }, this.handlePaymentSourceAdded = async e => {
                        await (0, E.fetchSubscriptionPlansOnNewPaymentSource)(e.id)
                    }, this.handleAddPaymentMethod = () => {
                        (0, o.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await s.el("960391").then(s.bind(s, "960391"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                onAddPaymentSource: this.handlePaymentSourceAdded
                            })
                        }, {
                            onCloseCallback: () => {
                                (0, u.clearError)()
                            },
                            onCloseRequest: m.NOOP
                        })
                    }
                }
            }
            var N = I
        },
        264044: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("819855"),
                r = s("77078"),
                o = s("841098"),
                d = s("376556"),
                u = s("572943"),
                c = s("926994"),
                S = s("599110"),
                E = s("49111"),
                f = s("704184"),
                T = e => {
                    let {
                        disabled: t = !1,
                        type: s,
                        className: n,
                        innerClassName: T,
                        onConnect: m
                    } = e, _ = (0, o.default)(), g = d.default.get((0, u.useLegacyPlatformType)(s));
                    return (0, a.jsx)(r.Tooltip, {
                        text: g.name,
                        children: e => {
                            let {
                                onMouseEnter: o,
                                onMouseLeave: u
                            } = e;
                            return (0, a.jsx)("div", {
                                className: l(f.wrapper, n),
                                children: (0, a.jsx)(r.FocusRing, {
                                    children: (0, a.jsx)("button", {
                                        onMouseEnter: o,
                                        onMouseLeave: u,
                                        className: l(f.inner, T),
                                        type: "button",
                                        disabled: t,
                                        style: {
                                            backgroundImage: "url('".concat((0, i.isThemeDark)(_) ? g.icon.darkSVG : g.icon.lightSVG, "')")
                                        },
                                        onClick: null != m ? m : () => (function(e) {
                                            let t = d.default.get(e);
                                            (0, c.default)(t.type, "Friends List"), S.default.track(E.AnalyticEvents.ACCOUNT_LINK_STEP, {
                                                previous_step: "desktop connections",
                                                current_step: "desktop oauth",
                                                platform_type: t.type
                                            })
                                        })(s),
                                        "aria-label": g.name
                                    })
                                })
                            })
                        }
                    })
                }
        },
        290110: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("145131"),
                r = s("199421"),
                o = s("926622");

            function d(e) {
                let {
                    features: t
                } = e;
                return (0, a.jsx)(a.Fragment, {
                    children: t.map((e, t) => (0, a.jsxs)(i.default, {
                        align: i.default.Align.CENTER,
                        className: l(o.marginTop20, r.feature, {
                            [r.featureBorder]: 0 !== t
                        }),
                        children: [null != e.icon ? (0, a.jsx)("div", {
                            className: l(r.icon, e.icon)
                        }) : null, (0, a.jsxs)("div", {
                            children: [null != e.title ? (0, a.jsx)("div", {
                                className: l(o.marginBottom8, r.title),
                                children: e.title
                            }) : null, (0, a.jsx)("div", {
                                className: r.description,
                                children: e.description
                            })]
                        })]
                    }, t))
                })
            }
        },
        984557: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            }), s("222007");
            var a, n = s("884691"),
                l = s("979897"),
                i = s("49671"),
                r = s("773336");
            a = class extends n.Component {
                getFileContents() {
                    let {
                        fileContents: e
                    } = this.props;
                    return "function" == typeof e && (e = e()), e
                }
                downloadNative(e, t) {
                    i.default.fileManager.saveWithDialog(e, t)
                }
                downloadHtml5(e, t) {
                    let s = new Blob([e], {
                        type: this.props.contentType
                    });
                    (0, l.saveAs)(s, t)
                }
                render() {
                    let {
                        children: e
                    } = this.props, t = n.Children.only(e);
                    return n.cloneElement(t, {
                        onClick: this.handleFileDownload
                    })
                }
                constructor(...e) {
                    super(...e), this.handleFileDownload = e => {
                        e.preventDefault();
                        let t = this.getFileContents(),
                            {
                                fileName: s,
                                onDownload: a
                            } = this.props;
                        r.isPlatformEmbedded ? this.downloadNative(t, s) : this.downloadHtml5(t, s), null == a || a()
                    }
                }
            }
        },
        278108: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("222007"), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("499032"),
                i = s.n(l),
                r = s("312165"),
                o = s("3958"),
                d = s("773336"),
                u = s("50885"),
                c = s("49111");
            let S = d.isPlatformEmbedded && null != u.default.getDiscordUtils().inputCaptureRegisterElement;
            class E extends n.PureComponent {
                componentDidMount() {
                    this._mounted = !0
                }
                componentWillUnmount() {
                    this._mounted = !1, this.cleanUp()
                }
                componentDidUpdate(e) {
                    this.props.defaultValue !== e.defaultValue && this.setState({
                        codes: this.props.defaultValue
                    })
                }
                cleanUp() {
                    d.isPlatformEmbedded && null != this.gs && (this.gs.destroy(), this.gs = null)
                }
                handleComboChange(e) {
                    let {
                        mode: t
                    } = this.state, {
                        onChange: s
                    } = this.props;
                    t === o.RecordModes.RECORDING && (null != s && s(e), this.setState({
                        codes: e
                    }))
                }
                render() {
                    let e, t;
                    let {
                        codes: s,
                        mode: n
                    } = this.state, {
                        disabled: l
                    } = this.props;
                    return S ? (t = u.default.getDiscordUtils().inputCaptureRegisterElement, e = this.handleNativeChange) : !d.isPlatformEmbedded && (e = this.handleComboKeys), (0, a.jsx)(o.default, {
                        disabled: l,
                        value: s,
                        mode: n,
                        onClick: this.toggleRecordMode,
                        onChange: e,
                        registerNativeRecorder: t,
                        disableOnClickWhileRecording: S
                    })
                }
                constructor(e) {
                    super(e), this._mounted = !1, this.recordStart = () => {
                        d.isPlatformEmbedded && !S && (this.gs = new r.default, this.gs.on("change", this.handleGSChange)), this.setState({
                            mode: o.RecordModes.RECORDING
                        })
                    }, this.recordEnd = () => {
                        this.cleanUp(), this.setState({
                            mode: o.RecordModes.DEFAULT
                        })
                    }, this.toggleRecordMode = () => {
                        this.state.mode === o.RecordModes.DEFAULT ? this.recordStart() : this.recordEnd()
                    }, this.handleComboKeys = (e, t, s) => {
                        if (s.preventDefault(), "keydown" === s.type) {
                            let e = t.map(e => [c.KeyboardDeviceTypes.KEYBOARD_KEY, i(e), c.KeyboardEnvs.BROWSER]),
                                {
                                    keyCode: a
                                } = s;
                            null == e.find(e => {
                                let [, t] = e;
                                return a === t
                            }) && e.push([c.KeyboardDeviceTypes.KEYBOARD_KEY, a, c.KeyboardEnvs.BROWSER]), this.handleComboChange(e)
                        }
                    }, this.handleGSChange = e => {
                        if (!1 === this._mounted) return;
                        let t = [...e.combo];
                        this.handleComboChange(t)
                    }, this.handleNativeChange = e => {
                        e.length > 0 && this.handleComboChange(e), this.recordEnd()
                    };
                    let {
                        defaultValue: t
                    } = e;
                    this.state = {
                        codes: t,
                        mode: o.RecordModes.DEFAULT
                    }
                }
            }
            var f = E
        },
        294490: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            });
            var a, n = s("37983"),
                l = s("884691"),
                i = s("414456"),
                r = s.n(i),
                o = s("944832"),
                d = s("49111"),
                u = s("29577");
            a = class extends l.Component {
                render() {
                    let {
                        className: e,
                        videoID: t,
                        videoClassName: s
                    } = this.props;
                    return (0, n.jsx)(o.default, {
                        aspectRatio: 16 / 9,
                        className: r(e, u.videoWrapper),
                        children: (0, n.jsx)("iframe", {
                            className: r(s, u.video),
                            src: "https://www.youtube.com/embed/".concat(t, "?rel=0&showinfo=0&controls=1&origin=https://").concat(d.PRIMARY_DOMAIN),
                            allowFullScreen: !0,
                            sandbox: "allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"
                        })
                    })
                }
            }
        },
        491589: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                FacebookIcon: function() {
                    return i
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("669491"),
                l = s("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: i = n.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M23 12a11 11 0 1 0-12.72 10.87v-7.69h-2.8V12h2.8V9.58c0-2.76 1.64-4.28 4.16-4.28 1.2 0 2.46.21 2.46.21v2.7H15.5c-1.37 0-1.8.86-1.8 1.73V12h3.06l-.49 3.18h-2.56v7.69A11 11 0 0 0 23 12Z",
                        className: r
                    })
                })
            }
        },
        887560: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                InstagramIcon: function() {
                    return i
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("669491"),
                l = s("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: i = n.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        fillRule: "evenodd",
                        d: "M7 12a5 5 0 1 1 10 0 5 5 0 0 1-10 0Zm5-3a3 3 0 1 0 0 6 3 3 0 0 0 0-6Z",
                        clipRule: "evenodd",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M17.25 8a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        fillRule: "evenodd",
                        d: "M7.86 2.07a7.3 7.3 0 0 0-2.43.47A4.9 4.9 0 0 0 3.66 3.7a4.9 4.9 0 0 0-1.15 1.77 7.35 7.35 0 0 0-.46 2.43C2.01 8.96 2 9.3 2 12.02c0 2.71.02 3.06.07 4.12.05 1.07.22 1.8.47 2.43.26.66.6 1.21 1.16 1.77.55.55 1.11.9 1.77 1.15.64.24 1.36.41 2.43.46 1.06.04 1.4.05 4.12.05 2.71 0 3.06-.02 4.12-.07a6.14 6.14 0 0 0 4.2-1.63 6.15 6.15 0 0 0 1.6-4.2c.05-1.06.06-1.4.06-4.12 0-2.71-.02-3.05-.07-4.12a6.15 6.15 0 0 0-1.63-4.2 6.14 6.14 0 0 0-4.2-1.6C15.04 2 14.7 2 11.98 2c-2.71 0-3.05.02-4.12.07Zm.1 2c-.88.04-1.39.17-1.8.33a2.9 2.9 0 0 0-1.08.7 2.9 2.9 0 0 0-.7 1.09c-.16.4-.29.92-.33 1.8A68.6 68.6 0 0 0 4 12.01c0 2.7.02 3 .07 4.03.04.87.17 1.38.33 1.79.17.42.36.73.7 1.08.35.34.67.54 1.09.7.41.16.92.29 1.8.33 1.01.04 1.32.05 4.03.05 2.7 0 3-.02 4.03-.07 1.28-.06 2.23-.4 2.87-1.04.64-.64.97-1.6 1.03-2.87.04-1.02.05-1.33.05-4.04 0-2.7-.02-3-.07-4.03-.06-1.28-.4-2.23-1.04-2.87-.64-.64-1.6-.97-2.87-1.03A69.44 69.44 0 0 0 11.98 4c-2.7 0-3 .02-4.02.07Z",
                        clipRule: "evenodd",
                        className: r
                    })]
                })
            }
        },
        312165: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            }), s("222007"), s("424973");
            var a, n = s("44170"),
                l = s("773336"),
                i = s("50885"),
                r = s("13798"),
                o = s("49111");
            let d = [],
                u = (e, t, s) => {
                    let a = (0, l.isWindows)() ? 0 : 1;
                    (e !== o.KeyboardDeviceTypes.MOUSE_BUTTON || s !== a) && d.forEach(a => a._handleEvent(e, t, s))
                };
            a = class extends n.EventEmitter {
                destroy() {
                    this.removeAllListeners(), 0 === (d = d.filter(e => e !== this)).length && i.default.setOnInputEventCallback(null)
                }
                toString() {
                    return (0, r.toString)(this.combo)
                }
                _handleEvent(e, t, s) {
                    0 === t ? this.combo = this.combo.filter(t => {
                        let [a, n] = t;
                        return !(a === e && n === s)
                    }) : (this.combo.push([e, s, (0, r.getEnv)()]), this.emit("change", this))
                }
                constructor() {
                    super(), this.combo = [], d.push(this), 1 === d.length && i.default.setOnInputEventCallback(u)
                }
            }
        },
        736642: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("892843"),
                u = s("521012"),
                c = s("191814"),
                S = s("49111"),
                E = s("782340"),
                f = s("261537"),
                T = s("376121"),
                m = s("469414");

            function _(e) {
                let {
                    onClickManageSubscription: t
                } = e, s = (0, r.useStateFromStores)([u.default], () => u.default.getSubscriptions()), l = n.useMemo(() => Object.values(null != s ? s : {}).filter(e => e.type === S.SubscriptionTypes.APPLICATION && e.status !== S.SubscriptionStatusTypes.ENDED), [s]);
                return 0 === l.length ? null : (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: f.sectionTitle,
                        children: E.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_TITLE
                    }), (0, a.jsx)(c.default, {
                        size: 4
                    }), (0, a.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        className: f.sectionDescription,
                        children: E.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_DESCRIPTION
                    }), (0, a.jsx)(c.default, {
                        size: 24
                    }), (0, a.jsxs)("div", {
                        className: i(T.guildBoostingSubscriptionRow, f.card),
                        children: [(0, a.jsx)("img", {
                            src: m,
                            alt: "",
                            className: f.bannerImage
                        }), (0, a.jsxs)("div", {
                            className: f.textContainer,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-xl/semibold",
                                className: f.header,
                                children: E.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_TITLE
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: f.description,
                                children: E.default.Messages.APPLICATION_ACTIVE_USER_SUBSCRIPTIONS_DESCRIPTION.format({
                                    numSubscriptions: l.length
                                })
                            })]
                        }), (0, a.jsx)(d.default, {
                            color: o.Button.Colors.BRAND,
                            onClick: t,
                            children: E.default.Messages.APPLICATION_MANAGE_SUBSCRIPTIONS_BUTTON
                        })]
                    })]
                })
            }
        },
        859561: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return F
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("627445"),
                o = s.n(r),
                d = s("733724"),
                u = s("446674"),
                c = s("77078"),
                S = s("850068"),
                E = s("812204"),
                f = s("685665"),
                T = s("306073"),
                m = s("430780"),
                _ = s("809071"),
                g = s("690679"),
                h = s("388290"),
                I = s("357957"),
                N = s("476263"),
                p = s("555158"),
                C = s("876269"),
                A = s("191814"),
                O = s("476765"),
                x = s("837899"),
                R = s("68238"),
                M = s("956089"),
                v = s("90592"),
                D = s("850644"),
                L = s("191816"),
                P = s("49111"),
                j = s("782340"),
                b = s("563810");
            let U = e => {
                    let {
                        label: t,
                        value: s,
                        showInfoIcon: n,
                        infoIconTooltipText: l
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: b.infoCard,
                        children: [(0, a.jsxs)("div", {
                            className: b.infoCardLabelContainer,
                            children: [(0, a.jsx)(c.Heading, {
                                variant: "heading-deprecated-12/semibold",
                                className: b.infoCardLabel,
                                children: t
                            }), n && (0, a.jsx)(c.Tooltip, {
                                text: l,
                                children: e => (0, a.jsx)(R.default, {
                                    ...e,
                                    className: b.infoCardIcon
                                })
                            })]
                        }), (0, a.jsx)(c.Heading, {
                            variant: "heading-xl/semibold",
                            className: b.infoCardValue,
                            children: s
                        })]
                    })
                },
                B = e => {
                    let {
                        subscription: t,
                        disabled: s
                    } = e, {
                        analyticsLocations: n
                    } = (0, f.default)(), [l] = (0, _.useSubscriptionInvoicePreview)({
                        subscriptionId: t.id,
                        renewal: !0,
                        analyticsLocations: n,
                        analyticsLocation: E.default.APP_SUBSCRIPTION_PAYMENT_SOURCE_WITH_INVOICE
                    }), i = (0, u.useStateFromStores)([I.default], () => I.default.hasFetchedPaymentSources);
                    return i ? null == l ? null : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(c.FormTitle, {
                            children: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAYMENT_METHOD_LABEL
                        }), (0, a.jsx)(g.default, {
                            subscription: t,
                            currentInvoicePreview: l,
                            dropdownClassName: b.paymentSourceDropdown,
                            disabled: s
                        })]
                    }) : (0, a.jsx)(c.Spinner, {})
                },
                y = e => {
                    let {
                        isCancelled: t,
                        onCancelSubscriptionClick: s,
                        isResubscribing: n,
                        onResubscribeClick: l
                    } = e;
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(c.FormTitle, {
                            children: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_LABEL
                        }), (0, a.jsx)("div", {
                            className: b.rowButtons,
                            children: t ? (0, a.jsx)(c.Button, {
                                onClick: l,
                                submitting: n,
                                children: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_RESTART
                            }) : (0, a.jsx)(C.default, {
                                label: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CANCEL,
                                onClick: s
                            })
                        })]
                    })
                };
            var F = e => {
                let {
                    subscription: t
                } = e, {
                    listing: l,
                    groupListing: r,
                    guild: u,
                    expanded: E,
                    handleToggleExpanded: _,
                    subscriptionInfo: g,
                    application: I
                } = (0, L.default)(t), C = (0, O.useUID)(), [R, F] = n.useState(!1), {
                    analyticsLocations: G
                } = (0, f.default)();
                if (null == r || null == l || null == g) return null;
                let k = () => {
                        o(null != I, "Application cannot be null"), (0, c.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await s.el("282941").then(s.bind(s, "282941"));
                            return s => (0, a.jsx)(e, {
                                application: I,
                                listing: l,
                                subscription: t,
                                guild: u,
                                ...s
                            })
                        })
                    },
                    H = async () => {
                        try {
                            F(!0);
                            let {
                                subscription: e
                            } = await S.resubscribeToSubscription(t, G);
                            null != e && (0, c.openModalLazy)(async () => {
                                let {
                                    default: t
                                } = await s.el("507030").then(s.bind(s, "507030"));
                                return s => (0, a.jsx)(t, {
                                    listing: l,
                                    subscription: h.default.createFromServer(e),
                                    ...s
                                })
                            })
                        } finally {
                            F(!1)
                        }
                    }, {
                        isCancelled: w,
                        isDeleted: V,
                        isPastDue: Y,
                        subscriptionPlanPrice: W,
                        subscribedSinceDate: K,
                        currentPeriodEndDate: z,
                        currentPeriodEndLabel: Q
                    } = g, q = (0, v.isApplicationUserSubscription)(l.sku_flags), Z = (0, v.isApplicationGuildSubscription)(l.sku_flags), X = l.soft_deleted || null == I || (!Z || null == u) && !q, J = () => w || V ? (0, a.jsx)(M.TextBadge, {
                        text: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CANCELED
                    }) : Y ? (0, a.jsx)(c.Tooltip, {
                        text: j.default.Messages.APPLICATION_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                        children: e => (0, a.jsx)("div", {
                            ...e,
                            children: (0, a.jsx)(M.TextBadge, {
                                className: b.paymentDueBadge,
                                text: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAST_DUE,
                                color: d.default.YELLOW_300
                            })
                        })
                    }) : null, $ = null;
                if (Z) {
                    var ee;
                    $ = (0, a.jsxs)(c.Text, {
                        variant: "text-sm/normal",
                        className: b.tierName,
                        children: [j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_IN_GUILD.format({
                            guildName: null !== (ee = null == u ? void 0 : u.name) && void 0 !== ee ? ee : j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_GUILD_NAME_UNAVAILABLE
                        }), null != u && (0, a.jsx)(N.default, {
                            guild: u,
                            size: N.default.Sizes.MINI,
                            className: b.guildIcon
                        })]
                    })
                } else q && ($ = (0, a.jsx)(c.Text, {
                    variant: "text-sm/normal",
                    className: b.tierName,
                    children: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_PERSONAL_SUBSCRIPTION
                }));
                return (0, a.jsxs)("div", {
                    className: b.container,
                    children: [(0, a.jsx)(T.default, {
                        onClick: _,
                        className: b.headerContainer,
                        children: e => {
                            let {
                                areaRef: t,
                                handleStopPropagation: s
                            } = e;
                            return (0, a.jsxs)(a.Fragment, {
                                children: [null != I && (0, a.jsx)(D.default, {
                                    size: D.ApplicationIconSize.SMALL,
                                    className: b.applicationIcon,
                                    application: I,
                                    asset: l.image_asset
                                }), (0, a.jsxs)("div", {
                                    className: b.headerTextContainer,
                                    children: [(0, a.jsx)(c.Text, {
                                        variant: "text-md/medium",
                                        className: b.applicationName,
                                        children: null != I ? I.name : j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_APPLICATION_NAME_UNAVAILABLE
                                    }), (0, a.jsxs)("div", {
                                        className: b.headerSubtitleContainer,
                                        children: [$, J()]
                                    })]
                                }), (0, a.jsx)(c.Clickable, {
                                    onClick: s(_),
                                    "aria-label": j.default.Messages.APPLICATION_SUBSCRIPTION_TOGGLE_SECTION_LABEL,
                                    "aria-controls": C,
                                    "aria-expanded": E,
                                    focusProps: {
                                        ringTarget: t
                                    },
                                    children: (0, a.jsx)(x.default, {
                                        className: i(b.arrowIcon, {
                                            [b.arrowIconExpanded]: E
                                        })
                                    })
                                })]
                            })
                        }
                    }), E ? (0, a.jsxs)("div", {
                        id: C,
                        children: [(0, a.jsx)("div", {
                            className: b.divider
                        }), V ? (0, a.jsx)(p.default, {
                            messageType: p.HelpMessageTypes.WARNING,
                            className: b.deletedHelpMessage,
                            children: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_DELETED_WARNING
                        }) : null, (0, a.jsx)(m.default, {
                            groupListingId: r.id,
                            subscription: t,
                            className: b.changePlanNotice
                        }), (0, a.jsxs)("div", {
                            className: b.subscriptionInfoCards,
                            children: [(0, a.jsx)(U, {
                                label: Q,
                                value: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_CURRENT_PERIOD_END_DATE.format({
                                    timestamp: z.getTime()
                                })
                            }), (0, a.jsx)(U, {
                                label: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_PRICE,
                                value: W
                            }), (0, a.jsx)(U, {
                                label: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIBED_SINCE,
                                value: j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIBED_SINCE_DATE.format({
                                    timestamp: K.getTime()
                                })
                            })]
                        }), (0, a.jsx)(A.default, {
                            size: 16
                        }), t.status === P.SubscriptionStatusTypes.ACTIVE && (0, a.jsx)(B, {
                            subscription: t,
                            disabled: V
                        }), !X && (0, a.jsx)(y, {
                            isCancelled: w,
                            onCancelSubscriptionClick: k,
                            isResubscribing: R,
                            onResubscribeClick: H
                        })]
                    }) : null]
                })
            }
        },
        251334: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("521012"),
                r = s("191814"),
                o = s("538137"),
                d = s("650509"),
                u = s("859561"),
                c = s("782340"),
                S = s("282002"),
                E = e => {
                    let {
                        onGoBack: t
                    } = e, s = (0, n.useStateFromStores)([i.default], () => {
                        var e;
                        return null !== (e = i.default.getActiveApplicationSubscriptions()) && void 0 !== e ? e : []
                    }), {
                        loading: E
                    } = (0, d.useFetchListingsForSubscriptions)(s), {
                        loadState: f
                    } = (0, d.useFetchUserApplicationSubscriptionEntitlements)();
                    return E || f !== d.LoadState.LOADED ? (0, a.jsx)(l.Spinner, {}) : 0 === s.length ? null : (0, a.jsxs)("div", {
                        className: S.container,
                        children: [(0, a.jsxs)(l.Button, {
                            look: l.Button.Looks.BLANK,
                            innerClassName: S.backButtonContents,
                            onClick: t,
                            children: [(0, a.jsx)(o.default, {
                                className: S.arrowIcon
                            }), c.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAGE_BACK_CTA]
                        }), (0, a.jsx)(r.default, {
                            size: 10
                        }), (0, a.jsx)(l.FormTitle, {
                            tag: "h1",
                            children: c.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAGE_TITLE
                        }), (0, a.jsx)(l.Text, {
                            variant: "text-sm/normal",
                            className: S.pageDescription,
                            children: c.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAGE_DESCRIPTION
                        }), (0, a.jsx)("div", {
                            className: S.subscriptionsContainer,
                            children: s.map(e => (0, a.jsx)(u.default, {
                                subscription: e
                            }, e.id))
                        })]
                    })
                }
        },
        191816: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            }), s("222007");
            var a = s("884691"),
                n = s("866227"),
                l = s.n(n),
                i = s("446674"),
                r = s("299285"),
                o = s("305961"),
                d = s("437712"),
                u = s("153160"),
                c = s("186211"),
                S = s("90592"),
                E = s("49111"),
                f = s("782340");

            function T(e) {
                let t = (0, S.getApplicationSubscriptionPlanId)(e),
                    s = (0, i.useStateFromStores)([c.default], () => c.default.getSubscriptionListingForPlan(t), [t]),
                    n = (0, i.useStateFromStores)([c.default], () => null != s ? c.default.getSubscriptionGroupListingForSubscriptionListing(s.id) : null, [s]),
                    T = (0, i.useStateFromStores)([d.default], () => {
                        let t = d.default.getForSubscription(e.id);
                        if (null != t) {
                            let [e] = Array.from(t);
                            return e
                        }
                        return null
                    }, [e]),
                    m = (0, i.useStateFromStores)([r.default], () => {
                        if (null == T) return;
                        let e = r.default.getApplication(T.applicationId);
                        if (null != e) return e
                    }, [T]),
                    _ = (0, i.useStateFromStores)([o.default], () => {
                        if (null != T) return o.default.getGuild(T.guildId)
                    }, [T]),
                    [g, h] = a.useState(!1),
                    I = null == s ? void 0 : function(e) {
                        let {
                            listing: t,
                            subscription: s
                        } = e, a = s.currentPeriodEnd, n = t.subscription_plans[0], i = (0, u.formatPrice)(n.price, n.currency), r = s.createdAt, o = s.status === E.SubscriptionStatusTypes.CANCELED, d = t.soft_deleted, c = s.status === E.SubscriptionStatusTypes.PAST_DUE;
                        return {
                            subscribedSinceDate: r,
                            currentPeriodEndDate: a,
                            currentPeriodEndLabel: l().isAfter(s.currentPeriodEnd) ? f.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIPTION_ENDED : f.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIPTION_ENDS,
                            subscriptionPlanPrice: i,
                            isCancelled: o,
                            isDeleted: d,
                            isPastDue: c
                        }
                    }({
                        listing: s,
                        subscription: e
                    });
                return {
                    application: m,
                    guild: _,
                    expanded: g,
                    handleToggleExpanded: () => h(e => !e),
                    listing: s,
                    groupListing: n,
                    subscriptionInfo: I
                }
            }
        },
        158645: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                fetchAuthSessions: function() {
                    return i
                },
                clearAuthSessions: function() {
                    return r
                },
                logOutSessions: function() {
                    return o
                }
            });
            var a = s("872717"),
                n = s("913144"),
                l = s("49111");
            async function i() {
                var e;
                let t = await a.default.get({
                    url: l.Endpoints.AUTH_SESSIONS
                });
                return (null == t ? void 0 : t.ok) && (null === (e = t.body) || void 0 === e ? void 0 : e.user_sessions) != null && n.default.dispatch({
                    type: "FETCH_AUTH_SESSIONS_SUCCESS",
                    sessions: t.body.user_sessions
                }), t
            }

            function r() {
                n.default.dispatch({
                    type: "FETCH_AUTH_SESSIONS_SUCCESS",
                    sessions: []
                })
            }
            async function o(e) {
                if (Array.isArray(e)) {
                    if (0 === e.length) return
                } else e = [e];
                let t = await a.default.post({
                    url: l.Endpoints.AUTH_SESSIONS_LOGOUT,
                    body: {
                        session_id_hashes: e
                    }
                });
                return (null == t ? void 0 : t.ok) && n.default.dispatch({
                    type: "LOGOUT_AUTH_SESSIONS_SUCCESS",
                    sessionIdHashes: e
                }), t
            }
        },
        797175: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            }), s("222007");
            var a = s("446674"),
                n = s("913144");
            let l = [];

            function i() {
                l = []
            }
            class r extends a.default.Store {
                getSessions() {
                    return l
                }
            }
            r.displayName = "AuthSessionsStore";
            var o = new r(n.default, {
                LOGOUT: i,
                LOGIN_SUCCESS: i,
                FETCH_AUTH_SESSIONS_SUCCESS: function(e) {
                    let {
                        sessions: t
                    } = e;
                    l = t.map(e => ({
                        ...e,
                        approx_last_used_time: new Date(e.approx_last_used_time)
                    }))
                },
                LOGOUT_AUTH_SESSIONS_SUCCESS: function(e) {
                    let {
                        sessionIdHashes: t
                    } = e, s = [...l], a = !1;
                    for (let e of t) {
                        let t = s.findIndex(t => t.id_hash === e);
                        t >= 0 && (s.splice(t, 1), a = !0)
                    }
                    if (!a) return !1;
                    l = s
                }
            })
        },
        917454: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useAuthSessions: function() {
                    return u
                },
                formatDate: function() {
                    return c
                }
            }), s("222007");
            var a = s("884691"),
                n = s("866227"),
                l = s.n(n),
                i = s("446674"),
                r = s("271938"),
                o = s("797175"),
                d = s("782340");

            function u() {
                let e = (0, i.useStateFromStoresObject)([o.default], () => o.default.getSessions());
                return a.useMemo(() => {
                    let t = [...e],
                        s = null,
                        a = r.default.getAuthSessionIdHash();
                    if (null != a) {
                        let e = t.findIndex(e => e.id_hash === a);
                        e >= 0 && (s = t.splice(e, 1)[0])
                    }
                    return t.sort((e, t) => t.approx_last_used_time.valueOf() - e.approx_last_used_time.valueOf()), {
                        currentSession: s,
                        otherSessions: t
                    }
                }, [e])
            }

            function c(e) {
                let t = (Date.now() - e.valueOf()) / 1e3 / 60 / 60;
                return t < 1 ? d.default.Messages.AUTH_SESSIONS_ACTIVE_RECENTLY : l(e).fromNow()
            }
        },
        850166: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("222007");
            var a = s("884691"),
                n = s("1501"),
                l = s("337575");
            let i = [];

            function r(e) {
                let {
                    visible: t,
                    autocompleterResultTypes: s,
                    autocompleterOptions: r,
                    autocompleterBeforeCreateSearchContext: o
                } = e, [d, u] = a.useState(""), [c, S] = a.useState(i), E = a.useCallback((e, t) => {
                    "" === (t = t.trim()).trim() ? S(i) : S(e)
                }, []);
                a.useEffect(() => {
                    let e = n.default.addRouteChangeListener(() => {
                        u("")
                    });
                    return e
                }, []);
                let [f] = a.useState(() => new l.default(E, s, void 0, r));
                a.useEffect(() => {
                    t ? (null == o || o(f), f.createSearchContext()) : (f.clean(), u(""))
                }, [t, f, o]);
                let T = a.useCallback(e => {
                    u(e), f.search(e)
                }, [f]);
                return {
                    queryResults: c,
                    query: d,
                    updateQuery: T
                }
            }
        },
        607191: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getBillingAddressLayout: function() {
                    return i
                },
                getOverrideBillingAddressLayout: function() {
                    return r
                }
            });
            var a = s("394846"),
                n = s("18502"),
                l = s("49111");
            let i = e => [l.PaymentSourceTypes.CARD, l.PaymentSourceTypes.VENMO].includes(e.type) && "US" === e.country ? a.isMobile ? n.default.Layouts.SETTINGS_US_MOBILE : n.default.Layouts.SETTINGS_US : e.type === l.PaymentSourceTypes.CARD && "US" !== e.country ? a.isMobile ? n.default.Layouts.SETTINGS_INTL_MOBILE : n.default.Layouts.SETTINGS_INTL : a.isMobile ? n.default.Layouts.SETTINGS_INTL_NO_NAME_MOBILE : n.default.Layouts.SETTINGS_INTL_NO_NAME,
                r = a.isMobile ? n.default.Layouts.SETTINGS_US_MOBILE : n.default.Layouts.SETTINGS_US
        },
        426902: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("586391"),
                i = s("843455"),
                r = {
                    openNewUserAgeGateModal: e => {
                        (0, n.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await s.el("377531").then(s.bind(s, "377531"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        }, {
                            modalKey: l.NEW_USER_AGE_GATE_MODAL_KEY,
                            onCloseRequest: i.NOOP,
                            onCloseCallback: e
                        })
                    },
                    openClaimAccountModal: function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                            t = arguments.length > 1 ? arguments[1] : void 0;
                        (0, n.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await s.el("633156").then(s.bind(s, "633156"));
                            return s => (0, a.jsx)(t, {
                                claimRequired: e,
                                ...s
                            })
                        }, {
                            onCloseRequest: e ? i.NOOP : null,
                            onCloseCallback: t
                        })
                    }
                }
        },
        311207: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("298878"),
                i = s("782340"),
                r = () => (0, a.jsx)(n.TooltipContainer, {
                    text: i.default.Messages.CLIPS_BETA_TAG_HOVER,
                    children: (0, a.jsx)(l.default, {})
                })
        },
        653485: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return L
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("627445"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("913139"),
                u = s("79112"),
                c = s("278108"),
                S = s("584687"),
                E = s("915639"),
                f = s("216503"),
                T = s("42887"),
                m = s("227602"),
                _ = s("773336"),
                g = s("56947"),
                h = s("386045"),
                I = s("30591"),
                N = s("803725"),
                p = s("119052"),
                C = s("80028"),
                A = s("49111"),
                O = s("686298"),
                x = s("397336"),
                R = s("782340"),
                M = s("11103"),
                v = s("180437"),
                D = s("926622");

            function L() {
                let e = (0, r.useStateFromStores)([T.default], () => T.default.getHardwareH264()),
                    {
                        clipsEnabled: t,
                        remindersEnabled: s,
                        decoupledClipsEnabled: l,
                        clipsLength: L,
                        clipsQuality: P
                    } = (0, r.useStateFromStoresObject)([h.default], () => h.default.getSettings()),
                    j = (0, r.useStateFromStores)([h.default], () => h.default.getHardwareClassification()),
                    b = (0, r.useStateFromStores)([m.default], () => m.default.getKeybindForAction(A.GlobalKeybindActions.SAVE_CLIP, !0)),
                    {
                        enableDecoupledGameClipping: U
                    } = S.default.useExperiment({
                        location: "clips_recording_settings"
                    }, {
                        autoTrackExposure: !1
                    }),
                    {
                        showClipsHeaderEntrypoint: B
                    } = g.ClipsExperiment.useExperiment({
                        location: "clips_recording_settings"
                    }, {
                        autoTrackExposure: !1
                    });
                i(null != b, "Save clip keybind unset");
                let y = (0, r.useStateFromStores)([E.default], () => E.default.locale),
                    F = n.useMemo(() => [{
                        value: C.ClipsLengthSettings.SECONDS_30,
                        label: R.default.Messages.CLIPS_LENGTH_SECONDS.format({
                            count: 30
                        })
                    }, {
                        value: C.ClipsLengthSettings.MINUTES_1,
                        label: R.default.Messages.CLIPS_LENGTH_MINUTES.format({
                            count: 1
                        })
                    }, {
                        value: C.ClipsLengthSettings.MINUTES_2,
                        label: R.default.Messages.CLIPS_LENGTH_MINUTES.format({
                            count: 2
                        })
                    }], [y]),
                    G = n.useMemo(() => [{
                        value: O.ApplicationStreamResolutions.RESOLUTION_480,
                        label: R.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: O.ApplicationStreamResolutions.RESOLUTION_480
                        })
                    }, {
                        value: O.ApplicationStreamResolutions.RESOLUTION_720,
                        label: R.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: O.ApplicationStreamResolutions.RESOLUTION_720
                        })
                    }, {
                        value: O.ApplicationStreamResolutions.RESOLUTION_1080,
                        label: R.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: O.ApplicationStreamResolutions.RESOLUTION_1080
                        })
                    }, {
                        value: O.ApplicationStreamResolutions.RESOLUTION_1440,
                        label: R.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: O.ApplicationStreamResolutions.RESOLUTION_1440
                        })
                    }, {
                        value: O.ApplicationStreamResolutions.RESOLUTION_SOURCE,
                        label: R.default.Messages.SCREENSHARE_SOURCE
                    }], [y]),
                    k = n.useMemo(() => [{
                        value: O.ApplicationStreamFPS.FPS_15,
                        label: R.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                            fps: O.ApplicationStreamFPS.FPS_15
                        })
                    }, {
                        value: O.ApplicationStreamFPS.FPS_30,
                        label: R.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                            fps: O.ApplicationStreamFPS.FPS_30
                        })
                    }, {
                        value: O.ApplicationStreamFPS.FPS_60,
                        label: R.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                            fps: O.ApplicationStreamFPS.FPS_60
                        })
                    }], [y]),
                    H = n.useCallback(e => {
                        d.default.setKeybind({
                            ...b,
                            shortcut: e
                        })
                    }, [b]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(o.FormSection, {
                        disabled: !e,
                        children: [!e && (0, a.jsx)(f.default, {
                            look: f.InfoBoxLooks.WARNING,
                            className: v.formItem,
                            children: R.default.Messages.CLIPS_SETTINGS_HW_ENCODING_MUST_BE_ENABLED_INFOBOX.format({
                                onClick: () => u.default.open(A.UserSettingsSections.VOICE, null, {
                                    scrollPosition: x.UserSettingsScrollPositions.VoiceAndVideoScrollPositions.HARDWARE_ACCELERATION
                                })
                            })
                        }), j === I.ClipsHardwareClassification.BELOW_MINIMUM ? (0, a.jsx)(f.default, {
                            look: f.InfoBoxLooks.WARNING,
                            className: v.formItem,
                            children: R.default.Messages.CLIPS_SETTINGS_UNDER_MIN_SPECS
                        }) : null, (0, a.jsx)(o.FormSwitch, {
                            hideBorder: !0,
                            disabled: !e,
                            className: v.formItem,
                            value: t,
                            note: R.default.Messages.CLIPS_SETTINGS_ENABLE_CLIPS_HELP,
                            onChange: e => N.updateClipsEnabled({
                                clipsEnabled: e,
                                trackAnalytics: !0
                            }),
                            children: R.default.Messages.CLIPS_SETTINGS_ENABLE_CLIPS
                        }), e && (0, a.jsx)(f.default, {
                            className: v.formItem,
                            children: R.default.Messages.CLIPS_SETTINGS_QUALITY_INFOBOX
                        })]
                    }), U && (0, _.isWindows)() && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.FormDivider, {}), (0, a.jsx)(o.FormSection, {
                            className: D.marginTop20,
                            disabled: !e,
                            children: (0, a.jsx)(o.FormSwitch, {
                                hideBorder: !0,
                                disabled: !e,
                                className: v.formItem,
                                value: l,
                                note: R.default.Messages.CLIPS_SETTINGS_ENABLE_DECOUPLED_CLIPS_HELP,
                                onChange: e => N.updateDecoupledClipsEnabled({
                                    enabled: e,
                                    trackAnalytics: !0
                                }),
                                children: R.default.Messages.CLIPS_SETTINGS_ENABLE_DECOUPLED_CLIPS
                            })
                        })]
                    }), B && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.FormDivider, {}), (0, a.jsx)(o.FormSection, {
                            className: D.marginTop20,
                            children: (0, a.jsx)(o.FormSwitch, {
                                hideBorder: !0,
                                className: v.formItem,
                                value: s,
                                note: R.default.Messages.CLIPS_SETTINGS_ENABLE_REMINDERS_HELP,
                                onChange: e => N.updateRemindersEnabled(e),
                                children: R.default.Messages.CLIPS_SETTINGS_ENABLE_REMINDERS
                            })
                        })]
                    }), (0, a.jsx)(o.FormDivider, {}), (0, a.jsxs)(o.FormSection, {
                        className: D.marginTop20,
                        children: [(0, a.jsx)(p.SelectItem, {
                            className: v.formItem,
                            select: N.updateClipsLength,
                            title: R.default.Messages.CLIPS_SETTINGS_LENGTH,
                            note: R.default.Messages.CLIPS_SETTINGS_LENGTH_HELP,
                            value: L,
                            options: F
                        }), (0, a.jsx)(p.SelectItem, {
                            className: v.formItem,
                            select: e => N.updateClipsQuality({
                                resolution: e,
                                frameRate: P.frameRate
                            }),
                            title: R.default.Messages.CLIPS_SETTINGS_RESOLUTION,
                            note: R.default.Messages.CLIPS_SETTINGS_RESOLUTION_NOTE,
                            value: P.resolution,
                            options: G
                        }), (0, a.jsx)(p.SelectItem, {
                            className: v.formItem,
                            select: e => N.updateClipsQuality({
                                resolution: P.resolution,
                                frameRate: e
                            }),
                            title: R.default.Messages.CLIPS_SETTINGS_FRAMERATE,
                            note: R.default.Messages.CLIPS_SETTINGS_FRAMERATE_NOTE,
                            value: P.frameRate,
                            options: k
                        }), (0, a.jsx)(p.InputItem, {
                            className: v.formItem,
                            title: R.default.Messages.CLIPS_SETTINGS_KEYBIND,
                            note: R.default.Messages.CLIPS_SETTINGS_KEYBIND_HELP,
                            children: (0, a.jsx)("div", {
                                className: M.keyRecorder,
                                children: (0, a.jsx)(c.default, {
                                    defaultValue: b.shortcut,
                                    onChange: H
                                })
                            })
                        })]
                    })]
                })
            }
        },
        824357: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return p
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("151426"),
                r = s("77078"),
                o = s("685665"),
                d = s("10641"),
                u = s("103979"),
                c = s("845579"),
                S = s("56947"),
                E = s("386045"),
                f = s("803725"),
                T = s("311207"),
                m = s("653485"),
                _ = s("462491"),
                g = s("782340"),
                h = s("577199"),
                I = s("180437"),
                N = s("926622");

            function p() {
                let e = c.ClipsAllowVoiceRecording.useSetting(),
                    {
                        enableViewerClipping: t
                    } = u.default.useExperiment({
                        location: "Clips Settings"
                    }, {
                        autoTrackExposure: !1
                    }),
                    {
                        AnalyticsLocationProvider: s
                    } = (0, o.default)(),
                    p = (0, S.useEnableClips)(),
                    {
                        viewerClipsEnabled: C
                    } = (0, l.useStateFromStoresObject)([E.default], () => E.default.getSettings());
                return n.useEffect(() => {
                    (0, d.markDismissibleContentAsDismissed)(i.DismissibleContent.CLIPS_SETTINGS_BETA_TAG)
                }), (0, a.jsxs)(s, {
                    children: [(0, a.jsx)(r.FormSection, {
                        tag: r.FormTitleTags.H1,
                        title: (0, a.jsxs)("div", {
                            className: h.headerContainer,
                            children: [g.default.Messages.CLIPS, (0, a.jsx)(T.default, {})]
                        }),
                        children: p && (0, a.jsxs)("form", {
                            onSubmit: e => e.preventDefault(),
                            children: [(0, a.jsx)(m.default, {}), (0, a.jsx)(_.default, {})]
                        })
                    }), p && (0, a.jsx)(r.FormDivider, {}), (0, a.jsxs)(r.FormSection, {
                        className: N.marginTop20,
                        children: [(0, a.jsx)(r.FormSwitch, {
                            hideBorder: !0,
                            className: I.formItem,
                            value: e,
                            note: g.default.Messages.CLIPS_SETTINGS_OPT_OUT_OF_VOICE_RECORDING_DESCRIPTION,
                            onChange: e => f.updateAllowVoiceRecording({
                                allowVoiceRecording: e
                            }),
                            children: g.default.Messages.CLIPS_SETTINGS_OPT_OUT_OF_VOICE_RECORDING
                        }), t && (0, a.jsx)(r.FormSwitch, {
                            hideBorder: !0,
                            className: I.formItem,
                            value: C,
                            note: g.default.Messages.CLIPS_SETTINGS_VIEWERSIDE_CLIPS_TOGGLE_DESCRIPTION,
                            onChange: e => f.updateViewerClipsEnabled(e),
                            children: g.default.Messages.CLIPS_SETTINGS_VIEWERSIDE_CLIPS_TOGGLE
                        })]
                    })]
                })
            }
        },
        462491: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("49671"),
                r = s("386045"),
                o = s("803725"),
                d = s("119052"),
                u = s("49111"),
                c = s("782340"),
                S = s("180437");

            function E() {
                let e = (0, n.useStateFromStores)([r.default], () => r.default.getSettings().storageLocation);
                return (0, a.jsx)(l.FormSection, {
                    children: (0, a.jsx)(d.TextInputItem, {
                        className: S.formItem,
                        title: c.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION,
                        note: c.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION_HELP,
                        value: e,
                        editable: !1,
                        onClick: async () => {
                            let e = await i.default.fileManager.showOpenDialog({
                                properties: ["openDirectory", "createDirectory"]
                            });
                            e.length > 0 && o.updateClipsStorageLocation(e[0])
                        },
                        onChange: u.NOOP_NULL
                    })
                })
            }
        },
        119052: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                InputItem: function() {
                    return o
                },
                SelectItem: function() {
                    return d
                },
                TextInputItem: function() {
                    return u
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("666870");

            function o(e) {
                let {
                    title: t,
                    note: s,
                    children: n,
                    className: o
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(r.inputItem, o),
                    children: [(0, a.jsxs)("div", {
                        className: r.inputItemText,
                        children: [(0, a.jsx)(i.Text, {
                            className: r.inputItemTitle,
                            variant: "text-md/medium",
                            color: "interactive-active",
                            children: t
                        }), null != s && (0, a.jsx)(i.FormText, {
                            className: r.note,
                            type: i.FormText.Types.DESCRIPTION,
                            children: s
                        })]
                    }), n]
                })
            }

            function d(e) {
                let {
                    options: t,
                    value: s,
                    select: n,
                    selectClassName: d,
                    ...u
                } = e;
                return (0, a.jsx)(o, {
                    ...u,
                    children: (0, a.jsx)(i.Select, {
                        className: l(r.selectControl, d),
                        options: t,
                        isSelected: e => e === s,
                        select: n,
                        serialize: e => String(e)
                    })
                })
            }

            function u(e) {
                let {
                    value: t,
                    onChange: s,
                    editable: n,
                    textInputClassName: d,
                    onClick: u,
                    ...c
                } = e;
                return (0, a.jsx)(o, {
                    ...c,
                    children: (0, a.jsx)(i.TextInput, {
                        onClick: u,
                        editable: n,
                        className: l(r.selectControl, d),
                        value: t,
                        onChange: s
                    })
                })
            }
        },
        235898: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            }), s("222007");
            var a = s("884691"),
                n = s("65597"),
                l = s("875212"),
                i = s("21526"),
                r = s("853987"),
                o = s("775416");

            function d() {
                var e;
                let t = "useFetchCollectiblesCategoriesAndPurchases";
                (0, l.useTriggerDebuggingAA)({
                    location: t + " auto on",
                    autoTrackExposure: !0
                }), (0, l.useTriggerDebuggingAA)({
                    location: t + " auto off",
                    autoTrackExposure: !1
                });
                let {
                    isFetching: s,
                    categories: d,
                    error: u
                } = function() {
                    let e = "useMaybeFetchCollectiblesCategories";
                    (0, l.useTriggerDebuggingAA)({
                        location: e + " auto on",
                        autoTrackExposure: !0
                    }), (0, l.useTriggerDebuggingAA)({
                        location: e + " auto off",
                        autoTrackExposure: !1
                    });
                    let [t, s, o, d] = (0, n.useStateFromStoresArray)([r.default], () => {
                        var e;
                        return [r.default.isFetching, r.default.error, null !== (e = r.default.lastFetched) && void 0 !== e ? e : 0, r.default.categories]
                    });
                    return (0, a.useEffect)(() => {
                        !(t || s || Date.now() - o < 6e5) && (0, i.fetchCollectiblesCategories)()
                    }, [t, o, s]), {
                        isFetching: t,
                        categories: d,
                        error: s
                    }
                }(), {
                    isClaiming: c,
                    fetchError: S,
                    claimError: E,
                    isFetching: f,
                    purchases: T
                } = function() {
                    let e = "useFetchPurchases";
                    (0, l.useTriggerDebuggingAA)({
                        location: e + " auto on",
                        autoTrackExposure: !0
                    }), (0, l.useTriggerDebuggingAA)({
                        location: e + " auto off",
                        autoTrackExposure: !1
                    });
                    let [t, s, r, d, u] = (0, n.useStateFromStoresArray)([o.default], () => [o.default.isFetching, o.default.isClaiming, o.default.fetchError, o.default.claimError, o.default.purchases]);
                    return (0, a.useEffect)(() => {
                        (0, i.fetchCollectiblesPurchases)()
                    }, []), {
                        isClaiming: s,
                        fetchError: r,
                        claimError: d,
                        isFetching: t,
                        purchases: u
                    }
                }(), m = null !== (e = null != u ? u : S) && void 0 !== e ? e : E;
                return {
                    isFetching: s || f,
                    isFetchingCategories: s,
                    isFetchingPurchases: f,
                    isClaiming: c,
                    categories: d,
                    purchases: T,
                    error: m
                }
            }
        },
        345210: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("222007");
            var a = s("884691"),
                n = s("853987"),
                l = s("491232"),
                i = s("235898"),
                r = e => {
                    let [t, s] = a.useState(), {
                        categories: r
                    } = (0, i.default)();
                    return a.useEffect(() => {
                        (null == t || 0 === t.size) && s(r)
                    }, [r, t]), a.useMemo(() => {
                        if (null != e) return e;
                        if (null == t) return;
                        let s = (0, l.getAvatarDecorationsFromCategories)(t),
                            a = s.filter(e => {
                                let {
                                    skuId: t
                                } = e, s = n.default.getProduct(t);
                                return (0, l.isPremiumCollectiblesProduct)(s)
                            });
                        return a[Math.floor(Math.random() * a.length)]
                    }, [t, e])
                }
        },
        793346: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("222007");
            var a = s("884691"),
                n = s("853987"),
                l = s("491232"),
                i = s("235898"),
                r = e => {
                    let [t, s] = a.useState(), {
                        categories: r
                    } = (0, i.default)();
                    return a.useEffect(() => {
                        (null == t || 0 === t.size) && s(r)
                    }, [r, t]), a.useMemo(() => {
                        if (null != e) return e;
                        if (null == t) return;
                        let s = (0, l.getProfileEffectsFromCategories)(t),
                            a = s.filter(e => {
                                let {
                                    skuId: t
                                } = e, s = n.default.getProduct(t);
                                return (0, l.isPremiumCollectiblesProduct)(s)
                            }).map(e => e.id);
                        return a[Math.floor(Math.random() * a.length)]
                    }, [t, e])
                }
        },
        104385: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("794252");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("506838"),
                o = s("65597"),
                d = s("77078"),
                u = s("812204"),
                c = s("685665"),
                S = s("697218"),
                E = s("599110"),
                f = s("719923"),
                T = s("21526"),
                m = s("411691"),
                _ = s("49111"),
                g = s("646718"),
                h = s("782340"),
                I = s("439985");
            let N = () => (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        className: I.artContainer,
                        "aria-hidden": !0,
                        role: "presentation",
                        children: (0, a.jsx)("img", {
                            src: s("280414"),
                            className: I.art,
                            alt: " "
                        })
                    }), (0, a.jsxs)("div", {
                        className: I.mainColumn,
                        children: [(0, a.jsx)(d.Heading, {
                            variant: "heading-lg/bold",
                            color: "always-white",
                            className: I.title,
                            children: h.default.Messages.PROFILE_EFFECTS_HERO_BANNER_TITLE
                        }), (0, a.jsx)(d.Text, {
                            className: I.textBody,
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: h.default.Messages.PROFILE_EFFECTS_HERO_BANNER_SUBTITLE
                        })]
                    })]
                }),
                p = () => (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        className: I.artContainer,
                        "aria-hidden": !0,
                        role: "presentation",
                        children: (0, a.jsx)("img", {
                            src: s("872702"),
                            className: i([I.art, I.artJan2024]),
                            alt: " ",
                            width: "143"
                        })
                    }), (0, a.jsxs)("div", {
                        className: I.mainColumn,
                        children: [(0, a.jsx)(d.Heading, {
                            variant: "heading-lg/bold",
                            color: "always-white",
                            className: I.title,
                            children: h.default.Messages.COLLECTIBLES_SFA_TITLE
                        }), (0, a.jsx)(d.Text, {
                            className: I.textBody,
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: h.default.Messages.COLLECTIBLES_SFA_BANNER_DESCRIPTION
                        })]
                    })]
                }),
                C = () => (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        className: I.artContainer,
                        "aria-hidden": !0,
                        role: "presentation",
                        children: (0, a.jsx)("img", {
                            src: s("525109"),
                            className: I.art,
                            alt: " "
                        })
                    }), (0, a.jsxs)("div", {
                        className: I.mainColumn,
                        children: [(0, a.jsx)(d.Heading, {
                            variant: "heading-lg/extrabold",
                            color: "always-white",
                            className: I.title,
                            children: h.default.Messages.USER_PROFILE_SETTINGS_SHOP_FOR_ALL_BANNER_HEADER
                        }), (0, a.jsx)(d.Text, {
                            className: I.textBody,
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: h.default.Messages.USER_PROFILE_SETTINGS_SHOP_FOR_ALL_BANNER_SUBHEADER
                        })]
                    })]
                }),
                A = e => {
                    let {
                        variation: t
                    } = e;
                    return (0, r.match)(t).with(m.CollectiblesShopMarketingVariants.WINTER_2023_DROP, () => (0, a.jsx)(C, {})).with(m.CollectiblesShopMarketingVariants.MONSTER_DROP, () => (0, a.jsx)(p, {})).otherwise(() => (0, a.jsx)(N, {}))
                };
            var O = () => {
                let {
                    analyticsLocations: e
                } = (0, c.default)(u.default.COLLECTIBLES_PROFILE_SETTINGS_UPSELL), t = n.useRef(null), s = (0, m.default)("CollectiblesUpsellBanner"), l = (0, o.default)([S.default], () => S.default.getCurrentUser()), N = !f.default.canUseCollectibles(l);
                return n.useEffect(() => {
                    E.default.track(_.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: g.PremiumUpsellTypes.COLLECTIBLES_PROFILE_SETTINGS_UPSELL,
                        location_stack: e
                    })
                }, [e]), (0, a.jsxs)("div", {
                    ref: t,
                    className: i(I.container, (0, r.match)(s).with(m.CollectiblesShopMarketingVariants.WINTER_2023_DROP, () => I.shopForAllWinterBackground).with(m.CollectiblesShopMarketingVariants.MONSTER_DROP, () => I.shopForAllBackgroundImage).otherwise(() => N ? I.shopForAllBackgroundImage : void 0)),
                    children: [(0, a.jsx)(A, {
                        variation: s
                    }), (0, a.jsx)(d.Button, {
                        onClick: () => {
                            (0, T.openCollectiblesShop)({
                                analyticsLocations: e,
                                analyticsSource: u.default.COLLECTIBLES_PROFILE_SETTINGS_UPSELL
                            })
                        },
                        className: I.ctaButton,
                        look: d.Button.Looks.INVERTED,
                        children: (0, r.match)(s).with(m.CollectiblesShopMarketingVariants.WINTER_2023_DROP, () => h.default.Messages.CHECK_IT_OUT).otherwise(() => h.default.Messages.COLLECTIBLES_CTA_GO_TO_SHOP)
                    })]
                })
            }
        },
        811199: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                DevToolsLayerContainer: function() {
                    return o
                },
                DevToolsLayerProvider: function() {
                    return d
                },
                devToolsLayerContext: function() {
                    return u
                }
            });
            var a = s("77078");
            let {
                Layer: n,
                LayerContainer: l,
                LayerProvider: i,
                layerContext: r
            } = (0, a.createLayer)("DevTools"), o = l, d = i, u = r
        },
        192845: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return A
                }
            }), s("222007"), s("311790"), s("477657"), s("811875"), s("90301"), s("652153"), s("28797"), s("817884"), s("597349"), s("667536"), s("690341"), s("843762");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("151426"),
                d = s("95410"),
                u = s("77078"),
                c = s("872173"),
                S = s("374363"),
                E = s("145131"),
                f = s("810567"),
                T = s("258078"),
                m = s("674268"),
                _ = s("585653"),
                g = s("989691"),
                h = s("862853"),
                I = s("47317"),
                N = s("926622");

            function p(e) {
                let {
                    contents: t,
                    content: s,
                    onChange: n
                } = e, l = (0, m.hasBit)(t, o.DismissibleContent[s]);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsx)(u.FormSwitch, {
                        value: l,
                        onChange: function() {
                            n(s), l ? (0, c.removeDismissedContent)(o.DismissibleContent[s]) : (0, c.addDismissedContent)(o.DismissibleContent[s])
                        },
                        children: (0, a.jsx)(u.FormText, {
                            size: T.default.Sizes.SIZE_16,
                            className: N.marginTop4,
                            children: "".concat(s.toLowerCase(), " (").concat(o.DismissibleContent[s], ")")
                        })
                    })
                })
            }

            function C(e) {
                let {
                    items: t,
                    dismissedContents: s,
                    handleChange: n
                } = e;
                return (0, a.jsx)(a.Fragment, {
                    children: t.filter(e => isNaN(Number(e))).map(e => (0, a.jsx)(p, {
                        contents: s,
                        content: e,
                        onChange: n
                    }, e))
                })
            }

            function A() {
                var e;
                let t = (0, h.default)(e => e.recentlyShown),
                    {
                        dailyCapReached: s,
                        dailyCapOverridden: l
                    } = (0, r.useStateFromStoresObject)([g.default], () => ({
                        dailyCapReached: g.default.hasUserHitDCCap(),
                        dailyCapOverridden: g.default.dailyCapOverridden
                    })),
                    [T, m] = n.useState(""),
                    p = null !== (e = (0, r.useStateFromStores)([S.default], () => {
                        var e;
                        return null === (e = S.default.settings.userContent) || void 0 === e ? void 0 : e.dismissedContents
                    })) && void 0 !== e ? e : new Uint8Array,
                    [A, O] = function(e, t) {
                        let [s, a] = n.useState(() => {
                            let s = d.default.get(e);
                            return null != s ? s : t
                        });
                        return n.useEffect(() => {
                            d.default.set(e, s)
                        }, [e, s]), [s, a]
                    }("RecentDismissibleOverrides", []),
                    x = e => {
                        O(t => {
                            let s = new Set(t);
                            s.delete(e);
                            let a = Array.from(s).slice(0, 4);
                            return a.unshift(e), a
                        })
                    },
                    R = t.map(e => o.DismissibleContent[e]),
                    M = A.filter(e => e.toLowerCase().includes(T.toLowerCase())).filter(e => !R.includes(e)),
                    v = Object.keys(o.DismissibleContent).filter(e => !R.includes(e)).filter(e => !A.includes(e)).filter(e => e.toLowerCase().includes(T.toLowerCase())).sort((e, t) => e.localeCompare(t));
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.FormSection, {
                        title: "Dismissible Content Fatigue",
                        tag: u.FormTitleTags.H1,
                        className: N.marginBottom60,
                        children: [(0, a.jsx)(u.FormItem, {
                            children: (0, a.jsxs)(u.FormText, {
                                className: N.marginBottom4,
                                children: ["Daily Cap Reached: ", s ? "Yes" : "No"]
                            })
                        }), (0, a.jsx)(u.FormSwitch, {
                            value: l,
                            onChange: _.overrideDismissibleContentFramework,
                            children: "Override Dismissible Content Daily Cap"
                        }), (0, a.jsxs)(u.FormItem, {
                            children: [(0, a.jsx)(u.Button, {
                                onClick: () => (0, _.resetDismissibleContentFrameworkStore)(),
                                children: "Reset DismissibleContentFrameworkStore"
                            }), (0, a.jsx)(u.FormText, {
                                className: N.marginTop4,
                                children: "This will reset the daily cap and content seen during session"
                            })]
                        })]
                    }), (0, a.jsxs)(u.FormSection, {
                        title: "Dismissible Contents",
                        tag: u.FormTitleTags.H1,
                        children: [(0, a.jsx)(f.default, {
                            className: N.marginBottom20,
                            size: f.default.Sizes.LARGE,
                            query: T,
                            onChange: m,
                            onClear: () => m("")
                        }), (0, a.jsxs)(u.FormItem, {
                            className: I.buttonsContainer,
                            children: [(0, a.jsx)(u.Button, {
                                onClick: c.clearDismissedContents,
                                children: "Clear All Dismissed Contents"
                            }), (0, a.jsx)(u.Button, {
                                onClick: c.checkAllDismissedContents,
                                children: "Check All Dismissed Contents"
                            })]
                        }), t.length > 0 ? (0, a.jsxs)("div", {
                            className: N.marginBottom20,
                            children: [(0, a.jsx)("div", {
                                className: N.marginBottom20,
                                children: (0, a.jsx)(u.FormTitle, {
                                    children: "Recently Shown"
                                })
                            }), (0, a.jsx)(C, {
                                items: R,
                                dismissedContents: p,
                                handleChange: x
                            })]
                        }) : null, M.length > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)("div", {
                                className: N.marginBottom20,
                                children: (0, a.jsx)(u.FormTitle, {
                                    children: "Recent Overrides"
                                })
                            }), (0, a.jsx)(C, {
                                items: M,
                                dismissedContents: p,
                                handleChange: x
                            })]
                        }) : null, (0, a.jsx)(E.default, {
                            className: i(N.marginBottom20, N.marginTop20),
                            children: (0, a.jsx)(u.FormTitle, {
                                children: "Available Dismissible Contents"
                            })
                        }), (0, a.jsx)(C, {
                            items: v,
                            dismissedContents: p,
                            handleChange: x
                        })]
                    })]
                })
            }
        },
        778695: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                DropsCopyCodeModalContent: function() {
                    return T
                },
                DropsModalClaimErrorBody: function() {
                    return m
                },
                default: function() {
                    return _
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("913144"),
                o = s("545158"),
                d = s("476765"),
                u = s("376152"),
                c = s("180273"),
                S = s("579565"),
                E = s("782340"),
                f = s("519874");

            function T(e) {
                let {
                    onClose: t,
                    code: s,
                    copyInputTitle: n,
                    bodyText: l
                } = e;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(i.ModalHeader, {
                        separator: !1,
                        className: f.headerContainer,
                        children: [(0, a.jsx)("div", {
                            className: f.dropArt
                        }), (0, a.jsx)(i.Heading, {
                            variant: "heading-xl/semibold",
                            children: E.default.Messages.OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE
                        })]
                    }), (0, a.jsxs)(i.ModalContent, {
                        className: f.modalContent,
                        children: [(0, a.jsx)(i.Text, {
                            variant: "text-md/normal",
                            className: f.codeBodyText,
                            children: l
                        }), (0, a.jsx)(i.FormDivider, {
                            className: f.formDivider
                        }), (0, a.jsx)(i.FormSection, {
                            title: n,
                            className: f.formSection,
                            children: (0, a.jsx)(i.Button, {
                                onClick: () => (0, o.default)(s),
                                color: i.Button.Colors.BRAND,
                                look: i.Button.Looks.FILLED,
                                children: E.default.Messages.GIFT_EMBED_BUTTON_CLAIM
                            })
                        })]
                    }), (0, a.jsx)(i.ModalFooter, {
                        className: f.modalFooter,
                        children: (0, a.jsx)(i.Button, {
                            className: f.closeButton,
                            onClick: t,
                            look: i.Button.Looks.LINK,
                            color: f.closeButton,
                            children: E.default.Messages.CLOSE
                        })
                    })]
                })
            }

            function m(e) {
                let {
                    onClose: t,
                    errorCode: s
                } = e, n = {
                    26e4: E.default.Messages.DROPS_USER_NOT_ENROLLED_ERROR,
                    260001: E.default.Messages.DROPS_QUEST_NOT_COMPLETED_ERROR,
                    260002: E.default.Messages.DROPS_NO_CODE_AVAILABLE_ERROR,
                    260003: E.default.Messages.DROPS_CODE_ALREADY_CLAIMED_ERROR
                }, l = E.default.Messages.GENERIC_ERROR_BODY;
                return null != n[s] && (l = n[s]), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(i.ModalHeader, {
                        separator: !1,
                        className: f.errorHeader,
                        children: [(0, a.jsx)("div", {
                            className: f.errorArt
                        }), (0, a.jsx)(i.Heading, {
                            variant: "heading-xl/semibold",
                            children: E.default.Messages.GENERIC_ERROR_TITLE
                        })]
                    }), (0, a.jsx)(i.ModalContent, {
                        className: f.errorBody,
                        children: (0, a.jsx)(i.Text, {
                            variant: "text-md/normal",
                            className: f.bodyText,
                            children: l
                        })
                    }), (0, a.jsx)(i.ModalFooter, {
                        children: (0, a.jsx)(i.Button, {
                            color: i.Button.Colors.BRAND,
                            onClick: t,
                            children: E.default.Messages.CLOSE
                        })
                    })]
                })
            }
            var _ = function(e) {
                let {
                    onClose: t,
                    code: o,
                    drop: m,
                    platform: _,
                    transitionState: g
                } = e, h = (0, d.useUID)(), [I, N] = n.useState();
                n.useEffect(() => {
                    null == o && r.default.wait(async () => {
                        await (0, u.fetchCodePlatformAvailability)(m.dropsQuestId)
                    })
                }, [m.dropsQuestId, o]);
                let p = (0, l.useStateFromStores)([c.default], () => c.default.platformAvailability);
                return (0, a.jsx)(i.ModalRoot, {
                    transitionState: g,
                    "aria-labelledby": h,
                    children: (0, a.jsx)(a.Fragment, {
                        children: (() => {
                            if (null != o) return (0, a.jsx)(T, {
                                bodyText: m.messages.claimTip(),
                                onClose: t,
                                copyInputTitle: E.default.Messages.DROPS_REDEMPTION_CODE_PLATFORM_TITLE.format({
                                    platform: _
                                }),
                                code: o
                            });
                            {
                                if (null === p) return (0, a.jsx)("div", {
                                    className: f.spinnerContainer,
                                    children: (0, a.jsx)(i.Spinner, {})
                                });
                                let e = p.length > 0,
                                    n = 1 === p.length;
                                return (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsxs)(i.ModalHeader, {
                                        separator: !1,
                                        className: f.headerContainer,
                                        children: [(0, a.jsx)("div", {
                                            className: f.dropArt
                                        }), (0, a.jsx)(i.Heading, {
                                            variant: "heading-lg/semibold",
                                            children: E.default.Messages.OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE
                                        })]
                                    }), (0, a.jsxs)(i.ModalContent, {
                                        children: [(0, a.jsx)(i.Text, {
                                            variant: "text-md/normal",
                                            className: f.dropBodyText,
                                            children: n ? E.default.Messages.DROPS_MODAL_CHOOSE_SINGLE_PLATFORM.format({
                                                platform: (0, S.getPlatformLabel)(p[0])
                                            }) : E.default.Messages.DROPS_MODAL_CHOOSE_PLATFORM.format({
                                                title: m.title
                                            })
                                        }), (0, a.jsx)(i.FormDivider, {
                                            className: f.formDivider
                                        }), (0, a.jsxs)(i.FormSection, {
                                            className: f.dropFormSection,
                                            children: [(0, a.jsx)(i.SingleSelect, {
                                                onChange: N,
                                                options: p.map(e => ({
                                                    value: e,
                                                    label: (0, S.getPlatformLabel)(e)
                                                })),
                                                value: n ? p[0] : I,
                                                isDisabled: !e,
                                                className: e ? "" : f.selectDangerBorder,
                                                look: e ? i.SelectLooks.FILLED : i.SelectLooks.CUSTOM
                                            }), !e && (0, a.jsx)(i.Text, {
                                                variant: "text-sm/medium",
                                                color: "text-danger",
                                                className: f.errorCodesText,
                                                children: E.default.Messages.DROPS_CODES_RAN_OUT
                                            })]
                                        })]
                                    }), (0, a.jsxs)(i.ModalFooter, {
                                        children: [e && (0, a.jsx)(i.Button, {
                                            color: i.Button.Colors.BRAND,
                                            onClick: () => {
                                                (0, i.openModalLazy)(async () => {
                                                    let {
                                                        default: e
                                                    } = await s.el("343495").then(s.bind(s, "343495"));
                                                    return s => (void 0 !== I || n) && (0, a.jsx)(e, {
                                                        ...s,
                                                        platform: void 0 === I ? p[0] : I,
                                                        code: o,
                                                        dropsQuestId: m.dropsQuestId,
                                                        closeParentModal: t,
                                                        singlePlatformClaim: n
                                                    })
                                                })
                                            },
                                            disabled: void 0 === I && !n,
                                            children: E.default.Messages.UNLOCK_CODE
                                        }), e ? (0, a.jsx)(i.Button, {
                                            onClick: t,
                                            look: i.Button.Looks.LINK,
                                            color: f.maybeLaterButton,
                                            children: E.default.Messages.MAYBE_LATER
                                        }) : (0, a.jsx)(i.Button, {
                                            onClick: t,
                                            look: i.Button.Looks.LINK,
                                            color: f.closeButton,
                                            children: E.default.Messages.CLOSE
                                        })]
                                    })]
                                })
                            }
                        })()
                    })
                })
            }
        },
        260518: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, s("296892").default)({
                kind: "user",
                id: "2023-08_aa_imbalance_remediation",
                label: "AA test to validate fallback trigger and location frequency change",
                defaultConfig: {
                    isEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "AA test enabled. Noop on UI effect.",
                    config: {
                        isEnabled: !0
                    }
                }]
            })
        },
        810549: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                watchCandidateGames: function() {
                    return i
                },
                stopWatchingCandidateGames: function() {
                    return r
                }
            }), s("70102");
            var a = s("913144"),
                n = s("773336"),
                l = s("50885");

            function i() {
                if (!(0, n.isDesktop)()) throw Error("Attempted to observe candidate games on a non-desktop platform");
                l.default.setCandidateGamesCallback(e => {
                    a.default.dispatch({
                        type: "CANDIDATE_GAMES_CHANGE",
                        games: e
                    })
                }), a.default.dispatch({
                    type: "GAME_DETECTION_WATCH_CANDIDATE_GAMES_START"
                })
            }

            function r() {
                if (!(0, n.isDesktop)()) throw Error("Attempted to stop observing candidate games on a non-desktop platform");
                l.default.clearCandidateGamesCallback(), a.default.dispatch({
                    type: "GAME_DETECTION_WATCH_CANDIDATE_GAMES_STOP"
                })
            }
        },
        308086: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("427459"),
                i = s("49111"),
                r = s("782340");

            function o(e) {
                let {
                    guildBoostSlot: t,
                    onClose: o,
                    hasCancelableGuildBoostSlot: d,
                    premiumSubscription: u,
                    onSelect: c
                } = e, S = u.status === i.SubscriptionStatusTypes.PAST_DUE;
                return (0, a.jsxs)(n.Menu, {
                    onSelect: c,
                    navId: "subscription-context",
                    variant: "fixed",
                    "aria-label": r.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onClose: o,
                    children: [(0, a.jsx)(n.MenuItem, {
                        id: "apply",
                        label: null != t.premiumGuildSubscription ? r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TRANSFER_BUTTON : r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SELECT_SERVER_BUTTON,
                        subtext: t.isOnCooldown() ? r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TRANSFER_BUTTON_DISABLED_TOOLTIP : null,
                        action: function() {
                            (0, n.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await s.el("247760").then(s.bind(s, "247760"));
                                return s => (0, a.jsx)(e, {
                                    ...s,
                                    guildBoostSlots: [t],
                                    locationSection: i.AnalyticsSections.SETTINGS_PREMIUM
                                })
                            })
                        },
                        disabled: t.isOnCooldown()
                    }), (0, l.isGuildBoostSlotCanceled)(t) ? (0, a.jsx)(n.MenuItem, {
                        id: "uncancel",
                        label: r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_UNCANCEL_BUTTON,
                        subtext: S ? r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_PAST_DUE_TOOLTIP : null,
                        action: function() {
                            (0, n.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await s.el("738400").then(s.bind(s, "738400"));
                                return s => (0, a.jsx)(e, {
                                    ...s,
                                    guildBoostSlotId: t.id
                                })
                            })
                        },
                        disabled: S
                    }) : (0, a.jsx)(n.MenuItem, {
                        id: "cancel",
                        label: r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_CANCEL_BUTTON,
                        subtext: d ? S ? r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_PAST_DUE_TOOLTIP : null : r.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_TOOLTIP,
                        action: function() {
                            (0, n.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await s.el("933182").then(s.bind(s, "933182"));
                                return s => (0, a.jsx)(e, {
                                    ...s,
                                    guildBoostSlot: t
                                })
                            })
                        },
                        disabled: !d || S,
                        color: "danger"
                    })]
                })
            }
        },
        93731: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return F
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("917351"),
                o = s.n(r),
                d = s("446674"),
                u = s("77078"),
                c = s("54239"),
                S = s("174727"),
                E = s("685665"),
                f = s("239380"),
                T = s("305961"),
                m = s("625634"),
                _ = s("521012"),
                g = s("476263"),
                h = s("628398"),
                I = s("118503"),
                N = s("663745"),
                p = s("423487"),
                C = s("599110"),
                A = s("315102"),
                O = s("427459"),
                x = s("701909"),
                R = s("719923"),
                M = s("299039"),
                v = s("308086"),
                D = s("954296"),
                L = s("49111"),
                P = s("782340"),
                j = s("733798");

            function b(e) {
                let {
                    deadline: t
                } = e, {
                    days: s,
                    hours: n,
                    minutes: l
                } = (0, S.default)(t, 1e3);
                return (0, a.jsx)(a.Fragment, {
                    children: P.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN.format({
                        days: s,
                        hours: n,
                        minutes: l
                    })
                })
            }

            function U(e) {
                let {
                    guild: t,
                    guildBoostSlots: s,
                    availableGuildBoostSlots: l
                } = e, i = n.useContext(C.AnalyticsContext), {
                    analyticsLocations: r
                } = (0, E.default)(), o = t.premiumSubscriberCount, d = s.sort((e, t) => Number(null != e.premiumGuildSubscription ? e.premiumGuildSubscription.id : 0) - Number(null != t.premiumGuildSubscription ? t.premiumGuildSubscription.id : 0))[0];
                if (null == d) return null;
                let S = null != d.premiumGuildSubscription ? M.default.extractTimestamp(d.premiumGuildSubscription.id) : 0,
                    T = (0, O.getAppliedGuildBoostMonths)(S),
                    m = null != t.banner ? A.default.getGuildBannerURL(t) : null;
                return (0, a.jsxs)("div", {
                    className: j.guildHeader,
                    children: [(0, a.jsx)("div", {
                        className: j.guildHeaderBackground,
                        style: {
                            backgroundImage: null != m ? "url(".concat(m, ")") : void 0
                        }
                    }), (0, a.jsx)(g.default, {
                        guild: t,
                        className: j.guildIcon
                    }), (0, a.jsxs)("div", {
                        className: j.guildHeaderContent,
                        children: [(0, a.jsx)(u.Heading, {
                            variant: "heading-md/semibold",
                            className: j.guildName,
                            children: t.name
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-xs/normal",
                            className: j.guildSubscriptionDuration,
                            children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_DURATION.format({
                                months: T,
                                date: new Date(S)
                            })
                        }), (0, a.jsxs)(u.Text, {
                            variant: "text-xs/normal",
                            className: j.guildSubscriberCount,
                            children: [(0, a.jsx)(I.default, {
                                className: j.guildSubscriberCountIcon
                            }), (0, a.jsx)("div", {
                                children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SUBSCRIBER_COUNT_TOOLTIP.format({
                                    subscriberCount: s.length
                                })
                            }), 0 !== l.length ? (0, a.jsx)(u.Anchor, {
                                onClick: () => {
                                    if (0 === l.length) return;
                                    let e = {
                                        ...i.location,
                                        section: L.AnalyticsSections.SETTINGS_PREMIUM
                                    };
                                    (0, D.addAppliedGuildBoosts)({
                                        analyticsLocations: r,
                                        analyticsLocation: e,
                                        guild: t
                                    })
                                },
                                className: j.guildSubscribeButton,
                                children: P.default.Messages.PREMIUM_GUILD_PERKS_MODAL_BUTTON_SUBSCRIBE_THIS_SERVER
                            }) : null]
                        })]
                    }), (0, a.jsx)("div", {
                        className: j.guildGemIndicatorContainer,
                        children: (0, a.jsx)(u.Clickable, {
                            onClick: function() {
                                (0, f.transitionToGuild)(t.id), (0, c.popLayer)()
                            },
                            children: (0, a.jsx)(h.default, {
                                className: j.gemIndicator,
                                subscriberCount: o,
                                guildId: t.id
                            })
                        })
                    })]
                })
            }

            function B(e) {
                let {
                    guildBoostSlot: t,
                    premiumSubscription: s,
                    hasCancelableGuildBoostSlot: n
                } = e, l = null != t.cooldownEndsAt ? new Date(t.cooldownEndsAt) : null, r = null != l && l > new Date, o = null != t.premiumGuildSubscription ? new Date(M.default.extractTimestamp(t.premiumGuildSubscription.id)) : null, d = (0, O.isGuildBoostSlotCanceled)(t), c = d ? p.default : I.default;
                return (0, a.jsxs)("div", {
                    className: j.guildSubscriptionSlot,
                    children: [(0, a.jsx)(c, {
                        className: i(j.guildSubscriptionSlotIcon, {
                            [j.guildSubscriptionSlotIconCanceled]: d
                        })
                    }), (0, a.jsxs)("div", {
                        className: j.guildSubscriptionSlotContent,
                        children: [(0, a.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            className: j.guildSubscriptionCreationDate,
                            children: null != o ? P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CREATION_DATE.format({
                                date: o
                            }) : P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_UNUSED_SLOT_DESCRIPTION
                        }), (0, a.jsxs)(u.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: [r && null != l ? (0, a.jsx)(b, {
                                deadline: l.getTime()
                            }) : null, r && d ? " • " : null, d ? P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format({
                                date: s.currentPeriodEnd
                            }) : null]
                        })]
                    }), (0, a.jsx)(u.Popout, {
                        renderPopout: function(e) {
                            let {
                                closePopout: l
                            } = e;
                            return (0, a.jsx)(v.default, {
                                onClose: l,
                                guildBoostSlot: t,
                                premiumSubscription: s,
                                hasCancelableGuildBoostSlot: n
                            })
                        },
                        position: "right",
                        align: "center",
                        children: e => (0, a.jsx)(u.Clickable, {
                            ...e,
                            "aria-label": P.default.Messages.MORE_OPTIONS,
                            className: j.guildSubscriptionSlotMenuIcon,
                            children: (0, a.jsx)(N.default, {})
                        })
                    })]
                })
            }

            function y(e) {
                let {
                    guildId: t,
                    guildBoostSlots: s,
                    premiumSubscription: n,
                    availableGuildBoostSlots: l,
                    hasCancelableGuildBoostSlot: i
                } = e, r = (0, d.useStateFromStores)([T.default], () => "0" !== t ? T.default.getGuild(t) : null);
                return null == r && "0" !== t ? null : (0, a.jsxs)("div", {
                    className: j.guild,
                    children: [null != r ? (0, a.jsx)(U, {
                        guild: r,
                        guildBoostSlots: s,
                        availableGuildBoostSlots: l
                    }) : null, (0, a.jsx)("div", {
                        className: j.guildSubscriptionSlots,
                        children: s.map(e => (0, a.jsx)(B, {
                            guildBoostSlot: e,
                            premiumSubscription: n,
                            hasCancelableGuildBoostSlot: i
                        }, e.id))
                    })]
                })
            }

            function F() {
                let e = (0, d.useStateFromStores)([_.default], () => _.default.getPremiumTypeSubscription()),
                    t = (0, d.useStateFromStores)([m.default], () => m.default.boostSlots),
                    s = o(t).filter(e => e.isAvailable()).value(),
                    n = o(t).groupBy(e => {
                        let {
                            premiumGuildSubscription: t
                        } = e;
                        return null != t ? t.guildId : "0"
                    }).value(),
                    l = n["0"],
                    i = Object.keys(n).filter(e => "0" !== e);
                if (0 === i.length && null == l || null == e) return null;
                let r = o(t).filter(e => {
                        let {
                            canceled: t
                        } = e;
                        return !t
                    }).value().length,
                    c = R.default.getNumIncludedPremiumGuildSubscriptionSlots(e.planId),
                    S = r > c;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(u.Text, {
                        variant: "text-sm/normal",
                        className: j.blurb,
                        children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SUBTITLE.format({
                            helpdeskArticle: x.default.getArticleURL(L.HelpdeskArticles.GUILD_SUBSCRIPTIONS)
                        })
                    }), null != l ? (0, a.jsx)(y, {
                        guildId: "0",
                        guildBoostSlots: l,
                        premiumSubscription: e,
                        availableGuildBoostSlots: s,
                        hasCancelableGuildBoostSlot: S
                    }) : null, i.length > 0 ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(u.Heading, {
                            variant: "heading-deprecated-12/semibold",
                            className: j.subSectionHeader,
                            children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_ACTIVE_TITLE
                        }), i.map(t => (0, a.jsx)(y, {
                            guildId: t,
                            guildBoostSlots: n[t],
                            premiumSubscription: e,
                            availableGuildBoostSlots: s,
                            hasCancelableGuildBoostSlot: S
                        }, t))]
                    }) : null]
                })
            }
        },
        754893: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                setNewPendingGuildIdentityBio: function() {
                    return n
                },
                setNewPendingGuildIdentityPronouns: function() {
                    return l
                },
                setNewPendingNickname: function() {
                    return i
                },
                setNewPendingGuildIdentityThemeColors: function() {
                    return r
                },
                canResetThemeColors: function() {
                    return o
                }
            });
            var a = s("929423");

            function n(e, t) {
                (0, a.setPendingBio)(e === t ? void 0 : e)
            }

            function l(e, t) {
                (0, a.setPendingPronouns)(e === t ? void 0 : e)
            }

            function i(e, t) {
                (0, a.setPendingNickname)(e === t || "" === e && null === t ? void 0 : e)
            }

            function r(e, t) {
                let s = (null == e ? void 0 : e[0]) == null || (null == e ? void 0 : e[1]) == null;
                (0, a.setPendingThemeColors)(s && null == t ? void 0 : e)
            }

            function o(e, t) {
                return void 0 === e ? null != t : (null == e ? void 0 : e[0]) != null && (null == e ? void 0 : e[1]) != null
            }
        },
        872306: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("54239"),
                i = s("393414"),
                r = s("49111"),
                o = s("782340"),
                d = s("609456"),
                u = s("269863");

            function c() {
                return (0, a.jsxs)("div", {
                    className: d.emptyState,
                    children: [(0, a.jsx)("img", {
                        src: u,
                        alt: "",
                        className: d.image
                    }), (0, a.jsx)(n.Heading, {
                        className: d.topSpacing,
                        variant: "heading-lg/extrabold",
                        children: o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_TITLE
                    }), (0, a.jsx)(n.Text, {
                        className: d.topSpacing,
                        variant: "text-md/normal",
                        children: o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_DESCRIPTION
                    }), (0, a.jsx)(n.Button, {
                        className: d.topSpacing,
                        onClick: () => {
                            (0, i.transitionTo)(r.Routes.GUILD_DISCOVERY), l.popLayer()
                        },
                        children: o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_CTA
                    })]
                })
            }
        },
        527274: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return v
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("627445"),
                l = s.n(n),
                i = s("446674"),
                r = s("77078"),
                o = s("956967"),
                d = s("906932"),
                u = s("702877"),
                c = s("447645"),
                S = s("52704"),
                E = s("121370"),
                f = s("370505"),
                T = s("713135"),
                m = s("26989"),
                _ = s("697218"),
                g = s("216422"),
                h = s("719923"),
                I = s("158998"),
                N = s("929423"),
                p = s("424562"),
                C = s("754893"),
                A = s("8204"),
                O = s("250590"),
                x = s("49111"),
                R = s("782340"),
                M = s("91451");

            function v(e) {
                var t, s, n, v;
                let {
                    guild: D
                } = e, L = (0, i.useStateFromStores)([_.default], () => {
                    let e = _.default.getCurrentUser();
                    return l(null != e, "GuildIdentitySettingsPage: user cannot be undefined"), e
                }), {
                    pendingAvatar: P,
                    pendingNickname: j,
                    pendingBanner: b,
                    pendingBio: U,
                    pendingPronouns: B,
                    pendingThemeColors: y,
                    errors: F,
                    guild: G
                } = (0, i.useStateFromStoresObject)([p.default], () => {
                    let {
                        pendingAvatar: e,
                        pendingNickname: t,
                        pendingBio: s,
                        pendingPronouns: a,
                        pendingBanner: n,
                        pendingThemeColors: l
                    } = p.default.getAllPending();
                    return {
                        pendingAvatar: e,
                        pendingNickname: t,
                        pendingBanner: n,
                        pendingBio: s,
                        pendingPronouns: a,
                        pendingThemeColors: l,
                        errors: p.default.getErrors(),
                        guild: p.default.getGuild()
                    }
                }), k = null != D ? D : G;
                l(null != k, "guild should not be null");
                let H = (0, o.useGuildAutomodProfileQuarantineErrors)(k.id),
                    w = (0, i.useStateFromStores)([m.default], () => null == k.id ? null : m.default.getMember(k.id, L.id)),
                    V = (0, i.useStateFromStores)([T.default], () => T.default.getGuildMemberProfile(L.id, k.id)),
                    Y = h.default.canUsePremiumProfileCustomization(L),
                    W = (0, d.showRemoveAvatar)(P, null == w ? void 0 : w.avatar),
                    K = (0, d.showRemoveBanner)(b, null == V ? void 0 : V.banner),
                    z = (0, C.canResetThemeColors)(y, null == V ? void 0 : V.themeColors),
                    Q = null !== (t = null == V ? void 0 : V.bio) && void 0 !== t ? t : "",
                    q = null !== (s = null == V ? void 0 : V.pronouns) && void 0 !== s ? s : "",
                    Z = (e, t, s) => {
                        s(null != e ? e : null != t ? null : void 0)
                    };
                return (0, a.jsxs)("div", {
                    className: M.sectionsContainer,
                    children: [(0, a.jsx)(A.default, {
                        errors: null !== (n = null == F ? void 0 : F.nick) && void 0 !== n ? n : null == H ? void 0 : H.nick,
                        username: I.default.getName(L),
                        pendingNick: j,
                        currentNick: null == w ? void 0 : w.nick,
                        guild: k
                    }, "nick"), (0, a.jsx)(f.default, {
                        sectionTitle: R.default.Messages.USER_SETTINGS_PRONOUNS,
                        errors: null == F ? void 0 : F.pronouns,
                        onPronounsChange: e => {
                            (0, C.setNewPendingGuildIdentityPronouns)(e, q)
                        },
                        pendingPronouns: B,
                        currentPronouns: q
                    }, "pronouns"), (0, a.jsxs)(O.default, {
                        user: L,
                        showOverlay: !Y,
                        children: [(0, a.jsx)(c.default, {
                            sectionTitle: (0, a.jsxs)(a.Fragment, {
                                children: [R.default.Messages.USER_SETTINGS_AVATAR, (0, a.jsx)(r.Tooltip, {
                                    text: R.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                                    children: e => (0, a.jsx)(g.default, {
                                        ...e,
                                        className: M.nitroWheel
                                    })
                                })]
                            }),
                            showRemoveAvatarButton: W,
                            onAvatarChange: e => Z(e, null == w ? void 0 : w.avatar, N.setPendingAvatar),
                            errors: null == F ? void 0 : F.avatar,
                            guildId: k.id,
                            disabled: !Y
                        }, "avatar"), (0, a.jsx)(S.default, {
                            showRemoveBannerButton: K,
                            errors: null == F ? void 0 : F.banner,
                            onBannerChange: e => Z(e, null == V ? void 0 : V.banner, N.setPendingBanner),
                            guildId: null == k ? void 0 : k.id,
                            disabled: !Y
                        }, "banner"), (0, a.jsx)(E.default, {
                            user: L,
                            pendingAvatar: P,
                            pendingColors: y,
                            onThemeColorsChange: e => {
                                (0, C.setNewPendingGuildIdentityThemeColors)(e, null == V ? void 0 : V.themeColors)
                            },
                            guildId: null == k ? void 0 : k.id,
                            showResetThemeButton: z
                        }), (0, a.jsx)(u.default, {
                            placeholder: R.default.Messages.CHANGE_IDENTITY_BIO_PLACEHOLDER,
                            sectionTitle: (0, a.jsxs)(a.Fragment, {
                                children: [R.default.Messages.USER_PROFILE_ABOUT_ME, (0, a.jsx)(r.Tooltip, {
                                    text: R.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                                    children: e => (0, a.jsx)(g.default, {
                                        ...e,
                                        className: M.nitroWheel
                                    })
                                })]
                            }),
                            onBioChange: e => {
                                (0, C.setNewPendingGuildIdentityBio)(e, Q), (0, N.setDisableSubmit)(null != e && e.length > x.BIO_MAX_LENGTH)
                            },
                            errors: null !== (v = null == F ? void 0 : F.bio) && void 0 !== v ? v : null == H ? void 0 : H.bio,
                            pendingBio: U,
                            currentBio: Q,
                            disabled: !Y
                        }, "about")]
                    })]
                })
            }
        },
        808030: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("45299"),
                r = s("880397"),
                o = s("783142"),
                d = s("929423"),
                u = s("424562"),
                c = s("782340");

            function S() {
                let e = (0, l.useStateFromStores)([u.default], () => u.default.getIsDisableSubmit()),
                    t = (0, l.useStateFromStores)([u.default], () => u.default.getGuild()),
                    s = (0, l.useStateFromStores)([u.default], () => u.default.getErrors()),
                    [S, E] = n.useState(!1),
                    f = n.useMemo(() => (null == s ? void 0 : s.message) != null ? null == s ? void 0 : s.message : Object.keys(null != s ? s : {}).length > 0 ? c.default.Messages.GUILD_SETTINGS_EDIT_PROFILE_GENERIC_ERROR : null, [s]),
                    T = n.useCallback(async () => {
                        var e, s;
                        E(!0);
                        let a = u.default.getAllPending(),
                            n = (0, r.getGuildMemberChangesForUpdateRequest)(a),
                            l = (0, r.getProfileChangesForUpdateRequest)(a),
                            i = !0;
                        if (Object.keys(n).length > 0) {
                            let s = await (0, d.saveGuildIdentityChanges)(null == t ? void 0 : t.id, n);
                            i = i && null !== (e = null == s ? void 0 : s.ok) && void 0 !== e && e, (null == s ? void 0 : s.ok) && (0, d.resetPendingMemberChanges)()
                        }
                        if (Object.keys(l).length > 0) {
                            let e = await (0, o.saveProfileChanges)(l, null == t ? void 0 : t.id);
                            i = i && null !== (s = null == e ? void 0 : e.ok) && void 0 !== s && s, (null == e ? void 0 : e.ok) && (0, d.resetPendingProfileChanges)()
                        }
                        i && (0, d.clearErrors)(), E(!1)
                    }, [null == t ? void 0 : t.id]),
                    m = n.useCallback(() => {
                        (0, d.resetAllPending)()
                    }, []);
                return (0, a.jsx)(i.default, {
                    submitting: S,
                    onSave: T,
                    onReset: m,
                    disabled: e,
                    errorMessage: null != f ? f : void 0
                })
            }
        },
        376402: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return j
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("627445"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("913144"),
                u = s("79112"),
                c = s("642950"),
                S = s("812204"),
                E = s("716241"),
                f = s("685665"),
                T = s("360871"),
                m = s("184900"),
                _ = s("11899"),
                g = s("713135"),
                h = s("102985"),
                I = s("697218"),
                N = s("599110"),
                p = s("701909"),
                C = s("719923"),
                A = s("929423"),
                O = s("424562"),
                x = s("872306"),
                R = s("527274"),
                M = s("185153"),
                v = s("49111"),
                D = s("782340");

            function L() {
                N.default.track(v.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                    location_page: v.AnalyticsPages.GUILD_MEMBER_PROFILE_SETTINGS,
                    location_object: v.AnalyticsObjects.BADGE
                }), (0, A.closeGuildIdentitySettings)(), u.default.open(v.UserSettingsSections.PREMIUM)
            }

            function P(e) {
                (0, o.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await s.el("414242").then(s.bind(s, "414242"));
                    return s => (0, a.jsx)(t, {
                        source: {
                            ...e,
                            page: v.AnalyticsPages.GUILD_MEMBER_PROFILE_SETTINGS
                        },
                        ...s
                    })
                })
            }

            function j(e) {
                let {
                    selectedGuild: t
                } = e, {
                    AnalyticsLocationProvider: s
                } = (0, f.default)(S.default.GUILD_PROFILE), l = (0, r.useStateFromStores)([I.default], () => {
                    let e = I.default.getCurrentUser();
                    return i(null != e, "GuildIdentitySettingsPage: user cannot be undefined"), e
                }), u = (0, r.useStateFromStores)([g.default], () => !g.default.isFetchingProfile(l.id)), N = (0, r.useStateFromStores)([h.default], () => h.default.hidePersonalInformation), {
                    pendingAvatar: j,
                    pendingNickname: b,
                    pendingBanner: U,
                    pendingBio: B,
                    pendingPronouns: y,
                    pendingThemeColors: F,
                    source: G
                } = (0, r.useStateFromStoresObject)([O.default], () => {
                    let {
                        pendingAvatar: e,
                        pendingNickname: t,
                        pendingBio: s,
                        pendingPronouns: a,
                        pendingBanner: n,
                        pendingThemeColors: l
                    } = O.default.getAllPending();
                    return {
                        pendingAvatar: e,
                        pendingNickname: t,
                        pendingBanner: n,
                        pendingBio: s,
                        pendingPronouns: a,
                        pendingThemeColors: l,
                        source: O.default.getSource()
                    }
                });
                if (n.useEffect(() => () => d.default.wait(A.resetAllPending), []), n.useEffect(() => {
                        null != G && E.default.trackWithMetadata(v.AnalyticEvents.SETTINGS_PANE_VIEWED, {
                            settings_type: "guild",
                            destination_pane: v.AnalyticsSections.SETTINGS_CUSTOMIZE_PROFILE,
                            source: G
                        })
                    }, [G]), N) return (0, a.jsx)(c.default, {});
                if (!u) return (0, a.jsx)(o.Spinner, {});
                let k = C.default.canUsePremiumProfileCustomization(l),
                    H = {
                        user: l,
                        guild: t,
                        canUsePremiumCustomization: k,
                        onAvatarChange: A.setPendingAvatar,
                        onBannerChange: A.setPendingBanner,
                        onUpsellClick: P,
                        pendingAvatar: j,
                        pendingBanner: U,
                        pendingBio: B,
                        pendingPronouns: y,
                        pendingNickname: b,
                        activityName: D.default.Messages.CHANGE_IDENTITY_SERVER_PROFILE,
                        activityCharacter: T.FakeActivityCharacter.PHIBI,
                        openPremiumSettings: L
                    };
                return (0, a.jsxs)(s, {
                    children: [(0, a.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        children: D.default.Messages.PROFILE_CUSTOMIZATION_GUILD_HINT.format({
                            helpCenterLink: p.default.getArticleURL(v.HelpdeskArticles.GUILD_PROFILES)
                        })
                    }), null != t ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(M.default, {
                            guildId: t.id,
                            onChange: e => {
                                null != e && (0, A.setCurrentGuild)(e)
                            }
                        }), (0, a.jsx)(_.default, {
                            previewTitle: D.default.Messages.CHANGE_IDENTITY_PREVIEW_WITH_GUILD_NAME.format({
                                guildName: null == t ? void 0 : t.name
                            }),
                            profilePreview: (0, a.jsx)(m.default, {
                                ...H,
                                pendingThemeColors: F
                            }),
                            children: (0, a.jsx)(R.default, {})
                        })]
                    }) : (0, a.jsx)(x.default, {})]
                })
            }
        },
        185153: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                },
                GuildSelector: function() {
                    return g
                }
            }), s("843762");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("570697"),
                u = s("305961"),
                c = s("677099"),
                S = s("476263"),
                E = s("449008"),
                f = s("424562"),
                T = s("782340"),
                m = s("764347");

            function _(e) {
                let {
                    guildId: t,
                    className: s,
                    globalOption: n,
                    hideDivider: l = !1,
                    onChange: r,
                    renderOptionSuffix: o
                } = e;
                return (0, a.jsx)(d.default, {
                    className: i(m.section, s),
                    title: T.default.Messages.PROFILE_CUSTOMIZATION_GUILD_SELECT_TITLE,
                    hideDivider: l,
                    forcedDivider: !0,
                    children: (0, a.jsx)(g, {
                        guildId: t,
                        onChange: r,
                        renderOptionSuffix: o,
                        globalOption: n
                    })
                })
            }

            function g(e) {
                let {
                    guildId: t,
                    globalOption: s,
                    onChange: l,
                    renderOptionSuffix: i
                } = e, d = (0, r.useStateFromStores)([f.default], () => f.default.showNotice()), _ = (0, r.useStateFromStores)([c.default], () => c.default.getFlattenedGuildIds()), g = (0, r.useStateFromStores)([u.default], () => u.default.getGuilds()), h = n.useMemo(() => {
                    let e = _.map(e => {
                        let t = g[e];
                        return null == t ? null : {
                            label: t.name,
                            value: t.id
                        }
                    }).filter(E.isNotNullish);
                    return null != s && e.unshift(s), e
                }, [_, g, s]), I = n.useCallback(e => {
                    let t = (null == e ? void 0 : e.label) === (null == s ? void 0 : s.label) && (null == e ? void 0 : e.value) === (null == s ? void 0 : s.value);
                    return null == e || "" === e.value || t ? null : (0, a.jsx)(S.default, {
                        className: m.guildSelectOptionIcon,
                        guild: g[e.value],
                        size: S.default.Sizes.SMOL,
                        active: !0
                    })
                }, [g, s]);
                return (0, a.jsx)(o.SearchableSelect, {
                    isDisabled: d,
                    onChange: e => {
                        if ("" === e || e === (null == s ? void 0 : s.value)) {
                            l(null);
                            return
                        }
                        let t = g[e];
                        null != t && l(t)
                    },
                    value: t,
                    options: h,
                    renderOptionPrefix: I,
                    renderOptionSuffix: i,
                    placeholder: T.default.Messages.PROFILE_CUSTOMIZATION_GUILD_SELECT_PLACEHOLDER
                })
            }
        },
        8204: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("570697"),
                r = s("957255"),
                o = s("754893"),
                d = s("49111"),
                u = s("782340"),
                c = s("666477");

            function S(e) {
                let {
                    errors: t,
                    pendingNick: s,
                    currentNick: S,
                    username: E,
                    guild: f
                } = e, T = null != s ? s : S, m = (0, n.useStateFromStores)([r.default], () => r.default.can(d.Permissions.CHANGE_NICKNAME, f) || r.default.can(d.Permissions.MANAGE_NICKNAMES, f));
                return (0, a.jsxs)(i.default, {
                    title: u.default.Messages.SERVER_NICKNAME,
                    errors: t,
                    children: [(0, a.jsx)(l.TextInput, {
                        value: null != T ? T : "",
                        placeholder: E,
                        maxLength: d.USERNAME_MAX_LENGTH,
                        onChange: function(e) {
                            (0, o.setNewPendingNickname)(e, S)
                        },
                        disabled: !m
                    }), !m && (0, a.jsx)(l.FormText, {
                        className: c.nicknameDisabled,
                        type: l.FormText.Types.DESCRIPTION,
                        children: u.default.Messages.CHANGE_IDENTITY_NICKNAME_PERMISSIONS_DISABLED
                    })]
                })
            }
        },
        250590: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("841098"),
                r = s("812204"),
                o = s("685665"),
                d = s("635956"),
                u = s("599110"),
                c = s("719923"),
                S = s("49111"),
                E = s("646718"),
                f = s("782340"),
                T = s("303"),
                m = s("709976"),
                _ = s("555657");

            function g(e) {
                let {
                    user: t,
                    showOverlay: s,
                    children: g
                } = e, h = (0, i.default)(), {
                    analyticsLocations: I
                } = (0, o.default)(r.default.PREMIUM_UPSELL_OVERLAY);
                return (n.useEffect(() => {
                    s && u.default.track(S.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        location_stack: I,
                        type: E.PremiumUpsellTypes.PREMIUM_GUILD_MEMBER_PROFILE_UPSELL_INLINE
                    })
                }, [s, I]), s) ? (0, a.jsxs)("div", {
                    className: T.upsellOverlayContainer,
                    children: [(0, a.jsx)("div", {
                        children: g
                    }), (0, a.jsxs)("div", {
                        className: T.upsellOverlay,
                        children: [(0, a.jsx)("img", {
                            className: T.upsellImage,
                            alt: f.default.Messages.GUILD_IDENTITY_UPSELL_OVERLAY_IMAGE_ALT,
                            src: function(e) {
                                switch (e) {
                                    case S.ThemeTypes.DARK:
                                        return m;
                                    case S.ThemeTypes.LIGHT:
                                        return _
                                }
                            }(h)
                        }), (0, a.jsxs)("div", {
                            className: T.upsellTextContainer,
                            children: [(0, a.jsx)(l.Text, {
                                variant: "text-lg/semibold",
                                color: "always-white",
                                children: f.default.Messages.GUILD_IDENTITY_UPSELL_OVERLAY_TITLE
                            }), (0, a.jsx)(l.Text, {
                                variant: "text-sm/normal",
                                color: "always-white",
                                children: f.default.Messages.GUILD_IDENTITY_UPSELL_OVERLAY_DESCRIPTION_THEMES
                            })]
                        }), (0, a.jsx)(d.default, {
                            size: l.Button.Sizes.LARGE,
                            color: l.Button.Colors.GREEN,
                            buttonText: c.default.isPremium(t) ? f.default.Messages.USER_SETTINGS_PROFILE_THEMES_UPSELL_UPGRADE : f.default.Messages.CHANGE_IDENTITY_UPSELL,
                            subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2
                        })]
                    })]
                }) : (0, a.jsx)(a.Fragment, {
                    children: g
                })
            }
        },
        898184: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("222007");
            var a = s("884691"),
                n = s("866227"),
                l = s.n(n),
                i = s("446674"),
                r = s("305961"),
                o = s("153160"),
                d = s("837008"),
                u = s("648825"),
                c = s("136185"),
                S = s("49111"),
                E = s("782340");

            function f(e) {
                let t = (0, c.getRoleSubscriptionPlanId)(e),
                    s = (0, i.useStateFromStores)([u.default], () => u.default.getSubscriptionListingForPlan(t)),
                    n = (0, i.useStateFromStores)([u.default], () => null != s ? u.default.getSubscriptionGroupListingForSubscriptionListing(s.id) : null),
                    f = (0, i.useStateFromStores)([r.default], () => r.default.getGuild(null == n ? void 0 : n.guild_id)),
                    [T, m] = a.useState(!1),
                    {
                        fetchSubscriptionsSettings: _
                    } = (0, d.useFetchSubscriptionsSettings)();
                a.useEffect(() => {
                    T && null != f && null == u.default.getSubscriptionSettings(f.id) && _(f.id)
                }, [T, f, _]);
                let g = null == s ? void 0 : function(e) {
                    let {
                        subscription: t
                    } = e, s = l(t.currentPeriodEnd).format("M/D/YY"), a = null != t.price ? (0, o.formatPrice)(t.price, t.currency) : "", n = l(t.createdAt).format("M/D/YY"), i = t.status === S.SubscriptionStatusTypes.CANCELED, r = t.status === S.SubscriptionStatusTypes.PAST_DUE, d = null != t.trialId;
                    return {
                        memberSince: n,
                        nextRenewalDate: s,
                        nextRenewalLabel: i ? E.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_MEMBERSHIP_ENDS : E.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_NEXT_RENEWAL,
                        subscriptionPrice: a,
                        isCancelled: i,
                        isPastDue: r,
                        isTrial: d
                    }
                }({
                    subscription: e
                });
                return {
                    guild: f,
                    expanded: T,
                    handleToggleExpanded: () => m(e => !e),
                    listing: s,
                    groupListing: n,
                    subscriptionInfo: g
                }
            }
        },
        736595: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("884691"),
                n = s("446674"),
                l = s("850068"),
                i = s("521012"),
                r = s("656506"),
                o = s("677795");
            let d = [];

            function u() {
                let {
                    ensureFresh: e = !1
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = (0, r.default)() === o.UserGuildRoleSubscriptionRelationship.SUBSCRIBED, s = (0, n.useStateFromStores)([i.default], () => i.default.getActiveGuildSubscriptions()), u = a.useRef(!1);
                return a.useEffect(() => {
                    (function(e) {
                        var t;
                        let {
                            ensureFresh: s,
                            hasFetched: a,
                            hasRoleSubscriptions: n
                        } = e, l = i.default.getActiveGuildSubscriptions();
                        return (null !== (t = null == l ? void 0 : l.length) && void 0 !== t ? t : 0) === 0 && !!n || !!s && !a || !a && !i.default.hasFetchedSubscriptions()
                    })({
                        ensureFresh: e,
                        hasRoleSubscriptions: t,
                        hasFetched: u.current
                    }) && (u.current = !0, l.fetchSubscriptions())
                }, [e, t]), null != s ? s : d
            }
        },
        656506: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return i
                }
            }), s("222007");
            var a = s("446674"),
                n = s("256941"),
                l = s("677795");

            function i() {
                return (0, a.useStateFromStores)([n.default], () => (function() {
                    let [e] = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [n.default], t = e.getGuildIdsWithPurchasableRoles(), s = !1;
                    return (t.forEach(t => {
                        let a = e.getUserSubscriptionRoles(t);
                        a.size > 0 && (s = !0)
                    }), s) ? l.UserGuildRoleSubscriptionRelationship.SUBSCRIBED : 0 === t.size ? l.UserGuildRoleSubscriptionRelationship.NONE : l.UserGuildRoleSubscriptionRelationship.IN_SUBSCRIPTION_SERVER
                })([n.default]))
            }
        },
        592504: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openModal: function() {
                    return I
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("866227"),
                i = s.n(l),
                r = s("77078"),
                o = s("850068"),
                d = s("812204"),
                u = s("685665"),
                c = s("476765"),
                S = s("271560"),
                E = s("837008"),
                f = s("108314"),
                T = s("677795"),
                m = s("782340"),
                _ = s("623777");
            let g = e => {
                    let [t, s] = n.useState(!1), [a, l] = n.useState(null), i = async t => {
                        try {
                            return s(!0), await o.cancelSubscription(t, e), !0
                        } catch (e) {
                            l(e)
                        } finally {
                            s(!1)
                        }
                    };
                    return {
                        cancelSubscription: i,
                        error: a,
                        submitting: t
                    }
                },
                h = e => {
                    var t;
                    let {
                        transitionState: s,
                        groupListing: n,
                        guildId: l,
                        listing: o,
                        subscription: h,
                        onClose: I
                    } = e, N = (0, c.useUID)(), p = (0, E.useSubscriptionsSettings)(l), C = (null == p ? void 0 : null === (t = p.cover_image_asset) || void 0 === t ? void 0 : t.application_id) != null ? (0, S.getAssetURL)(p.cover_image_asset.application_id, p.cover_image_asset, 440) : void 0, {
                        analyticsLocations: A
                    } = (0, u.default)(d.default.GUILD_ROLE_SUBSCRIPTION_CANCELLATION_MODAL), {
                        cancelSubscription: O,
                        error: x,
                        submitting: R
                    } = g(A), M = async () => {
                        let e = await O(h.id);
                        e && I()
                    }, v = o.role_benefits.benefits.filter(e => e.ref_type === T.GuildRoleSubscriptionBenefitTypes.CHANNEL), D = o.role_benefits.benefits.filter(e => e.ref_type === T.GuildRoleSubscriptionBenefitTypes.INTANGIBLE), L = i(h.currentPeriodEnd).format("MMMM Do, YYYY"), P = m.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_DESCRIPTION.format({
                        numChannels: v.length,
                        numAdditionalBenefits: D.length,
                        subscriptionEndDate: L
                    });
                    return (0, a.jsxs)(r.ModalRoot, {
                        transitionState: s,
                        className: _.modal,
                        "aria-labelledby": N,
                        children: [(0, a.jsxs)("div", {
                            children: [(0, a.jsx)("img", {
                                src: C,
                                alt: "",
                                className: _.headerImage
                            }), (0, a.jsx)(r.ModalCloseButton, {
                                withCircleBackground: !0,
                                className: _.closeButton,
                                onClick: I
                            })]
                        }), null != x ? (0, a.jsx)(r.FormErrorBlock, {
                            children: x.message
                        }) : null, (0, a.jsxs)(r.ModalContent, {
                            className: _.content,
                            children: [(0, a.jsx)(r.Heading, {
                                id: N,
                                variant: "text-md/medium",
                                className: _.title,
                                children: m.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_TITLE
                            }), (0, a.jsx)(r.Text, {
                                className: _.description,
                                variant: "text-sm/normal",
                                children: P
                            }), (0, a.jsx)(f.GuildRoleSubscriptionBenefits, {
                                listingId: o.id,
                                guildId: n.guild_id,
                                className: _.benefits
                            })]
                        }), (0, a.jsxs)(r.ModalFooter, {
                            className: _.footer,
                            children: [(0, a.jsx)(r.Button, {
                                color: r.Button.Colors.RED,
                                onClick: M,
                                submitting: R,
                                children: m.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_CANCEL_CTA
                            }), (0, a.jsx)(r.Button, {
                                look: r.Button.Looks.LINK,
                                color: r.Button.Colors.WHITE,
                                className: _.goBackButton,
                                onClick: I,
                                children: m.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_NEVERMIND_CTA
                            })]
                        })]
                    })
                },
                I = e => {
                    (0, r.openModal)(t => (0, a.jsx)(h, {
                        ...t,
                        ...e
                    }))
                }
        },
        424876: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return m
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("521012"),
                u = s("191814"),
                c = s("49111"),
                S = s("782340"),
                E = s("973742"),
                f = s("376121"),
                T = s("137963");

            function m(e) {
                let {
                    onClickManageSubscription: t
                } = e, s = (0, r.useStateFromStores)([d.default], () => d.default.getSubscriptions()), l = n.useMemo(() => Object.values(null != s ? s : {}).filter(e => e.type === c.SubscriptionTypes.GUILD).filter(e => e.status !== c.SubscriptionStatusTypes.ENDED), [s]);
                return 0 === l.length ? null : (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: E.sectionTitle,
                        children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                    }), (0, a.jsx)(u.default, {
                        size: 4
                    }), (0, a.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        className: E.sectionDescription,
                        children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_USER_SUBSCRIPTIONS_DESCRIPTION
                    }), (0, a.jsx)(u.default, {
                        size: 24
                    }), (0, a.jsxs)("div", {
                        className: i(f.guildBoostingSubscriptionRow, E.card),
                        children: [(0, a.jsx)("img", {
                            src: T,
                            alt: "",
                            className: E.handImage
                        }), (0, a.jsxs)("div", {
                            className: E.textContainer,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-xl/semibold",
                                className: E.header,
                                children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: E.description,
                                children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_ACTIVE_USER_SUBSCRIPTIONS_DESCRIPTION.format({
                                    numSubscriptions: l.length
                                })
                            })]
                        }), (0, a.jsx)(o.Button, {
                            color: o.Button.Colors.CUSTOM,
                            size: o.Button.Sizes.SMALL,
                            look: o.Button.Looks.INVERTED,
                            className: E.manageSubscriptionsButton,
                            onClick: t,
                            children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_SUBSCRIPTIONS_BUTTON
                        })]
                    })]
                })
            }
        },
        533137: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return w
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("733724"),
                o = s("446674"),
                d = s("77078"),
                u = s("850068"),
                c = s("54239"),
                S = s("215082"),
                E = s("79112"),
                f = s("812204"),
                T = s("685665"),
                m = s("20606"),
                _ = s("465869"),
                g = s("809071"),
                h = s("690679"),
                I = s("393414"),
                N = s("357957"),
                p = s("476263"),
                C = s("876269"),
                A = s("191814"),
                O = s("476765"),
                x = s("837899"),
                R = s("68238"),
                M = s("956089"),
                v = s("898184"),
                D = s("306073"),
                L = s("430780"),
                P = s("592504"),
                j = s("618976"),
                b = s("49111"),
                U = s("724210"),
                B = s("397336"),
                y = s("782340"),
                F = s("168739");
            let G = e => {
                    let {
                        label: t,
                        value: s,
                        showInfoIcon: n,
                        infoIconTooltipText: l
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: F.infoCard,
                        children: [(0, a.jsxs)("div", {
                            className: F.infoCardLabelContainer,
                            children: [(0, a.jsx)(d.Heading, {
                                variant: "heading-deprecated-12/semibold",
                                className: F.infoCardLabel,
                                children: t
                            }), n && (0, a.jsx)(d.Tooltip, {
                                clickableOnMobile: !0,
                                text: l,
                                children: e => (0, a.jsx)(R.default, {
                                    ...e,
                                    className: F.infoCardIcon
                                })
                            })]
                        }), (0, a.jsx)(d.Heading, {
                            variant: "heading-xl/semibold",
                            className: F.infoCardValue,
                            children: s
                        })]
                    })
                },
                k = e => {
                    let {
                        subscription: t
                    } = e, {
                        analyticsLocations: s
                    } = (0, T.default)(), [n] = (0, g.useSubscriptionInvoicePreview)({
                        subscriptionId: t.id,
                        renewal: !0,
                        analyticsLocations: s,
                        analyticsLocation: f.default.GUILD_ROLE_SUBSCRIPTION_PAYMENT_SOURCE_WITH_INVOICE
                    }), l = (0, o.useStateFromStores)([N.default], () => N.default.hasFetchedPaymentSources);
                    return null != n && l ? (0, a.jsx)(h.default, {
                        subscription: t,
                        currentInvoicePreview: n,
                        dropdownClassName: F.paymentSourceDropdown
                    }) : (0, a.jsx)(d.Spinner, {})
                },
                H = e => {
                    let {
                        isTrial: t,
                        isCancelled: s,
                        isResubscribing: n,
                        shouldHideRoleSubscriptionEntryPoints: l,
                        onCancelSubscriptionClick: i,
                        onResubscribeClick: r,
                        onChangePlanClick: o
                    } = e;
                    return s && (t || l) ? null : (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(d.FormTitle, {
                            children: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_LABEL
                        }), (0, a.jsx)("div", {
                            className: F.rowButtons,
                            children: s ? (0, a.jsx)(d.Button, {
                                onClick: r,
                                submitting: n,
                                children: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_RESTART_SUBSCRIPTION
                            }) : (0, a.jsxs)(a.Fragment, {
                                children: [!t && !l && (0, a.jsx)(C.default, {
                                    label: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CHANGE_TIER,
                                    onClick: o
                                }), (0, a.jsx)(C.default, {
                                    label: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CANCEL,
                                    onClick: i
                                })]
                            })
                        })]
                    })
                };
            var w = e => {
                let {
                    subscription: t
                } = e, {
                    listing: s,
                    groupListing: l,
                    guild: o,
                    expanded: f,
                    handleToggleExpanded: g,
                    subscriptionInfo: h
                } = (0, v.default)(t), [N, C] = n.useState(!1), R = (0, O.useUID)(), {
                    analyticsLocations: w
                } = (0, T.default)(), {
                    shouldHideGuildPurchaseEntryPoints: V
                } = (0, _.useShouldHideGuildPurchaseEntryPoints)(null == o ? void 0 : o.id), Y = (null == t ? void 0 : t.paymentGateway) === b.PaymentGateways.APPLE_PARTNER;
                if (null == l || null == s || null == h) return null;
                let W = () => {
                        null != o && ((0, I.transitionTo)(b.Routes.CHANNEL(o.id, U.StaticChannelRoute.ROLE_SUBSCRIPTIONS)), (0, c.popLayer)(), S.default.show(b.NoticeTypes.BACK_TO_PREVIOUS_SCREEN, void 0, y.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_BACK_TO_SUBSCRIPTION_USER_SETTING_CTA, () => E.default.open(b.UserSettingsSections.SUBSCRIPTIONS, B.ROLE_SUBSCRIPTION_SUBSECTION)))
                    },
                    K = () => {
                        null != o && (0, P.openModal)({
                            guildId: o.id,
                            groupListing: l,
                            listing: s,
                            subscription: t
                        })
                    },
                    z = async () => {
                        try {
                            C(!0), await u.resubscribeToSubscription(t, w), (0, j.openModal)()
                        } finally {
                            C(!1)
                        }
                    }, {
                        isCancelled: Q,
                        isPastDue: q,
                        subscriptionPrice: Z,
                        memberSince: X,
                        nextRenewalDate: J,
                        nextRenewalLabel: $,
                        isTrial: ee
                    } = h, et = s.soft_deleted || null == o || Y, es = () => {
                        if (Q) return (0, a.jsx)(M.TextBadge, {
                            text: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_CANCELLED
                        });
                        if (ee) return (0, a.jsx)(M.TextBadge, {
                            text: y.default.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_TITLE,
                            color: r.default.BRAND_500
                        });
                        if (q) return (0, a.jsx)(d.Tooltip, {
                            text: y.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                            children: e => (0, a.jsx)("div", {
                                ...e,
                                children: (0, a.jsx)(M.TextBadge, {
                                    className: F.paymentDueBadge,
                                    text: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_PAST_DUE,
                                    color: r.default.YELLOW_300
                                })
                            })
                        });
                        else return null
                    }, ea = () => Y ? (0, a.jsx)(d.Tooltip, {
                        text: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_IOS_PLATFORM_TOOLTIP,
                        children: e => (0, a.jsx)("div", {
                            ...e,
                            children: (0, a.jsx)(M.TextBadge, {
                                text: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_IOS_PLATFORM,
                                color: m.default.INTERACTIVE_MUTED
                            })
                        })
                    }) : null;
                return (0, a.jsxs)("div", {
                    className: F.container,
                    children: [(0, a.jsx)(D.default, {
                        onClick: g,
                        className: F.headerContainer,
                        children: e => {
                            let {
                                areaRef: t,
                                handleStopPropagation: n
                            } = e;
                            return (0, a.jsxs)(a.Fragment, {
                                children: [null != o && (0, a.jsx)(p.default, {
                                    guild: o,
                                    active: !0,
                                    size: p.default.Sizes.MEDIUM
                                }), (0, a.jsxs)("div", {
                                    className: F.headerTextContainer,
                                    children: [(0, a.jsx)(d.Text, {
                                        variant: "text-md/medium",
                                        className: F.guildName,
                                        children: null != o ? o.name : y.default.Messages.GUILD_ROLE_SUBSCRIPTION_SERVER_NAME_UNAVAILABLE
                                    }), (0, a.jsxs)("div", {
                                        className: F.headerSubtitleContainer,
                                        children: [(0, a.jsx)(d.Text, {
                                            variant: "text-sm/normal",
                                            className: F.tierName,
                                            children: s.name
                                        }), es(), ea()]
                                    })]
                                }), (0, a.jsx)(d.Clickable, {
                                    onClick: n(g),
                                    "aria-label": y.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TOGGLE_SECTION_LABEL,
                                    "aria-controls": R,
                                    "aria-expanded": f,
                                    focusProps: {
                                        ringTarget: t
                                    },
                                    children: (0, a.jsx)(x.default, {
                                        className: i(F.arrowIcon, {
                                            [F.arrowIconExpanded]: f
                                        })
                                    })
                                })]
                            })
                        }
                    }), f ? (0, a.jsxs)("div", {
                        id: R,
                        children: [(0, a.jsx)("div", {
                            className: F.divider
                        }), (0, a.jsx)(L.default, {
                            groupListingId: l.id,
                            subscription: t,
                            className: F.changePlanNotice
                        }), (0, a.jsxs)("div", {
                            className: F.subscriptionInfoCards,
                            children: [(0, a.jsx)(G, {
                                label: $,
                                value: J
                            }), (0, a.jsx)(G, {
                                label: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_PRICE,
                                value: Z,
                                showInfoIcon: ee,
                                infoIconTooltipText: ee ? y.default.Messages.GUILD_ROLE_SUBSCRIPTION_MANAGE_SUBSCRIPTION_PAGE_TRIAL_PRICE_INFO : void 0
                            }), (0, a.jsx)(G, {
                                label: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_MEMBER_SINCE,
                                value: X
                            })]
                        }), (0, a.jsx)(A.default, {
                            size: 16
                        }), !Q && !Y && (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(d.FormTitle, {
                                children: y.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_PAYMENT_METHOD_LABEL
                            }), (0, a.jsx)(k, {
                                subscription: t
                            })]
                        }), !et && (0, a.jsx)(H, {
                            isTrial: ee,
                            isCancelled: Q,
                            isResubscribing: N,
                            shouldHideRoleSubscriptionEntryPoints: V,
                            onCancelSubscriptionClick: K,
                            onChangePlanClick: W,
                            onResubscribeClick: z
                        })]
                    }) : null]
                })
            }
        },
        618976: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openModal: function() {
                    return i
                }
            });
            var a = s("352807"),
                n = s("915675"),
                l = s("782340");
            let i = () => {
                (0, a.openActionCompleteSuccessModal)({
                    title: l.default.Messages.GUILD_ROLE_SUBSCRIPTION_RESTARTED_TITLE,
                    body: l.default.Messages.GUILD_ROLE_SUBSCRIPTION_RESTARTED_DESCRIPTION,
                    Icon: n.default
                })
            }
        },
        699260: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("394846"),
                l = s("77078"),
                i = s("516899"),
                r = s("191814"),
                o = s("538137"),
                d = s("837008"),
                u = s("736595"),
                c = s("533137"),
                S = s("782340"),
                E = s("911848"),
                f = e => {
                    let {
                        onGoBack: t
                    } = e, s = (0, u.default)(), {
                        loading: f
                    } = (0, d.useFetchListingsForSubscriptions)(s);
                    return ((0, i.default)(n.isMobile ? "role-subscriptions-user-setting" : void 0), f) ? (0, a.jsx)(l.Spinner, {}) : 0 === s.length ? null : (0, a.jsxs)("div", {
                        className: E.container,
                        children: [(0, a.jsxs)(l.Button, {
                            look: l.Button.Looks.BLANK,
                            innerClassName: E.backButtonContents,
                            onClick: t,
                            children: [(0, a.jsx)(o.default, {
                                className: E.arrowIcon
                            }), S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_SUBSCRIPTIONS_PAGE_BACK_BUTTON_CTA]
                        }), (0, a.jsx)(r.default, {
                            size: 10
                        }), (0, a.jsx)(l.FormTitle, {
                            tag: "h1",
                            children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                        }), (0, a.jsx)(l.Text, {
                            variant: "text-sm/normal",
                            className: E.pageDescription,
                            children: S.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_PAGE_DESCRIPTION
                        }), (0, a.jsx)("div", {
                            className: E.subscriptionsContainer,
                            children: s.map(e => (0, a.jsx)(c.default, {
                                subscription: e
                            }, e.id))
                        })]
                    })
                }
        },
        433426: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("290110"),
                r = s("294490"),
                o = s("782340"),
                d = s("317295");
            let u = () => [{
                icon: d.perkNewsletter,
                title: o.default.Messages.HYPESQUAD_PERK_TITLE_NEWSLETTER,
                description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_NEWSLETTER
            }, {
                icon: d.perkBadge,
                title: o.default.Messages.HYPESQUAD_PERK_TITLE_PROFILE_BADGE,
                description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_PROFILE_BADGE
            }, {
                icon: d.perkChallenges,
                title: o.default.Messages.HYPESQUAD_PERK_TITLE_SQUAD_CHALLENGES,
                description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_SQUAD_CHALLENGES
            }];
            class c extends n.Component {
                render() {
                    return (0, a.jsxs)("div", {
                        className: d.features,
                        children: [(0, a.jsx)(r.default, {
                            className: d.video,
                            videoID: "SWzB1mx2o5k"
                        }), (0, a.jsx)(l.Heading, {
                            className: d.perksHeading,
                            variant: "heading-sm/semibold",
                            children: o.default.Messages.HYPESQUAD_PERKS_HEADING
                        }), (0, a.jsx)(i.default, {
                            features: u()
                        })]
                    })
                }
            }
            var S = c
        },
        240760: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            }), s("222007");
            var a, n = s("37983"),
                l = s("884691"),
                i = s("414456"),
                r = s.n(i),
                o = s("77078"),
                d = s("145131"),
                u = s("259051"),
                c = s("49111"),
                S = s("782340"),
                E = s("76666");
            let f = {
                    [c.HypeSquadHouses.HOUSE_1]: E.membershipDialogHouse1,
                    [c.HypeSquadHouses.HOUSE_2]: E.membershipDialogHouse2,
                    [c.HypeSquadHouses.HOUSE_3]: E.membershipDialogHouse3
                },
                T = {
                    [c.HypeSquadHouses.HOUSE_1]: E.houseLogoHouse1,
                    [c.HypeSquadHouses.HOUSE_2]: E.houseLogoHouse2,
                    [c.HypeSquadHouses.HOUSE_3]: E.houseLogoHouse3
                },
                m = {
                    [c.HypeSquadHouses.HOUSE_1]: s("385622"),
                    [c.HypeSquadHouses.HOUSE_2]: s("178266"),
                    [c.HypeSquadHouses.HOUSE_3]: s("140090")
                },
                _ = e => {
                    let t = {
                        [c.HypeSquadHouses.HOUSE_1]: S.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_1,
                        [c.HypeSquadHouses.HOUSE_2]: S.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_2,
                        [c.HypeSquadHouses.HOUSE_3]: S.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_3
                    };
                    return t[e]
                };
            a = class extends l.Component {
                render() {
                    let {
                        houseMembership: e,
                        isClaimed: t,
                        isVerified: s
                    } = this.props;
                    if (!t || !s) return null;
                    if (null != e) {
                        let t = S.default.Messages.HYPESQUAD_MEMBERSHIP_HEADING.format({
                            houseName: (0, u.getHouseNameFromHouseID)(e)
                        });
                        return (0, n.jsx)("div", {
                            className: r(E.membershipDialog, f[e]),
                            children: (0, n.jsxs)("div", {
                                className: E.membershipDialogContent,
                                children: [(0, n.jsxs)(d.default, {
                                    children: [(0, n.jsxs)(d.default.Child, {
                                        grow: 1,
                                        shrink: 1,
                                        children: [(0, n.jsx)(o.Text, {
                                            className: E.membershipDialogHeading,
                                            variant: "text-xs/bold",
                                            children: S.default.Messages.HYPESQUAD_YOUR_HOUSE
                                        }), (0, n.jsx)(o.Heading, {
                                            className: E.membershipDialogHouseName,
                                            variant: "heading-sm/semibold",
                                            children: t
                                        }), (0, n.jsx)(o.Text, {
                                            className: E.membershipDialogHouseDescription,
                                            variant: "text-md/normal",
                                            children: _(e)
                                        })]
                                    }), (0, n.jsx)(d.default.Child, {
                                        className: E.houseLogoWrapper,
                                        grow: 0,
                                        shrink: 0,
                                        wrap: !0,
                                        children: (0, n.jsx)("img", {
                                            className: r(E.houseLogo, T[e]),
                                            src: m[e],
                                            alt: t
                                        })
                                    })]
                                }), (0, n.jsxs)(o.Text, {
                                    className: E.membershipDialogSwitchHouses,
                                    variant: "text-md/normal",
                                    children: [S.default.Messages.HYPESQUAD_SWITCH_HOUSES_PROMPT, (0, n.jsx)(o.Clickable, {
                                        className: E.membershipDialogSwitchHousesAction,
                                        onClick: this.handleJoinHypeSquadClick,
                                        tag: "span",
                                        children: S.default.Messages.HYPESQUAD_SWITCH_HOUSES_ACTION
                                    })]
                                })]
                            })
                        })
                    }
                    return (0, n.jsxs)("div", {
                        className: E.joinCTAWrapper,
                        children: [(0, n.jsxs)(d.default, {
                            className: E.joinCTA,
                            align: d.default.Align.CENTER,
                            justify: d.default.Justify.CENTER,
                            direction: d.default.Direction.HORIZONTAL,
                            children: [(0, n.jsx)(d.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, n.jsx)(o.Text, {
                                    variant: "text-sm/normal",
                                    children: S.default.Messages.HYPESQUAD_READY_TO_REP
                                })
                            }), (0, n.jsx)(d.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, n.jsx)(o.Button, {
                                    onClick: this.handleJoinHypeSquadClick,
                                    children: S.default.Messages.HYPESQUAD_JOIN
                                })
                            })]
                        }), (0, n.jsx)(o.Text, {
                            className: E.newsletterWarning,
                            variant: "text-sm/normal",
                            children: S.default.Messages.HYPESQUAD_NEWSLETTER_WARNING
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleJoinHypeSquadClick = () => {
                        (0, o.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await s.el("655615").then(s.bind(s, "655615"));
                            return t => (0, n.jsx)(e, {
                                ...t
                            })
                        })
                    }
                }
            }
        },
        12013: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            }), s("222007");
            var a, n = s("37983"),
                l = s("884691"),
                i = s("77078"),
                r = s("6481"),
                o = s("782340"),
                d = s("283193");
            a = class extends l.PureComponent {
                renderErrorMessage() {
                    let {
                        hasError: e
                    } = this.state;
                    return e ? (0, n.jsx)("div", {
                        className: d.error,
                        children: o.default.Messages.HYPESQUAD_LEAVE_ERROR
                    }) : null
                }
                render() {
                    let {
                        isRequestPending: e
                    } = this.state, {
                        isHypeSquadOnlineMember: t
                    } = this.props;
                    return t ? (0, n.jsxs)("div", {
                        className: d.leaveActionWrapper,
                        children: [this.renderErrorMessage(), (0, n.jsxs)(i.Text, {
                            variant: "text-sm/normal",
                            children: [o.default.Messages.HYPESQUAD_LEAVE_PROMPT, (0, n.jsx)(i.Button, {
                                className: d.leaveButton,
                                color: i.Button.Colors.LINK,
                                look: i.Button.Looks.LINK,
                                onClick: this.handleLeaveHypeSquadClick,
                                size: i.Button.Sizes.NONE,
                                submitting: e,
                                children: o.default.Messages.HYPESQUAD_LEAVE_ACTION
                            })]
                        })]
                    }) : null
                }
                constructor(...e) {
                    super(...e), this.state = {
                        isRequestPending: !1,
                        hasError: !1
                    }, this.handleLeaveHypeSquadError = () => {
                        this.setState({
                            hasError: !0
                        })
                    }, this.handleLeaveHypeSquadClick = () => {
                        this.setState({
                            isRequestPending: !0
                        }, () => {
                            r.default.leaveHypeSquadOnline().then(() => {
                                this.setState({
                                    isRequestPending: !1
                                })
                            }).catch(() => {
                                this.setState({
                                    hasError: !0,
                                    isRequestPending: !1
                                })
                            })
                        })
                    }
                }
            }
        },
        946964: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("748820"),
                l = s("77078"),
                i = s("112679"),
                r = s("55689"),
                o = s("21526"),
                d = s("599110"),
                u = s("49111");

            function c(e) {
                let {
                    skuId: t,
                    isGift: c = !1,
                    giftMessage: S,
                    onClose: E,
                    onComplete: f,
                    analyticsLocations: T,
                    analyticsObject: m
                } = e, _ = !1, g = (0, n.v4)();
                (0, l.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await s.el("894742").then(s.bind(s, "894742"));
                    return s => {
                        let {
                            onClose: n,
                            returnRef: l,
                            ...i
                        } = s;
                        return (0, a.jsx)(e, {
                            ...i,
                            loadId: g,
                            skuId: t,
                            isGift: c,
                            giftMessage: S,
                            analyticsLocations: T,
                            onClose: e => {
                                n(), null == E || E(e)
                            },
                            onComplete: () => {
                                _ = !0, null == f || f()
                            },
                            returnRef: l
                        })
                    }
                }, {
                    onCloseCallback: () => {
                        !_ && d.default.track(u.AnalyticEvents.PAYMENT_FLOW_CANCELED, {
                            load_id: g,
                            payment_type: u.PurchaseTypeToAnalyticsPaymentType[u.PurchaseTypes.ONE_TIME],
                            location: m,
                            is_gift: !1,
                            location_stack: T
                        }), (0, i.clearError)(), (0, r.clearPurchaseTokenAuthState)(), null == E || E(_), _ && (0, o.fetchCollectiblesPurchases)()
                    },
                    onCloseRequest: u.NOOP
                })
            }
        },
        653208: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("866227"),
                r = s.n(i),
                o = s("77078"),
                d = s("888400"),
                u = s("106413"),
                c = s("408792"),
                S = s("539830");

            function E(e) {
                let {
                    achievementId: t,
                    dateUnlocked: s
                } = e, n = (0, u.getPoggermodeAchievementData)(t);
                if (null == n) return null;
                let i = null != s,
                    {
                        name: E,
                        description: f,
                        hideDescriptionUntilUnlock: T,
                        onAction: m
                    } = n,
                    _ = T && !i,
                    g = i ? "header-primary" : "text-muted",
                    h = i ? "header-secondary" : "text-muted",
                    I = r(s),
                    N = null != m && i,
                    p = N ? o.Clickable : "div";
                return (0, a.jsxs)(p, {
                    className: l(S.container, N && S.actionable),
                    onClick: () => {
                        N && m()
                    },
                    children: [(0, a.jsx)("div", {
                        className: S.iconContainer,
                        children: (0, a.jsx)(c.default, {
                            achievementId: t,
                            size: c.default.Sizes.SIZE_40,
                            unlocked: i
                        })
                    }), (0, a.jsxs)("div", {
                        className: S.nameContainer,
                        children: [null != s && (0, a.jsx)(o.Text, {
                            variant: "text-xxs/semibold",
                            color: "text-muted",
                            className: S.unlocked,
                            children: (0, d.calendarFormat)(I)
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-md/medium",
                            color: g,
                            children: E()
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-xs/normal",
                            color: h,
                            children: _ ? "?????" : f()
                        })]
                    })]
                })
            }
        },
        317654: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Z
                }
            }), s("222007");
            var a, n, l, i, r = s("37983"),
                o = s("884691"),
                d = s("917351"),
                u = s("446674"),
                c = s("669491"),
                S = s("77078"),
                E = s("54239"),
                f = s("206230"),
                T = s("491605"),
                m = s("16594"),
                _ = s("772280"),
                g = s("300113"),
                h = s("659500"),
                I = s("709681"),
                N = s("356702"),
                p = s("106413"),
                C = s("28007"),
                A = s("880731"),
                O = s("250024"),
                x = s("798592"),
                R = s("39141"),
                M = s("49111"),
                v = s("782340"),
                D = s("926608");
            let L = {
                    enabled: !0,
                    combosEnabled: !0,
                    screenshakeEnabled: !1,
                    confettiEnabled: !1
                },
                P = (0, d.range)(0, 11),
                j = (0, d.range)(0, 2.25, .25),
                b = (0, d.range)(1, 11),
                U = (0, d.range)(1, 26);
            (l = a || (a = {}))[l.CONFETTI = 0] = "CONFETTI", l[l.SHAKE = 1] = "SHAKE", (i = n || (n = {}))[i.USER_SETTINGS = 0] = "USER_SETTINGS", i[i.ACHIEVEMENT_LIST = 1] = "ACHIEVEMENT_LIST";
            let B = () => [{
                    location: R.ConfettiLocation.CHAT_INPUT,
                    title: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_CHAT_INPUT_ENABLED,
                    description: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_CHAT_INPUT_ENABLED_DESCRIPTION
                }, {
                    location: R.ConfettiLocation.REACTION,
                    title: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_REACTION_ENABLED,
                    description: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_REACTION_ENABLED_DESCRIPTION
                }, {
                    location: R.ConfettiLocation.MEMBER_USER,
                    title: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_MEMBER_USER_ENABLED,
                    description: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_MEMBER_USER_ENABLED_DESCRIPTION
                }, {
                    location: R.ConfettiLocation.CALL_TILE,
                    title: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_CALL_TILE_ENABLED,
                    description: v.default.Messages.POGGERMODE_CONFETTI_LOCATION_CALL_TILE_ENABLED_DESCRIPTION
                }],
                y = () => [{
                    location: R.ShakeLocation.CHAT_INPUT,
                    title: v.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_CHAT_INPUT_ENABLED,
                    description: v.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_CHAT_INPUT_ENABLED_DESCRIPTION
                }, {
                    location: R.ShakeLocation.VOICE_USER,
                    title: v.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_VOICE_USER_ENABLED,
                    description: v.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_VOICE_USER_ENABLED_DESCRIPTION
                }, {
                    location: R.ShakeLocation.MENTION,
                    title: v.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_MENTION_ENABLED,
                    description: v.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_MENTION_ENABLED_DESCRIPTION
                }];

            function F(e) {
                let {
                    disabled: t,
                    locations: s,
                    settingsLocations: a,
                    onChange: n
                } = e, l = s.map(e => (0, r.jsx)(S.FormSwitch, {
                    disabled: t,
                    value: a[e.location],
                    note: e.description,
                    onChange: t => n({
                        ...a,
                        [e.location]: t
                    }),
                    children: e.title
                }, e.location));
                return (0, r.jsxs)(r.Fragment, {
                    children: [(0, r.jsx)(S.FormTitle, {
                        children: v.default.Messages.POGGERMODE_LOCATIONS
                    }), l]
                })
            }

            function G(e) {
                let {
                    children: t
                } = e;
                return (0, r.jsx)(S.Text, {
                    className: D.sliderDescription,
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    children: t
                })
            }

            function k(e) {
                let {
                    settings: {
                        enabled: t,
                        warningSeen: s
                    },
                    updateSettings: a
                } = e, n = (0, u.useStateFromStores)([f.default], () => f.default.useReducedMotion);
                return (0, r.jsx)(S.FormSwitch, {
                    value: t,
                    note: v.default.Messages.POGGERMODE_ENABLE_DESCRIPTION,
                    onChange: e => {
                        !e && (0, N.unlockAchievement)(p.PoggermodeAchievementId.DISABLE_POGGERMODE), e && (!s || n) ? (0, S.openModal)(e => (0, r.jsx)(S.ConfirmModal, {
                            header: n ? v.default.Messages.POGGERMODE_WARNING_TITLE_REDUCED_MOTION : v.default.Messages.POGGERMODE_WARNING_TITLE,
                            confirmText: v.default.Messages.ENABLE,
                            cancelText: v.default.Messages.CANCEL,
                            onConfirm: () => a(n ? L : {
                                enabled: !0,
                                warningSeen: !0
                            }),
                            ...e,
                            children: (0, r.jsx)(S.Text, {
                                variant: "text-md/normal",
                                children: n ? v.default.Messages.POGGERMODE_WARNING_BODY_REDUCED_MOTION : v.default.Messages.POGGERMODE_WARNING_BODY
                            })
                        })) : a({
                            enabled: e
                        })
                    },
                    children: v.default.Messages.POGGERMODE_ENABLE
                })
            }

            function H(e) {
                let {
                    settings: {
                        enabled: t,
                        confettiEnabled: s,
                        confettiCount: a,
                        confettiSize: n,
                        confettiEnabledLocations: l
                    },
                    updateSettings: i
                } = e, o = !t || !s;
                return (0, r.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: v.default.Messages.POGGERMODE_CONFETTI_CUSTOMIZATION,
                    children: [(0, r.jsx)(S.FormSwitch, {
                        disabled: !t,
                        value: s,
                        note: v.default.Messages.POGGERMODE_CONFETTI_ENABLED_DESCRIPTION,
                        onChange: e => i({
                            confettiEnabled: e
                        }, 0),
                        children: v.default.Messages.POGGERMODE_CONFETTI_ENABLED
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: o,
                        title: v.default.Messages.POGGERMODE_CONFETTI_COUNT,
                        className: D.formItem,
                        children: [(0, r.jsx)(G, {
                            children: v.default.Messages.POGGERMODE_CONFETTI_COUNT_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: o,
                            markers: b,
                            stickToMarkers: !0,
                            minValue: b[0],
                            maxValue: b[b.length - 1],
                            initialValue: a,
                            onValueChange: e => i({
                                confettiCount: e
                            }, 0),
                            onValueRender: e => "".concat(e)
                        })]
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: o,
                        title: v.default.Messages.POGGERMODE_CONFETTI_SIZE,
                        className: D.formItem,
                        children: [(0, r.jsx)(G, {
                            children: v.default.Messages.POGGERMODE_CONFETTI_SIZE_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: o,
                            markers: U,
                            stickToMarkers: !0,
                            minValue: U[0],
                            maxValue: U[U.length - 1],
                            initialValue: n,
                            onValueChange: e => i({
                                confettiSize: e
                            }, 0),
                            onValueRender: e => "".concat(e)
                        })]
                    }), (0, r.jsx)(F, {
                        disabled: o,
                        locations: B(),
                        settingsLocations: l,
                        onChange: e => i({
                            confettiEnabledLocations: e
                        }, 0)
                    })]
                })
            }

            function w(e) {
                let {
                    settings: {
                        enabled: t,
                        combosEnabled: s,
                        comboSoundsEnabled: a,
                        combosRequiredCount: n
                    },
                    updateSettings: l
                } = e, i = !t || !s;
                return (0, r.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: v.default.Messages.POGGERMODE_COMBOS_CUSTOMIZATION,
                    children: [(0, r.jsx)(S.FormSwitch, {
                        disabled: !t,
                        value: s,
                        note: v.default.Messages.POGGERMODE_COMBOS_ENABLED_DESCRIPTION,
                        onChange: e => l({
                            combosEnabled: e
                        }),
                        children: v.default.Messages.POGGERMODE_COMBOS_ENABLED
                    }), (0, r.jsx)(S.FormSwitch, {
                        disabled: !t,
                        value: a,
                        note: v.default.Messages.POGGERMODE_COMBO_SOUNDS_ENABLED_DESCRIPTION,
                        onChange: e => l({
                            comboSoundsEnabled: e
                        }),
                        children: v.default.Messages.POGGERMODE_COMBO_SOUNDS_ENABLED
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: i,
                        title: v.default.Messages.POGGERMODE_COMBOS_REQUIRED,
                        className: D.formItem,
                        children: [(0, r.jsx)(G, {
                            children: v.default.Messages.POGGERMODE_COMBOS_REQUIRED_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: i,
                            markers: P,
                            stickToMarkers: !0,
                            minValue: P[0],
                            maxValue: P[P.length - 1],
                            initialValue: n,
                            onValueChange: e => l({
                                combosRequiredCount: e
                            }),
                            onValueRender: e => "".concat(e)
                        })]
                    }), (0, r.jsx)(S.FormDivider, {
                        className: D.divider
                    })]
                })
            }

            function V(e) {
                let {
                    settings: {
                        enabled: t,
                        screenshakeEnabled: s,
                        shakeIntensity: a,
                        screenshakeEnabledLocations: n
                    },
                    updateSettings: l
                } = e, i = (0, u.useStateFromStores)([f.default], () => f.default.useReducedMotion), o = !t || !s || i, d = (e, t) => {
                    null != e.shakeIntensity && e.shakeIntensity > a && (0, N.unlockAchievement)(p.PoggermodeAchievementId.MORE), l(e, t)
                };
                return (0, r.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: v.default.Messages.POGGERMODE_SCREENSHAKE_CUSTOMIZATION,
                    children: [(0, r.jsx)(S.FormSwitch, {
                        disabled: !t || i,
                        tooltipNote: i ? v.default.Messages.POGGERMODE_SCREENSHAKE_DISABLED_REDUCED_MOTION : null,
                        value: s && !i,
                        note: v.default.Messages.POGGERMODE_SCREENSHAKE_ENABLED_DESCRIPTION,
                        onChange: e => l({
                            screenshakeEnabled: e
                        }, 1),
                        children: v.default.Messages.POGGERMODE_SCREENSHAKE_ENABLED
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: o,
                        title: v.default.Messages.POGGERMODE_SCREENSHAKE,
                        className: D.formItem,
                        children: [(0, r.jsx)(G, {
                            children: v.default.Messages.POGGERMODE_SCREENSHAKE_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: o,
                            markers: j,
                            equidistant: !0,
                            stickToMarkers: !0,
                            minValue: j[0],
                            maxValue: j[j.length - 1],
                            initialValue: a,
                            onValueChange: e => d({
                                shakeIntensity: e
                            }, 1),
                            onMarkerRender: e => e === j[j.length - 1] ? v.default.Messages.POGGERMODE_SCREENSHAKE_MAX : "".concat(100 * e, "%")
                        })]
                    }), (0, r.jsx)(F, {
                        disabled: o,
                        locations: y(),
                        settingsLocations: n,
                        onChange: e => l({
                            screenshakeEnabledLocations: e
                        }, 1)
                    })]
                })
            }

            function Y(e) {
                let {
                    updateSettings: t
                } = e;
                return (0, r.jsx)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: v.default.Messages.POGGERMODE_SETTINGS_CUSTOMIZATION,
                    children: (0, r.jsxs)(S.FormItem, {
                        className: D.formItem,
                        children: [(0, r.jsx)(S.FormText, {
                            className: D.formItem,
                            children: v.default.Messages.POGGERMODE_HIDE_SETTINGS_DESCRIPTION
                        }), (0, r.jsx)(S.Button, {
                            className: D.hideButton,
                            size: S.Button.Sizes.SMALL,
                            onClick: () => {
                                t({
                                    enabled: !1,
                                    settingsVisible: !1
                                }), (0, E.popLayer)()
                            },
                            children: v.default.Messages.POGGERMODE_HIDE_SETTINGS
                        })]
                    })
                })
            }

            function W(e) {
                let {
                    onChangePage: t
                } = e;
                return (0, r.jsxs)(S.FormSection, {
                    children: [(0, r.jsxs)(S.Clickable, {
                        onClick: () => t(1),
                        className: D.achievementContainer,
                        children: [(0, r.jsx)("div", {
                            className: D.achievementIconContainer,
                            children: (0, r.jsx)(g.default, {
                                color: c.default.unsafe_rawColors.ORANGE_345.css
                            })
                        }), (0, r.jsxs)("div", {
                            className: D.achievementTextContainer,
                            children: [(0, r.jsx)(S.Heading, {
                                variant: "heading-md/semibold",
                                color: "header-primary",
                                children: v.default.Messages.POGGERMODE_ACHIEVEMENT_TITLE
                            }), (0, r.jsx)(S.Text, {
                                variant: "text-md/normal",
                                color: "header-secondary",
                                children: v.default.Messages.POGGERMODE_ACHIEVEMENT_DESCRIPTION
                            })]
                        }), (0, r.jsx)(_.default, {
                            width: 16,
                            className: D.rightCaretIcon
                        })]
                    }), (0, r.jsx)(S.FormDivider, {
                        className: D.divider
                    })]
                })
            }
            let K = () => s.el("185720").then(s.t.bind(s, "185720", 19)).then(e => {
                let {
                    default: t
                } = e;
                return t
            });

            function z(e) {
                let {
                    onChangePage: t,
                    setShowEnableAnimation: s
                } = e, a = (0, u.useStateFromStoresObject)([A.default], () => A.default.getState()), [n, l] = o.useState({
                    x: 0,
                    y: 0
                }), i = (0, x.default)();

                function d(e, t, s, a) {
                    return (null != t ? t : e) && (null != a ? a : s)
                }
                let c = e => {
                        if (e.enabled && !1 === a.enabled) {
                            var t;
                            s(!0), (0, I.playSound)("poggermode_enabled"), h.ComponentDispatch.dispatch(M.ComponentActions.SHAKE_APP, {
                                duration: 2e3,
                                intensity: null !== (t = e.shakeIntensity) && void 0 !== t ? t : a.shakeIntensity
                            })
                        }
                    },
                    E = (e, t) => {
                        if (c(e), (0, C.updatePoggermodeSettings)(e), null == t) return;
                        let s = d(a.confettiEnabled, e.confettiEnabled, a.enabled, e.enabled);
                        0 === t && s && i.fire(n.x, n.y, {
                            settings: e
                        });
                        let l = d(a.screenshakeEnabled, e.screenshakeEnabled, a.enabled, e.enabled);
                        if (1 === t && l) {
                            var r;
                            h.ComponentDispatch.dispatch(M.ComponentActions.SHAKE_APP, {
                                duration: 1e3,
                                intensity: null !== (r = e.shakeIntensity) && void 0 !== r ? r : a.shakeIntensity
                            })
                        }
                    },
                    f = e => {
                        l({
                            x: e.clientX,
                            y: e.clientY
                        })
                    };
                return o.useEffect(() => (window.addEventListener("mousemove", f), () => window.removeEventListener("mousemove", f)), []), (0, r.jsxs)(r.Fragment, {
                    children: [(0, r.jsx)(S.Heading, {
                        variant: "heading-lg/semibold",
                        className: D.title,
                        children: v.default.Messages.POGGERMODE
                    }), (0, r.jsx)(k, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(W, {
                        onChangePage: t
                    }), (0, r.jsx)(w, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(V, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(H, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(Y, {
                        updateSettings: E
                    })]
                })
            }
            let Q = (e, t, s) => {
                    let a = e => () => {
                        t(e)
                    };
                    switch (e) {
                        case 0:
                            return (0, r.jsx)(z, {
                                onChangePage: a(1),
                                setShowEnableAnimation: s
                            });
                        case 1:
                            return (0, r.jsx)(O.default, {
                                onBackClick: a(0)
                            });
                        default:
                            return null
                    }
                },
                q = e => 0 === e ? m.SlideDirection.LEFT : m.SlideDirection.RIGHT;

            function Z() {
                let [e, t] = o.useState(0), [s, a] = o.useState(q(e)), [n, l] = o.useState(!1), i = (0, u.useStateFromStores)([f.default], () => f.default.useReducedMotion), d = n && !i;
                return o.useEffect(() => {
                    let t = setTimeout(() => {
                        a(q(e))
                    }, 500);
                    return () => clearTimeout(t)
                }, [e]), o.useEffect(() => {
                    Math.random() > .99 && (0, N.unlockAchievement)(p.PoggermodeAchievementId.VISITOR_100)
                }, []), (0, r.jsxs)(r.Fragment, {
                    children: [(0, r.jsx)(m.default, {
                        className: D.slideAnimator,
                        step: e,
                        direction: s,
                        children: Q(e, t, l)
                    }), (0, r.jsx)("div", {
                        className: d ? D.enableAnimationOverlayVisible : D.enableAnimationOverlayHidden,
                        children: (0, r.jsx)(T.default, {
                            className: D.enableAnimation,
                            importData: K,
                            shouldAnimate: d,
                            autoplay: !1,
                            resetOnPlay: !0,
                            loop: !1,
                            onComplete: () => l(!1)
                        })
                    })]
                })
            }
        },
        250024: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return m
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("669491"),
                r = s("77078"),
                o = s("137215"),
                d = s("300113"),
                u = s("449008"),
                c = s("429464"),
                S = s("106413"),
                E = s("653208"),
                f = s("782340"),
                T = s("679334");

            function m(e) {
                let {
                    onBackClick: t
                } = e, s = (0, l.useStateFromStores)([c.default], () => c.default.getAllUnlockedAchievements()), m = n.useMemo(() => {
                    let e = Object.values(s);
                    return e.sort((e, t) => t.dateUnlocked - e.dateUnlocked)
                }, [s]), _ = n.useMemo(() => Object.values(S.ACHIEVEMENT_LIST).filter(u.isNotNullish).filter(e => null == s[e.id]).sort((e, t) => e.rarity - t.rarity), [s]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(r.FormSection, {
                        children: (0, a.jsxs)(r.Clickable, {
                            onClick: t,
                            className: T.backContainer,
                            children: [(0, a.jsx)(o.default, {
                                direction: o.default.Directions.LEFT,
                                className: T.icon
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-lg/normal",
                                color: "text-normal",
                                children: f.default.Messages.BACK
                            })]
                        })
                    }), (0, a.jsxs)("div", {
                        className: T.headerContainer,
                        children: [(0, a.jsxs)("div", {
                            className: T.headerTextContainer,
                            children: [(0, a.jsx)(r.Heading, {
                                variant: "heading-lg/extrabold",
                                color: "header-primary",
                                children: f.default.Messages.POGGERMODE_ACHIEVEMENT_TITLE
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-md/normal",
                                color: "header-secondary",
                                children: f.default.Messages.POGGERMODE_ACHIEVEMENT_DESCRIPTION
                            })]
                        }), (0, a.jsx)("div", {
                            className: T.headerIcon,
                            children: (0, a.jsx)(d.default, {
                                color: i.default.unsafe_rawColors.ORANGE_345.css,
                                width: 40,
                                height: 40
                            })
                        })]
                    }), m.length > 0 && (0, a.jsx)(r.FormSection, {
                        className: T.divider,
                        children: (0, a.jsx)("div", {
                            className: T.achievementGrid,
                            children: m.map(e => {
                                let {
                                    achievementId: t,
                                    dateUnlocked: s
                                } = e;
                                return (0, a.jsx)(E.default, {
                                    achievementId: t,
                                    dateUnlocked: s
                                }, t)
                            })
                        })
                    }), _.length > 0 && (0, a.jsxs)(r.FormSection, {
                        className: T.divider,
                        children: [(0, a.jsx)("div", {
                            className: T.headerTextContainer,
                            children: (0, a.jsx)(r.Text, {
                                variant: "text-md/bold",
                                color: "header-secondary",
                                children: f.default.Messages.POGGERMODE_ACHIEVEMENT_LOCKED_TITLE
                            })
                        }), (0, a.jsx)("div", {
                            className: T.achievementGrid,
                            children: _.map(e => (0, a.jsx)(E.default, {
                                achievementId: e.id
                            }, e.id))
                        })]
                    }), (0, a.jsx)(r.FormSection, {
                        className: T.divider,
                        children: (0, a.jsx)("div", {
                            className: T.bottomPadding
                        })
                    })]
                })
            }
        },
        285471: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                updateClientPremiumTypeOverride: function() {
                    return n
                }
            });
            var a = s("913144");
            let n = (e, t) => {
                a.default.dispatch({
                    type: "SET_PREMIUM_TYPE_OVERRIDE",
                    premiumType: e
                }), a.default.dispatch({
                    type: "UPDATE_CLIENT_PREMIUM_TYPE",
                    user: t
                })
            }
        },
        809071: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                updateSubscriptionInvoicePreview: function() {
                    return S
                },
                useSubscriptionInvoicePreview: function() {
                    return T
                },
                useGetSubscriptionInvoice: function() {
                    return m
                },
                getItemUnitPriceWithDiscount: function() {
                    return _
                }
            }), s("222007");
            var a = s("884691"),
                n = s("446674"),
                l = s("872717"),
                i = s("448993"),
                r = s("195358"),
                o = s("521012"),
                d = s("719923"),
                u = s("49111");
            async function c(e) {
                let {
                    items: t,
                    paymentSourceId: s,
                    trialId: a,
                    code: n,
                    applyEntitlements: o = !1,
                    currency: c,
                    renewal: S,
                    metadata: E
                } = e;
                t = (0, d.coerceExistingItemsToNewItemInterval)(t);
                let f = {
                    items: t.map(e => {
                        let {
                            planId: t,
                            ...s
                        } = e;
                        return {
                            ...s,
                            plan_id: t
                        }
                    }),
                    payment_source_id: s,
                    trial_id: a,
                    code: n,
                    apply_entitlements: o,
                    currency: c,
                    renewal: S,
                    metadata: E
                };
                try {
                    let e = await l.default.post({
                        url: u.Endpoints.BILLING_SUBSCRIPTIONS_PREVIEW,
                        body: f,
                        oldFormErrors: !0
                    });
                    return r.default.createInvoiceFromServer(e.body)
                } catch (e) {
                    throw new i.BillingError(e)
                }
            }
            async function S(e) {
                let {
                    subscriptionId: t,
                    items: s,
                    paymentSourceId: a,
                    renewal: n,
                    currency: o,
                    applyEntitlements: c = !1,
                    analyticsLocations: S,
                    analyticsLocation: E
                } = e;
                null != s && (s = (0, d.coerceExistingItemsToNewItemInterval)(s));
                let f = {
                    items: null == s ? void 0 : s.map(e => {
                        let {
                            planId: t,
                            ...s
                        } = e;
                        return {
                            ...s,
                            plan_id: t
                        }
                    }),
                    payment_source_id: a,
                    renewal: n,
                    apply_entitlements: c,
                    currency: o
                };
                try {
                    let e = await l.default.patch({
                        url: u.Endpoints.BILLING_SUBSCRIPTION_PREVIEW(t),
                        query: {
                            location: E,
                            location_stack: S
                        },
                        body: f,
                        oldFormErrors: !0
                    });
                    return r.default.createInvoiceFromServer(e.body)
                } catch (e) {
                    throw new i.BillingError(e)
                }
            }
            async function E(e) {
                let {
                    subscriptionId: t,
                    preventFetch: s
                } = e;
                if (s) return null;
                let a = await l.default.get({
                    url: u.Endpoints.BILLING_SUBSCRIPTION_INVOICE(t),
                    oldFormErrors: !0
                });
                return r.default.createInvoiceFromServer(a.body)
            }

            function f(e, t) {
                let {
                    preventFetch: s = !1
                } = e, [l, i] = (0, a.useState)(null), [r, d] = (0, a.useState)(null), u = (0, n.useStateFromStores)([o.default], () => o.default.getSubscriptions());
                return (0, a.useEffect)(() => {
                    let e = !1;
                    async function a() {
                        try {
                            d(null), i(null);
                            let s = await t();
                            !e && i(s)
                        } catch (t) {
                            !e && d(t)
                        }
                    }
                    return !s && a(), () => {
                        e = !0
                    }
                }, [s, t, u]), [l, r]
            }

            function T(e) {
                if ("subscriptionId" in e && null == e.subscriptionId) {
                    let {
                        subscriptionId: t,
                        ...s
                    } = e;
                    e = s
                }
                let t = (0, a.useCallback)(() => "subscriptionId" in e ? S(e) : "items" in e ? c(e) : null, [JSON.stringify(e)]);
                return f(e, t)
            }

            function m(e) {
                let t = (0, a.useCallback)(() => E(e), [JSON.stringify(e)]);
                return f(e, t)
            }

            function _(e) {
                let t = e.subscriptionPlanPrice;
                return e.discounts.forEach(s => {
                    let a = s.amount / e.quantity;
                    t -= a
                }), t
            }
        },
        921149: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useIsPrepaidPaymentPastDue: function() {
                    return S
                }
            });
            var a = s("866227"),
                n = s.n(a),
                l = s("446674"),
                i = s("357957"),
                r = s("10514"),
                o = s("521012"),
                d = s("719923"),
                u = s("49111"),
                c = s("843455");

            function S() {
                let e = (0, l.useStateFromStores)([o.default], () => o.default.getPremiumTypeSubscription()),
                    t = (0, l.useStateFromStores)([r.default], () => null != e && null != e.planIdFromItems ? r.default.get(null == e ? void 0 : e.planIdFromItems) : null),
                    s = (0, l.useStateFromStores)([i.default], () => null != e && null != e.paymentSourceId ? i.default.getPaymentSource(e.paymentSourceId) : null, [e]),
                    a = null != s && c.PREPAID_PAYMENT_SOURCES.has(s.type),
                    S = (null == e ? void 0 : e.status) === u.SubscriptionStatusTypes.PAST_DUE ? n().diff(n(e.currentPeriodStart), "days") : 0;
                return !!(null != e && null != t && (0, d.isPremiumBaseSubscriptionPlan)(t.id)) && a && S >= 0 && S <= (0, d.getBillingGracePeriodDays)(e) && e.status === u.SubscriptionStatusTypes.PAST_DUE && !e.isPurchasedExternally
            }
        },
        541840: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("913801"),
                r = s("778695"),
                o = s("476765"),
                d = s("44678"),
                u = s("782340"),
                c = s("978896"),
                S = function(e) {
                    let {
                        onClose: t,
                        onClaim: s,
                        code: S,
                        outboundPromotion: E,
                        transitionState: f
                    } = e, [T, m] = n.useState(null), _ = (0, o.useUID)();
                    return n.useEffect(() => {
                        null == S && (0, d.claimOutboundPromotion)(E.id).then(e => s(e)).catch(e => {
                            var t;
                            return m(null == e ? void 0 : null === (t = e.body) || void 0 === t ? void 0 : t.code)
                        })
                    }, [S, E.id, s]), (0, a.jsx)(l.ModalRoot, {
                        transitionState: f,
                        "aria-labelledby": _,
                        children: null != T ? (0, a.jsx)(r.DropsModalClaimErrorBody, {
                            onClose: t,
                            errorCode: T
                        }) : null == S ? (0, a.jsx)(l.ModalContent, {
                            children: (0, a.jsx)(l.Spinner, {
                                className: c.loading
                            })
                        }) : (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsxs)(l.ModalHeader, {
                                separator: !1,
                                className: c.headerContainer,
                                children: [(0, a.jsx)("div", {
                                    className: c.art
                                }), (0, a.jsx)(l.Heading, {
                                    variant: "heading-xl/semibold",
                                    children: u.default.Messages.OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE
                                })]
                            }), (0, a.jsxs)(l.ModalContent, {
                                children: [(0, a.jsx)(l.Text, {
                                    variant: "text-md/normal",
                                    className: c.bodyText,
                                    children: E.outboundRedemptionModalBody
                                }), (0, a.jsx)(l.FormDivider, {
                                    className: c.formDivider
                                }), (0, a.jsxs)(l.FormSection, {
                                    title: u.default.Messages.REDEMPTION_CODE,
                                    className: c.formSection,
                                    children: [(0, a.jsx)(i.default, {
                                        value: S,
                                        buttonColor: l.Button.Colors.BRAND,
                                        buttonLook: l.Button.Looks.FILLED,
                                        delay: 1e3,
                                        inputClassName: c.textInput
                                    }), (0, a.jsx)(l.Text, {
                                        variant: "text-xs/normal",
                                        color: "header-secondary",
                                        className: c.confirmationText,
                                        children: u.default.Messages.OUTBOUND_PROMOTION_CODE_CONFIRMATION_EMAIL
                                    })]
                                })]
                            }), (0, a.jsxs)(l.ModalFooter, {
                                children: [(0, a.jsx)(l.Button, {
                                    color: l.Button.Colors.BRAND,
                                    onClick: () => {
                                        let e = (0, d.getOutboundPromotionRedemptionUrl)(S, E);
                                        window.open(e, "_blank")
                                    },
                                    children: u.default.Messages.REDEEM
                                }), (0, a.jsx)(l.Button, {
                                    onClick: t,
                                    look: l.Button.Looks.LINK,
                                    color: c.maybeLaterButton,
                                    children: u.default.Messages.MAYBE_LATER
                                })]
                            })]
                        })
                    })
                }
        },
        556738: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            }), s("70102"), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("89253");
            class o extends n.Component {
                renderIcon(e) {
                    if (null != e.overrideIcon) return e.overrideIcon(r.icon);
                    if (null != e.icon && null != e.iconClass) {
                        let t = e.icon;
                        return (0, a.jsx)(t, {
                            className: i(r.icon, e.iconClass)
                        })
                    }
                    throw Error("Missing overrideIcon or iconName and iconClass")
                }
                render() {
                    return (0, a.jsx)("div", {
                        className: r.features,
                        style: {
                            gridTemplateColumns: Array(this.props.columns).fill("1fr").join(" ")
                        },
                        children: this.props.features.map(this.renderFeature)
                    })
                }
                constructor(...e) {
                    super(...e), this.renderFeature = (e, t) => (0, a.jsxs)("div", {
                        className: r.feature,
                        children: [this.renderIcon(e), (0, a.jsxs)("div", {
                            children: [null != e.title ? (0, a.jsx)("div", {
                                className: r.title,
                                children: e.title
                            }) : null, (0, a.jsx)("div", {
                                className: null == e.title ? r.descriptionStandalone : r.description,
                                children: e.description
                            })]
                        })]
                    }, t)
                }
            }
            var d = o
        },
        743053: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Z
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("866227"),
                o = s.n(r),
                d = s("446674"),
                u = s("235855"),
                c = s("819855"),
                S = s("77078"),
                E = s("913144"),
                f = s("850068"),
                T = s("54239"),
                m = s("775433"),
                _ = s("79112"),
                g = s("642950"),
                h = s("875212"),
                I = s("841098"),
                N = s("812204"),
                p = s("685665"),
                C = s("619935"),
                A = s("308592"),
                O = s("245187"),
                x = s("393414"),
                R = s("102985"),
                M = s("521012"),
                v = s("90404"),
                D = s("41250"),
                L = s("599110"),
                P = s("719923"),
                j = s("182650"),
                b = s("53253"),
                U = s("300962"),
                B = s("959905"),
                y = s("635956"),
                F = s("400307"),
                G = s("992118"),
                k = s("525505"),
                H = s("646718"),
                w = s("49111"),
                V = s("782340"),
                Y = s("23876"),
                W = s("12483"),
                K = s("391590"),
                z = s("435021");

            function Q() {
                let e = (0, d.useStateFromStores)([M.default], () => M.default.getPremiumTypeSubscription()),
                    t = (0, j.useHasDiscountApplied)(),
                    s = (0, I.default)(),
                    {
                        enabled: n
                    } = (0, U.default)();
                if (null == e || null == e.planIdFromItems) return null;
                let l = null != e.trialId,
                    r = t || l,
                    u = null != e.trialEndsAt ? o(e.trialEndsAt).diff(o(), "d") : 0,
                    E = H.SubscriptionPlanInfo[e.planIdFromItems],
                    f = P.default.formatPriceString(P.default.getDefaultPrice(E.id), E.interval);
                return (0, a.jsxs)("div", {
                    className: i(Y.tierCard, {
                        [Y.withTier2Rim]: r
                    }),
                    children: [(0, a.jsxs)("div", {
                        className: Y.tierInfo,
                        children: [(0, a.jsx)(D.default, {
                            className: i(Y.tierTitle)
                        }), r ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(F.PremiumPillWithSparkles, {
                                text: l ? V.default.Messages.PREMIUM_TIER_CARD_TRIAL_ACTIVATED : V.default.Messages.PREMIUM_TIER_CARD_DISCOUNT_APPLIED,
                                className: Y.topRimPill,
                                colorOptions: (0, c.isThemeDark)(s) ? F.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_WHITE_FILL : F.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_OLD_GRADIENT_FILL
                            }), (0, a.jsx)("div", {
                                className: Y.rimGlowTier2
                            }), (0, a.jsx)(S.Heading, {
                                variant: "heading-md/normal",
                                color: "always-white",
                                className: Y.trialHeader,
                                children: l ? V.default.Messages.PREMIUM_TIER_CARD_TRIAL_HEADER_AFTER_REDEMPTION.format({
                                    remainingTime: u,
                                    price: f
                                }) : V.default.Messages.PREMIUM_TIER_CARD_DISCOUNT_HEADER_AFTER_REDEMPTION.format({
                                    percent: 30,
                                    regularPrice: f
                                })
                            })]
                        }) : (0, a.jsx)(G.default, {
                            subscriptionTier: H.PremiumSubscriptionSKUs.TIER_2
                        }), (0, a.jsx)(F.Tier2FeatureItems, {}), n ? null : (0, a.jsx)(S.Button, {
                            className: Y.tierCardButton,
                            color: S.Button.Colors.WHITE,
                            onClick: () => {
                                L.default.track(w.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED, {
                                    cta_type: "to_premium_home_button",
                                    target: "premium home page"
                                }), (0, T.popLayer)(), (0, x.transitionTo)(w.Routes.APPLICATION_STORE)
                            },
                            children: (0, a.jsx)(S.Text, {
                                className: Y.tierCardButtonCTA,
                                variant: "text-sm/medium",
                                children: V.default.Messages.PREMIUM_SETTINGS_NAVIGATE_TO_HOME_CTA_V2
                            })
                        }), (0, a.jsx)(S.Button, {
                            className: Y.managePlanButton,
                            look: S.Button.Looks.OUTLINED,
                            color: S.Button.Colors.WHITE,
                            onClick: () => {
                                L.default.track(w.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED, {
                                    cta_type: "to_subscriptions_button",
                                    target: "subscriptions settings"
                                }), _.default.open(w.UserSettingsSections.SUBSCRIPTIONS)
                            },
                            children: (0, a.jsx)(S.Text, {
                                className: Y.managePlanButtonCTA,
                                variant: "text-sm/medium",
                                color: "always-white",
                                children: V.default.Messages.PREMIUM_SETTINGS_NATIGATE_TO_SUBSCRIPTIONS_CTA
                            })
                        })]
                    }), (0, a.jsx)("div", {
                        className: Y.tierImage,
                        children: (0, a.jsx)("img", {
                            className: Y.tierImage,
                            alt: "",
                            src: W
                        })
                    })]
                })
            }

            function q() {
                let e = (0, b.useIsSeasonalGiftingActive)(),
                    {
                        enabled: t
                    } = b.SeasonalGiftingMarketingExperiment.useExperiment({
                        location: "GiftNitro"
                    }, {
                        autoTrackExposure: e
                    }),
                    s = t && e;
                return (0, a.jsxs)("div", {
                    className: i(Y.giftCard, {
                        [Y.giftCardSeasonal]: s
                    }),
                    children: [s && (0, a.jsx)("img", {
                        className: Y.seasonalGiftImage,
                        alt: "",
                        src: K
                    }), (0, a.jsx)("img", {
                        className: Y.giftImage,
                        style: {
                            visibility: s ? "hidden" : "visible"
                        },
                        alt: "",
                        src: z
                    }), (0, a.jsxs)("div", {
                        className: Y.giftInfo,
                        children: [(0, a.jsx)(S.Heading, {
                            className: i(Y.giftTitle, {
                                [Y.seasonalColor]: s
                            }),
                            variant: "heading-xl/extrabold",
                            children: s ? V.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_SEASONAL_GIFT_HEADING : V.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_GIFT_HEADING
                        }), (0, a.jsx)(S.Text, {
                            className: i(Y.giftText, {
                                [Y.seasonalColor]: s
                            }),
                            variant: "text-sm/normal",
                            children: s ? V.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_SEASONAL_GIFT_BODY : V.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_GIFT_BODY
                        }), (0, a.jsx)(y.default, {
                            isGift: !0,
                            className: i(Y.giftCardButton, s ? Y.seasonalColor : Y.giftCardButtonColor),
                            look: S.Button.Looks.OUTLINED,
                            buttonText: V.default.Messages.GIFT_NITRO,
                            buttonTextClassName: Y.giftButtonCTA,
                            color: S.Button.Colors.CUSTOM,
                            onClick: () => {
                                L.default.track(w.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED, {
                                    cta_type: "gifting_button",
                                    target: "payment modal"
                                })
                            }
                        })]
                    })]
                })
            }
            var Z = function() {
                let e = (0, C.useBlockedPaymentsConfig)(),
                    {
                        AnalyticsLocationProvider: t,
                        analyticsLocations: s
                    } = (0, p.default)(N.default.PREMIUM_SETTINGS),
                    l = (0, d.useStateFromStores)([M.default], () => M.default.getPremiumTypeSubscription()),
                    i = (0, d.useStateFromStores)([M.default], () => M.default.hasFetchedSubscriptions()),
                    r = (0, A.useSubscriptionPlansLoaded)(),
                    [o, c] = n.useState(!0),
                    T = (0, B.useLocalizedPromoQuery)(),
                    _ = null == T ? void 0 : T.countryCode,
                    I = (0, d.useStateFromStores)([R.default], () => R.default.enabled),
                    x = "PremiumManagementSettings";
                (0, h.useTriggerDebuggingAA)({
                    location: x + " auto on",
                    autoTrackExposure: !0
                }), (0, h.useTriggerDebuggingAA)({
                    location: x + " auto off",
                    autoTrackExposure: !1
                }), n.useEffect(() => {
                    E.default.wait(async () => {
                        !I && !e && await Promise.all([f.fetchSubscriptions(), f.fetchPaymentSources(), (0, m.fetchPremiumSubscriptionPlans)(_, null, w.RevenueSurfaces.DISCOVERY)]), c(!1)
                    })
                }, [_, I, e]);
                let [D, P] = n.useState(!1);
                if (I) return (0, a.jsx)(g.default, {});
                if (e) return (0, a.jsx)(O.BlockedPaymentsContentSettings, {});
                if ((!i || null == l || !r) && !o) return (0, a.jsx)(v.default, {
                    title: V.default.Messages.REDIRECTED_CALLBACK_ERROR,
                    note: null
                });
                if (!i || null == l || !r || o) return (0, a.jsx)(S.Spinner, {});
                let j = null != l.trialId;
                return (0, a.jsx)(t, {
                    children: (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)("div", {
                            className: Y.container,
                            children: [(0, a.jsx)(Q, {}), (0, a.jsx)(q, {}), (0, a.jsx)(k.default, {
                                className: Y.planComparisonTable,
                                hideCTAs: !0,
                                headingOverride: V.default.Messages.PREMIUM_COMPARISON_TABLE_WHAT_YOU_HAVE_GOT_TITLE,
                                hidePill: !j,
                                selectedPlanColumnClassName: Y.tier2PlanComparisonTableBackground,
                                selectedPlanTier: H.PremiumTypes.TIER_2
                            })]
                        }), (0, a.jsx)(u.default, {
                            onChange: e => {
                                e && !D && (L.default.track(w.AnalyticEvents.PREMIUM_MARKETING_SURFACE_REACHED_BOTTOM, {
                                    location_stack: s
                                }), P(!0))
                            },
                            children: (0, a.jsx)("div", {
                                className: Y.bottomOfPageVisibilitySensor
                            })
                        })]
                    })
                })
            }
        },
        646105: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            }), s("222007");
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("917351"),
                r = s.n(i),
                o = s("446674"),
                d = s("77078"),
                u = s("697218"),
                c = s("10514"),
                S = s("521012"),
                E = s("216422"),
                f = s("719923"),
                T = s("541554"),
                m = s("646718"),
                _ = s("782340"),
                g = s("704129");

            function h(e) {
                let {
                    user: t,
                    planId: s,
                    count: n,
                    userPremiumSubscription: i
                } = e, [r, u] = (0, o.useStateFromStoresArray)([c.default], () => [c.default.get(s), null != i ? c.default.get(i.planId) : null]);
                if (null == r || f.default.getInterval(s).intervalType !== m.SubscriptionIntervalTypes.MONTH) return null;
                let S = null != u ? u.skuId : null,
                    T = r.skuId === S,
                    h = f.default.getDisplayName(s);
                return (0, a.jsxs)("div", {
                    className: g.accountCreditRow,
                    children: [(0, a.jsx)("div", {
                        className: l({
                            [g.iconBackgroundTier0]: r.skuId === m.PremiumSubscriptionSKUs.TIER_0,
                            [g.iconBackgroundTier1]: r.skuId === m.PremiumSubscriptionSKUs.TIER_1,
                            [g.iconBackgroundTier2]: r.skuId === m.PremiumSubscriptionSKUs.TIER_2
                        }),
                        children: (0, a.jsx)(E.default, {
                            className: g.icon
                        })
                    }), (0, a.jsxs)("div", {
                        className: g.rowDetails,
                        children: [(0, a.jsx)(d.Heading, {
                            variant: "heading-md/semibold",
                            children: _.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT.format({
                                planName: h
                            })
                        }), t.hasFreePremium() ? null : (0, a.jsx)(d.Heading, {
                            className: g.rowApplied,
                            variant: "heading-sm/semibold",
                            color: "header-secondary",
                            children: T && null != i ? _.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_APPLIED_ON.format({
                                date: i.currentPeriodEnd
                            }) : _.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_APPLIED_MISMATCHED_PLAN.format({
                                planName: h
                            })
                        })]
                    }), (0, a.jsx)(d.Text, {
                        className: g.rowCreditCount,
                        variant: "text-md/semibold",
                        children: _.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_COUNT_MONTHS.format({
                            count: n
                        })
                    })]
                })
            }
            var I = function(e) {
                let {
                    className: t,
                    entitlements: s
                } = e, n = r(Array.from(s)).filter(e => {
                    let {
                        subscriptionPlanId: t,
                        parentId: s,
                        consumed: a
                    } = e;
                    return null != t && null != s && !a
                }).groupBy(e => e.subscriptionPlanId).value(), i = (0, o.useStateFromStores)([S.default], () => S.default.getPremiumSubscription()), c = (0, o.useStateFromStores)([S.default], () => null == S.default.getPremiumTypeSubscription()), E = Object.keys(n).some(e => e === m.SubscriptionPlans.PREMIUM_MONTH_TIER_1), f = (0, o.useStateFromStores)([u.default], () => u.default.getCurrentUser());
                return null == f ? null : (0, a.jsxs)("div", {
                    children: [(0, a.jsx)("div", {
                        className: l(t, g.premiumSubscriptionAccountCredit),
                        children: Object.keys(n).map(e => (0, a.jsx)(h, {
                            planId: e,
                            count: n[e].length,
                            userPremiumSubscription: i,
                            user: f
                        }, e))
                    }), E && c && (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(d.Text, {
                            className: g.tier1AccountCreditHeader,
                            variant: "text-md/normal",
                            children: _.default.Messages.PREMIUM_TIER_1_ACCOUNT_CREDIT_HEADER
                        }), (0, a.jsx)(T.Tier1AccountCreditBanner, {})]
                    })]
                })
            }
        },
        995362: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("222007");
            var a = s("37983");
            s("884691");
            var n = s("627445"),
                l = s.n(n),
                i = s("77078"),
                r = s("812204"),
                o = s("685665"),
                d = s("10514"),
                u = s("719923"),
                c = s("153160"),
                S = s("809071"),
                E = s("646718"),
                f = s("49111"),
                T = s("782340"),
                m = s("700135");

            function _(e) {
                let {
                    subscription: t,
                    withOverheadSeparator: s
                } = e, {
                    analyticsLocations: n
                } = (0, o.default)(), [_] = (0, S.useSubscriptionInvoicePreview)({
                    subscriptionId: t.id,
                    renewal: !0,
                    analyticsLocations: n,
                    analyticsLocation: r.default.PREMIUM_SUBSCRIPTION_FINE_PRINT_CONTENT
                });
                if (null == _) return null;
                let g = s ? m.finePrintWithOverheadSeparator : m.finePrint,
                    h = _.invoiceItems.find(e => {
                        let {
                            subscriptionPlanId: t
                        } = e;
                        return (0, u.isPremiumBaseSubscriptionPlan)(t)
                    });
                if (null == h) return null;
                let I = h.subscriptionPlanId,
                    N = d.default.get(I);
                l(null != N, "Missing plan");
                let p = (0, c.formatPrice)(_.total, _.currency),
                    C = "";
                return N.interval === E.SubscriptionIntervalTypes.YEAR ? C = T.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_YEARLY.format({
                    price: p,
                    termsUrl: f.MarketingURLs.TERMS,
                    paidURL: f.MarketingURLs.PAID_TERMS,
                    privacyUrl: f.MarketingURLs.PRIVACY
                }) : N.interval === E.SubscriptionIntervalTypes.MONTH && (C = 1 === N.intervalCount ? T.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_MONTHLY.format({
                    price: p,
                    termsUrl: f.MarketingURLs.TERMS,
                    paidURL: f.MarketingURLs.PAID_TERMS,
                    privacyUrl: f.MarketingURLs.PRIVACY
                }) : T.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_MULTI_MONTH.format({
                    price: p,
                    termsUrl: f.MarketingURLs.TERMS,
                    paidURL: f.MarketingURLs.PAID_TERMS,
                    privacyUrl: f.MarketingURLs.PRIVACY,
                    intervalCount: N.intervalCount
                })), (0, a.jsx)(i.Text, {
                    color: "text-muted",
                    className: g,
                    variant: "text-xs/normal",
                    children: C
                })
            }

            function g(e) {
                let {
                    subscription: t,
                    withOverheadSeparator: s
                } = e;
                return t.status === f.SubscriptionStatusTypes.CANCELED || t.isPurchasedExternally ? null : (0, a.jsx)(_, {
                    subscription: t,
                    withOverheadSeparator: s
                })
            }
        },
        580758: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return w
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("913144"),
                u = s("850068"),
                c = s("583367"),
                S = s("316718"),
                E = s("775433"),
                f = s("79112"),
                T = s("642950"),
                m = s("736642"),
                _ = s("251334"),
                g = s("218989"),
                h = s("308592"),
                I = s("424876"),
                N = s("699260"),
                p = s("102985"),
                C = s("26092"),
                A = s("160299"),
                O = s("357957"),
                x = s("521012"),
                R = s("437712"),
                M = s("145131"),
                v = s("953109"),
                D = s("599110"),
                L = s("719923"),
                P = s("646105"),
                j = s("995362"),
                b = s("58820"),
                U = s("646718"),
                B = s("49111"),
                y = s("397336"),
                F = s("782340"),
                G = s("404234");

            function k() {
                return (0, a.jsx)(o.Card, {
                    className: G.noItemsCard,
                    type: o.Card.Types.CUSTOM,
                    children: (0, a.jsxs)(M.default, {
                        align: M.default.Align.CENTER,
                        children: [(0, a.jsx)(v.default, {
                            game: null,
                            size: v.default.Sizes.SMALL,
                            className: G.noItemsIcon
                        }), (0, a.jsx)("span", {
                            className: G.cardText,
                            children: F.default.Messages.USER_SETTINGS_NO_SUBSCRIPTION_CREDIT
                        })]
                    })
                })
            }

            function H() {
                let e = (0, r.useStateFromStores)([R.default], () => R.default.getForApplication(U.PREMIUM_SUBSCRIPTION_APPLICATION));
                return n.useEffect(() => {
                    (0, S.fetchUserEntitlementsForApplication)(U.PREMIUM_SUBSCRIPTION_APPLICATION)
                }, []), (0, a.jsxs)("section", {
                    className: G.sectionAccountCredit,
                    children: [(0, a.jsx)(o.FormTitle, {
                        className: G.accountCreditTitle,
                        tag: o.FormTitleTags.H1,
                        children: F.default.Messages.BILLING_SUBSCRIPTION_CREDIT
                    }), (0, a.jsx)("p", {
                        className: G.accountCreditDescription,
                        children: F.default.Messages.BILLING_ACCOUNT_CREDIT_DESCRIPTION
                    }), null != e && L.default.hasAccountCredit(e) ? (0, a.jsx)(P.default, {
                        className: G.accountCredit,
                        entitlements: e
                    }) : (0, a.jsx)(k, {})]
                })
            }
            var w = function() {
                let e = (0, r.useStateFromStores)([x.default], () => x.default.getPremiumTypeSubscription()),
                    t = (0, g.default)({
                        subscriptionFilter: e => b.ACTIVE_OR_PAST_DUE_STATUS.has(e.status)
                    }),
                    s = t.length > 1,
                    l = (0, r.useStateFromStores)([O.default], () => null != e && null != e.paymentSourceId ? O.default.getPaymentSource(e.paymentSourceId) : null, [e]),
                    S = (0, r.useStateFromStores)([x.default], () => x.default.hasFetchedSubscriptions()),
                    R = (0, r.useStateFromStores)([A.default], () => A.default.isBusy),
                    M = (0, h.useSubscriptionPlansLoaded)(),
                    v = (0, r.useStateFromStores)([C.default], () => C.default.getSubsection());
                return (n.useEffect(() => (d.default.wait(() => {
                    (0, E.fetchPremiumSubscriptionPlans)(), u.fetchSubscriptions(), (0, c.fetchGuildBoostSlots)(), u.fetchPaymentSources()
                }), function() {
                    f.default.clearSubsection()
                }), []), p.default.enabled) ? (0, a.jsx)(T.default, {}) : S && M ? v === y.ROLE_SUBSCRIPTION_SUBSECTION ? (0, a.jsx)(N.default, {
                    onGoBack: () => f.default.clearSubsection()
                }) : v === y.APPLICATION_SUBSCRIPTION_SUBSECTION ? (0, a.jsx)(_.default, {
                    onGoBack: () => f.default.clearSubsection()
                }) : (0, a.jsx)("div", {
                    className: G.container,
                    children: (0, a.jsxs)("div", {
                        className: G.content,
                        children: [s ? (0, a.jsx)(b.DuplicateSubscriptionsBanner, {}) : null, null != e ? (0, a.jsx)(b.default, {
                            className: G.subscriptionDetails,
                            subscription: e,
                            paymentSource: l,
                            busy: R,
                            subscriptions: t
                        }) : (0, a.jsx)(b.SubscriptionDetailsEmpty, {
                            className: G.subscriptionDetails
                        }), (0, a.jsx)(I.default, {
                            onClickManageSubscription: () => f.default.setSection(B.UserSettingsSections.SUBSCRIPTIONS, y.ROLE_SUBSCRIPTION_SUBSECTION)
                        }), (0, a.jsx)(m.default, {
                            onClickManageSubscription: () => {
                                f.default.setSection(B.UserSettingsSections.SUBSCRIPTIONS, y.APPLICATION_SUBSCRIPTION_SUBSECTION), D.default.track(B.AnalyticEvents.PREMIUM_APPLICATION_SUBSCRIPTION_MANAGE_CTA_CLICKED)
                            }
                        }), (0, a.jsx)(H, {}), null != e ? (0, a.jsx)(j.default, {
                            subscription: e,
                            withOverheadSeparator: !1
                        }) : null]
                    })
                }) : (0, a.jsx)("div", {
                    className: i(G.container, G.loading),
                    children: (0, a.jsx)(o.Spinner, {})
                })
            }
        },
        409214: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return h
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("748820"),
                o = s("509043"),
                d = s("669491"),
                u = s("77078"),
                c = s("634634"),
                S = s("449918"),
                E = s("973262"),
                f = s("832132"),
                T = s("771325"),
                m = s("49111"),
                _ = s("782340"),
                g = s("727125");

            function h(e) {
                let {
                    onChange: t,
                    onClose: s,
                    color: l,
                    suggestedColors: h,
                    disabled: I,
                    label: N,
                    colorPickerMiddle: p,
                    colorPickerFooter: C,
                    showEyeDropper: A
                } = e, O = n.useRef(null), x = (0, u.useToken)(d.default.colors.BACKGROUND_PRIMARY).hex(), R = d.default.colors.BACKGROUND_ACCENT.css, M = (0, T.isColorDark)(l), v = (0, o.int2hex)(l), D = v === x ? R : v, L = (0, S.getColor)(M ? m.Color.WHITE_500 : m.Color.PRIMARY_530), P = (0, c.default)(p), j = (0, c.default)(C), [b, U] = n.useState((0, r.v4)());
                return n.useEffect(() => {
                    (P !== p || j !== C) && U((0, r.v4)())
                }, [C, p, j, P]), (0, a.jsx)(u.Popout, {
                    positionKey: b,
                    renderPopout: e => (0, a.jsx)(E.CustomColorPicker, {
                        ...e,
                        value: l,
                        onChange: t,
                        suggestedColors: h,
                        middle: p,
                        footer: C,
                        showEyeDropper: A
                    }),
                    onRequestClose: s,
                    children: e => {
                        let {
                            onClick: t,
                            ...s
                        } = e;
                        return (0, a.jsxs)("div", {
                            ref: O,
                            className: i(g.colorSwatch, {
                                [g.disabled]: I
                            }),
                            children: [(0, a.jsx)(u.Clickable, {
                                ...s,
                                tabIndex: I ? -1 : 0,
                                onClick: I ? m.NOOP : t,
                                style: {
                                    backgroundColor: v,
                                    borderColor: D
                                },
                                className: g.swatch,
                                "aria-label": _.default.Messages.USER_SETTINGS_PROFILE_COLOR_SELECT_COLOR,
                                focusProps: {
                                    ringTarget: O
                                },
                                children: (0, a.jsx)(f.default, {
                                    className: g.editPencilIcon,
                                    width: 14,
                                    height: 14,
                                    color: L
                                })
                            }), N]
                        })
                    }
                })
            }
        },
        891653: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("216422"),
                o = s("782340"),
                d = s("881609");

            function u(e) {
                let {
                    text: t = o.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                    className: s
                } = e;
                return (0, a.jsx)(i.Tooltip, {
                    text: t,
                    children: e => (0, a.jsx)(i.Clickable, {
                        ...e,
                        children: (0, a.jsx)(r.default, {
                            className: l(d.nitroWheel, s)
                        })
                    })
                })
            }
        },
        763417: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("424562"),
                i = s("808030"),
                r = s("735690");

            function o() {
                let e = (0, n.useStateFromStores)([l.default], () => l.default.showNotice());
                return e ? (0, a.jsx)(i.default, {}) : (0, a.jsx)(r.default, {})
            }
        },
        470022: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return x
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("800751"),
                o = s("685665"),
                d = s("260518"),
                u = s("929423"),
                c = s("424562"),
                S = s("376402"),
                E = s("506885"),
                f = s("621200"),
                T = s("305961"),
                m = s("162771"),
                _ = s("677099"),
                g = s("790618"),
                h = s("697218"),
                I = s("659500"),
                N = s("543306"),
                p = s("49111"),
                C = s("397336"),
                A = s("782340"),
                O = s("792841");

            function x() {
                d.default.useExperiment({
                    location: "profile_customization_auto"
                });
                let e = (0, l.useStateFromStores)([_.default], () => _.default.getFlattenedGuildIds()),
                    t = (0, l.useStateFromStores)([c.default], () => c.default.getGuild()),
                    s = (0, l.useStateFromStores)([m.default], () => m.default.getGuildId()),
                    x = (0, l.useStateFromStores)([T.default], () => T.default.getGuild(null != s ? s : e[0])),
                    R = (0, l.useStateFromStores)([c.default, g.default], () => c.default.showNotice() || g.default.showNotice()),
                    M = null != t ? t : x,
                    v = (0, l.useStateFromStores)([h.default], () => h.default.getCurrentUser()),
                    {
                        subsection: D,
                        setSubsection: L
                    } = (0, N.default)(),
                    {
                        AnalyticsLocationProvider: P,
                        analyticsLocations: j
                    } = (0, o.default)();
                return n.useEffect(() => {
                    null != v && (0, E.default)(v.id, v.getAvatarURL(null == M ? void 0 : M.id, 80), {
                        guildId: null == M ? void 0 : M.id
                    })
                }, [null == M ? void 0 : M.id, v]), (0, a.jsx)(P, {
                    children: (0, a.jsxs)(i.HeadingLevel, {
                        component: (0, a.jsx)(i.Heading, {
                            variant: "heading-lg/semibold",
                            children: A.default.Messages.USER_SETTINGS_PROFILES
                        }),
                        children: [(0, a.jsxs)(i.TabBar, {
                            className: O.tabBar,
                            type: "top",
                            look: "brand",
                            selectedItem: D,
                            onItemSelect: function(e) {
                                if (D !== e) {
                                    if (R) {
                                        I.ComponentDispatch.dispatch(p.ComponentActions.SHAKE_APP, {
                                            duration: 300,
                                            intensity: r.SHAKE_INTENSITY_DEFAULT
                                        }), I.ComponentDispatch.dispatch(p.ComponentActions.EMPHASIZE_NOTICE);
                                        return
                                    }
                                    e === C.ProfileCustomizationSubsection.GUILD && null == t && null != M && (0, u.initGuildIdentitySettings)(M, j), L(e)
                                }
                            },
                            children: [(0, a.jsx)(i.TabBar.Item, {
                                className: O.tabBarItem,
                                id: C.ProfileCustomizationSubsection.USER_PROFILE,
                                children: A.default.Messages.EDIT_PROFILE_CATEGORY_USER_PROFILE
                            }, C.ProfileCustomizationSubsection.USER_PROFILE), (0, a.jsx)(i.TabBar.Item, {
                                className: O.tabBarItem,
                                id: C.ProfileCustomizationSubsection.GUILD,
                                children: A.default.Messages.EDIT_PROFILE_CATEGORY_GUILD_IDENTITY
                            }, C.ProfileCustomizationSubsection.GUILD)]
                        }), D === C.ProfileCustomizationSubsection.GUILD ? (0, a.jsx)(S.default, {
                            selectedGuild: M
                        }) : (0, a.jsx)(f.default, {})]
                    })
                })
            }
        },
        11899: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("394846"),
                r = s("77078"),
                o = s("570697"),
                d = s("782340"),
                u = s("56438");

            function c(e) {
                let {
                    children: t,
                    className: s,
                    layoutClassName: n,
                    profilePreview: c,
                    previewTitle: S
                } = e, E = () => (0, a.jsx)(o.default, {
                    title: null != S ? S : d.default.Messages.PROFILE_CUSTOMIZATION_PREVIEW,
                    className: u.preview,
                    children: c
                });
                return (0, a.jsx)("div", {
                    className: s,
                    children: (0, a.jsxs)(r.FormSection, {
                        className: u.profileCustomizationSection,
                        children: [i.isMobile && E(), (0, a.jsxs)("div", {
                            className: l(u.baseLayout, n),
                            children: [t, !i.isMobile && E()]
                        })]
                    })
                })
            }
        },
        702877: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("850391"),
                r = s("149022"),
                o = s("681060"),
                d = s("233069"),
                u = s("476765"),
                c = s("570697"),
                S = s("49111"),
                E = s("782340"),
                f = s("515847");
            let T = (0, u.uid)(),
                m = (0, d.createChannelRecord)({
                    id: "1",
                    type: S.ChannelTypes.DM
                }),
                _ = (0, u.uid)();

            function g(e) {
                let {
                    sectionTitle: t,
                    errors: s,
                    onBioChange: d,
                    pendingBio: u,
                    placeholder: g,
                    currentBio: h,
                    disabled: I = !1
                } = e, [N, p] = n.useState(null != u ? u : h), [C, A] = n.useState((0, r.toRichValue)(N)), O = n.useRef(!1);
                return n.useEffect(() => {
                    if (void 0 === u) {
                        let e = (0, r.toRichValue)(h);
                        p(h), A(e)
                    }
                }, [u, h]), (0, a.jsxs)(c.default, {
                    title: t,
                    titleId: T,
                    description: E.default.Messages.USER_SETTINGS_ABOUT_ME_DETAILS,
                    errors: s,
                    disabled: I,
                    children: [(0, a.jsx)(o.default, {
                        "aria-describedby": _,
                        "aria-labelledby": T,
                        innerClassName: f.bioTextArea,
                        maxCharacterCount: S.BIO_MAX_LENGTH,
                        onChange: function(e, t, s) {
                            t !== N && (p(t), A(s), d(t))
                        },
                        placeholder: g,
                        channel: m,
                        textValue: N,
                        richValue: C,
                        type: i.ChatInputTypes.PROFILE_BIO_INPUT,
                        onBlur: () => {
                            O.current = !1
                        },
                        onFocus: () => {
                            O.current = !0
                        },
                        focused: O.current,
                        onSubmit: function() {
                            return new Promise(e => {
                                e({
                                    shouldClear: !1,
                                    shouldRefocus: !0
                                })
                            })
                        }
                    }), (0, a.jsx)(l.HiddenVisually, {
                        id: _,
                        children: E.default.Messages.MAXIMUM_LENGTH.format({
                            maxLength: S.BIO_MAX_LENGTH
                        })
                    })]
                })
            }
        },
        668688: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("685665"),
                u = s("606292"),
                c = s("790618"),
                S = s("181114"),
                E = s("906932"),
                f = s("570697"),
                T = s("782340"),
                m = s("808084");

            function _(e) {
                let {
                    user: t,
                    className: s,
                    forcedDivider: l = !1,
                    withTutorial: _ = !1,
                    isTryItOutFlow: g = !1
                } = e, {
                    analyticsLocations: h
                } = (0, d.default)(), {
                    pendingAvatarDecoration: I,
                    errors: N
                } = (0, r.useStateFromStoresObject)([c.default], () => ({
                    pendingAvatarDecoration: c.default.getPendingAvatarDecoration(),
                    errors: c.default.getErrors().avatarDecoration
                })), p = n.useCallback(() => (0, u.openAvatarDecorationModal)({
                    analyticsLocations: h,
                    isTryItOutFlow: g
                }), [h, g]), C = g || void 0 !== I ? null != I : null != t.avatarDecoration, A = _ ? S.default : o.Button;
                return (0, a.jsx)(f.default, {
                    className: s,
                    forcedDivider: l,
                    hasBackground: !0,
                    title: T.default.Messages.USER_SETTINGS_AVATAR_DECORATION,
                    errors: N,
                    children: (0, a.jsxs)("div", {
                        className: m.buttonsContainer,
                        children: [(0, a.jsx)(A, {
                            size: o.Button.Sizes.SMALL,
                            onClick: p,
                            className: i({
                                [m.buttonHighlighted]: _
                            }),
                            children: T.default.Messages.USER_SETTINGS_CHANGE_AVATAR_DECORATION
                        }), C && (0, a.jsx)(o.Button, {
                            className: m.removeButton,
                            color: o.Button.Colors.PRIMARY,
                            look: o.Button.Looks.LINK,
                            size: o.Button.Sizes.SMALL,
                            onClick: function() {
                                (0, E.setNewPendingAvatarDecoration)(null, t.avatarDecoration)
                            },
                            children: T.default.Messages.USER_SETTINGS_REMOVE_AVATAR_DECORATION
                        })]
                    })
                })
            }
        },
        447645: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("181114"),
                o = s("771325"),
                d = s("570697"),
                u = s("75015"),
                c = s("782340"),
                S = s("359223");
            let E = [{
                name: "gif",
                extensions: ["gif"]
            }];

            function f(e) {
                let {
                    showRemoveAvatarButton: t,
                    errors: s,
                    onAvatarChange: n,
                    sectionTitle: f,
                    changeAvatarButtonText: T,
                    guildId: m,
                    className: _,
                    disabled: g = !1,
                    isTryItOutFlow: h = !1,
                    forcedDivider: I,
                    withHighlight: N = !1
                } = e, p = N ? r.default : i.Button;
                return (0, a.jsx)(d.default, {
                    className: _,
                    title: f,
                    errors: s,
                    disabled: g,
                    forcedDivider: I,
                    children: (0, a.jsxs)("div", {
                        className: S.buttonsContainer,
                        children: [(0, a.jsx)(p, {
                            className: l({
                                [S.buttonHighlighted]: N
                            }),
                            size: i.Button.Sizes.SMALL,
                            onClick: () => (0, o.handleOpenSelectImageModal)(u.UploadTypes.AVATAR, m, h, h ? E : void 0),
                            children: null != T ? T : c.default.Messages.USER_SETTINGS_CHANGE_AVATAR
                        }), t && (0, a.jsx)(i.Button, {
                            className: S.removeButton,
                            color: i.Button.Colors.PRIMARY,
                            look: i.Button.Looks.LINK,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => n(null),
                            children: null != m ? c.default.Messages.USER_SETTINGS_RESET_AVATAR : c.default.Messages.USER_SETTINGS_REMOVE_AVATAR
                        })]
                    })
                })
            }
        },
        570697: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("781738");
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("254490"),
                o = s("891653"),
                d = s("632892"),
                u = s("326908");

            function c(e) {
                let {
                    errors: t
                } = e;
                return (0, a.jsx)(a.Fragment, {
                    children: t.map((e, t) => (0, a.jsx)(i.Text, {
                        variant: "text-xs/normal",
                        color: "text-danger",
                        className: u.errorMessage,
                        children: e.replace(/[0-9.,]+ ?kb/g, e => {
                            let t = 1024 * parseInt(e, 10);
                            return isNaN(t) ? e : (0, r.sizeString)(t)
                        })
                    }, t))
                })
            }

            function S(e) {
                let {
                    title: t,
                    titleIcon: s,
                    titleId: n,
                    description: r,
                    children: S,
                    className: E,
                    errors: f,
                    disabled: T = !1,
                    hideDivider: m = !1,
                    showBorder: _ = !1,
                    borderType: g,
                    hasBackground: h = !1,
                    forcedDivider: I = !1,
                    showPremiumIcon: N = !1
                } = e;
                return (0, a.jsx)("div", {
                    className: l(u.customizationSection, E, {
                        [u.disabled]: T,
                        [u.hideDivider]: m,
                        [u.showBorder]: _,
                        [u.withDivider]: I
                    }),
                    children: (0, a.jsxs)(d.default, {
                        className: u.customizationSectionBorder,
                        backgroundClassName: u.customizationSectionBackground,
                        isShown: _,
                        type: g,
                        hasBackground: h,
                        children: [(0, a.jsxs)(i.FormTitle, {
                            className: u.title,
                            id: n,
                            children: [t, N && (0, a.jsx)(o.default, {}), s]
                        }), null != r ? (0, a.jsx)(i.FormText, {
                            type: i.FormText.Types.DESCRIPTION,
                            className: u.sectionDescription,
                            children: r
                        }) : null, S, null != f && (0, a.jsx)(c, {
                            errors: f
                        })]
                    })
                })
            }
        },
        569460: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("570697"),
                i = s("49111"),
                r = s("782340");

            function o(e) {
                var t, s;
                return (0, a.jsx)(l.default, {
                    errors: e.errors,
                    disabled: e.disabled,
                    title: r.default.Messages.DISPLAY_NAME,
                    children: (0, a.jsx)("div", {
                        children: (0, a.jsx)(n.TextInput, {
                            placeholder: e.placeholder,
                            maxLength: i.DISPLAY_NAME_MAX_LENGTH,
                            onChange: e.onGlobalNameChange,
                            value: null !== (s = null !== (t = e.pendingGlobalName) && void 0 !== t ? t : e.currentGlobalName) && void 0 !== s ? s : ""
                        })
                    })
                })
            }
        },
        97747: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("845579"),
                i = s("782340");

            function r(e) {
                let t = l.LegacyUsernameDisabled.useSetting();
                return (0, a.jsx)(n.FormSwitch, {
                    hideBorder: !0,
                    value: !t,
                    onChange: () => l.LegacyUsernameDisabled.updateSetting(!t),
                    note: t ? null : i.default.Messages.UNIQUE_USERNAME_TOGGLE_SUBTITLE.format({
                        username: e.legacyUsername
                    }),
                    children: i.default.Messages.UNIQUE_USERNAME_TOGGLE_TITLE
                })
            }
        },
        52704: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("181114"),
                o = s("771325"),
                d = s("570697"),
                u = s("75015"),
                c = s("782340"),
                S = s("650130");

            function E(e) {
                let {
                    showRemoveBannerButton: t,
                    errors: s,
                    onBannerChange: n,
                    guildId: E,
                    className: f,
                    disabled: T = !1,
                    showPremiumIcon: m = !0,
                    isTryItOutFlow: _ = !1,
                    forcedDivider: g,
                    withHighlight: h = !1
                } = e, I = h ? r.default : i.Button;
                return (0, a.jsx)(d.default, {
                    className: f,
                    title: c.default.Messages.USER_SETTINGS_PROFILE_BANNER,
                    showPremiumIcon: m,
                    errors: s,
                    disabled: T,
                    forcedDivider: g,
                    children: (0, a.jsxs)("div", {
                        className: S.buttonsContainer,
                        children: [(0, a.jsx)(I, {
                            className: l({
                                [S.buttonHighlighted]: h
                            }),
                            size: i.Button.Sizes.SMALL,
                            onClick: () => (0, o.handleOpenSelectImageModal)(u.UploadTypes.BANNER, E, _, void 0),
                            children: c.default.Messages.CHANGE_BANNER
                        }), t && (0, a.jsx)(i.Button, {
                            className: S.removeButton,
                            color: i.Button.Colors.PRIMARY,
                            look: i.Button.Looks.LINK,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => n(null),
                            children: null != E ? c.default.Messages.USER_SETTINGS_RESET_BANNER : c.default.Messages.USER_SETTINGS_REMOVE_BANNER
                        })]
                    })
                })
            }
        },
        79685: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("509043"),
                l = s("669491"),
                i = s("77078"),
                r = s("462274"),
                o = s("409214"),
                d = s("570697"),
                u = s("782340");

            function c(e) {
                var t;
                let {
                    user: s,
                    savedUserColor: c,
                    pendingColor: S,
                    setPendingAccentColor: E
                } = e, f = s.getAvatarURL(null, 80), T = (0, i.useToken)(l.default.unsafe_rawColors.PRIMARY_530).hex(), m = (0, r.useAvatarColors)(f, T, !1), _ = (0, n.hex2int)(m[0]);
                return (0, a.jsx)(d.default, {
                    title: u.default.Messages.USER_SETTINGS_BANNER_COLOR_TITLE,
                    children: (0, a.jsx)(o.default, {
                        onChange: e => E(e),
                        color: null !== (t = null != S ? S : c) && void 0 !== t ? t : _,
                        suggestedColors: m,
                        showEyeDropper: !0
                    })
                })
            }
        },
        741781: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("65597"),
                o = s("77078"),
                d = s("685665"),
                u = s("493390"),
                c = s("217513"),
                S = s("790618"),
                E = s("181114"),
                f = s("599110"),
                T = s("719923"),
                m = s("906932"),
                _ = s("570697"),
                g = s("632892"),
                h = s("49111"),
                I = s("646718"),
                N = s("782340"),
                p = s("273072");

            function C(e) {
                let {
                    user: t,
                    guild: s,
                    className: l,
                    forcedDivider: C = !1,
                    withTutorial: A = !1,
                    showBorder: O = !1,
                    isTryItOutFlow: x = !1,
                    initialSelectedEffectId: R
                } = e, M = (0, c.default)(t.id, null == s ? void 0 : s.id), v = T.default.canUsePremiumProfileCustomization(t), {
                    analyticsLocations: D
                } = (0, d.default)(), {
                    pendingProfileEffectId: L,
                    errors: P
                } = (0, r.useStateFromStoresObject)([S.default], () => ({
                    pendingProfileEffectId: S.default.getPendingProfileEffectId(),
                    errors: S.default.getErrors().profileEffect
                })), j = n.useCallback(() => (0, u.openProfileEffectModal)({
                    analyticsLocations: D,
                    initialSelectedEffectId: R
                }), [D, R]);
                n.useEffect(() => {
                    v && f.default.track(h.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: I.PremiumUpsellTypes.PROFILE_EFFECTS_INLINE_SETTINGS,
                        location_stack: D
                    })
                }, [v, D]);
                let b = x || void 0 !== L ? null != L : (null == M ? void 0 : M.profileEffectId) != null,
                    U = A ? E.default : o.Button;
                return (0, a.jsx)(_.default, {
                    forcedDivider: C,
                    borderType: g.FeatureBorderTypes.PREMIUM,
                    hasBackground: !0,
                    title: N.default.Messages.USER_SETTINGS_PROFILE_EFFECT,
                    showBorder: O,
                    errors: P,
                    className: l,
                    children: (0, a.jsxs)("div", {
                        className: p.buttonsContainer,
                        children: [(0, a.jsx)(U, {
                            size: o.Button.Sizes.SMALL,
                            onClick: j,
                            className: i({
                                [p.buttonHighlighted]: A
                            }),
                            children: N.default.Messages.USER_SETTINGS_CHANGE_PROFILE_EFFECT
                        }), b && (0, a.jsx)(o.Button, {
                            className: p.removeButton,
                            color: o.Button.Colors.PRIMARY,
                            look: o.Button.Looks.LINK,
                            size: o.Button.Sizes.SMALL,
                            onClick: function() {
                                (0, m.setNewPendingProfileEffectId)(null, null == M ? void 0 : M.profileEffectId)
                            },
                            children: N.default.Messages.USER_SETTINGS_REMOVE_PROFILE_EFFECT
                        })]
                    })
                })
            }
        },
        121370: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("222007");
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("969176"),
                r = s.n(i),
                o = s("669491"),
                d = s("77078"),
                u = s("462274"),
                c = s("217513"),
                S = s("528438"),
                E = s("719923"),
                f = s("409214"),
                T = s("570697"),
                m = s("782340"),
                _ = s("431416");

            function g(e) {
                let {
                    user: t,
                    pendingAvatar: s,
                    pendingColors: n,
                    onThemeColorsChange: i,
                    preventDisabled: g,
                    guildId: h,
                    className: I,
                    showPremiumIcon: N = !0,
                    showResetThemeButton: p = !1,
                    forcedDivider: C
                } = e, A = (0, c.default)(t.id, h), [O, x] = (0, S.default)(t, A, {
                    pendingThemeColors: n,
                    isPreview: !0
                }), R = E.default.canUsePremiumProfileCustomization(t), M = null != s ? s : t.getAvatarURL(h, 80), v = (0, d.useToken)(o.default.unsafe_rawColors.PRIMARY_530).hex(), D = (0, u.useAvatarColors)(M, v, !1);
                if (null == O || null == x) return null;
                let L = e => {
                    let t = r(e, null == A ? void 0 : A.themeColors);
                    i(t ? void 0 : e)
                };
                return (0, a.jsx)(T.default, {
                    title: m.default.Messages.USER_SETTINGS_PROFILE_THEME,
                    disabled: !R && !g,
                    className: l(_.profileThemesSection, I),
                    showPremiumIcon: N,
                    forcedDivider: C,
                    children: (0, a.jsxs)("div", {
                        className: _.sectionContainer,
                        children: [(0, a.jsx)("div", {
                            className: _.sparkleContainer,
                            children: (0, a.jsx)(f.default, {
                                onChange: e => L([e, x]),
                                color: O,
                                suggestedColors: D,
                                showEyeDropper: !0,
                                label: (0, a.jsx)(d.Text, {
                                    className: _.colorSwatchLabel,
                                    color: "header-secondary",
                                    variant: "text-xs/normal",
                                    "aria-hidden": !0,
                                    children: m.default.Messages.USER_SETTINGS_PROFILE_THEME_PRIMARY
                                })
                            })
                        }), (0, a.jsx)("div", {
                            className: _.sparkleContainer,
                            children: (0, a.jsx)(f.default, {
                                onChange: e => L([O, e]),
                                color: x,
                                suggestedColors: D,
                                showEyeDropper: !0,
                                label: (0, a.jsx)(d.Text, {
                                    className: _.colorSwatchLabel,
                                    color: "header-secondary",
                                    variant: "text-xs/normal",
                                    "aria-hidden": !0,
                                    children: m.default.Messages.USER_SETTINGS_PROFILE_THEME_ACCENT
                                })
                            })
                        }), p && null != h && (0, a.jsx)(d.Button, {
                            className: _.resetButton,
                            color: d.Button.Colors.PRIMARY,
                            look: d.Button.Looks.LINK,
                            size: d.Button.Sizes.SMALL,
                            onClick: () => L([null, null]),
                            children: m.default.Messages.USER_SETTINGS_RESET_PROFILE_THEME
                        })]
                    })
                })
            }
        },
        370505: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("570697"),
                i = s("782340");

            function r(e) {
                let {
                    sectionTitle: t,
                    errors: s,
                    onPronounsChange: r,
                    pendingPronouns: o,
                    placeholder: d,
                    currentPronouns: u,
                    disabled: c = !1
                } = e;
                return (0, a.jsx)(l.default, {
                    title: t,
                    errors: s,
                    disabled: c,
                    children: (0, a.jsx)(n.TextInput, {
                        placeholder: null != d ? d : i.default.Messages.PROFILE_CUSTOMIZATION_PRONOUNS_PLACEHOLDER,
                        maxLength: 40,
                        value: null != o ? o : u,
                        onChange: function(e) {
                            r(e === u ? void 0 : e)
                        },
                        disabled: c
                    })
                })
            }
        },
        635415: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return y
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("152584"),
                o = s("875212"),
                d = s("812204"),
                u = s("685665"),
                c = s("345210"),
                S = s("793346"),
                E = s("154889"),
                f = s("917247"),
                T = s("956597"),
                m = s("635956"),
                _ = s("783142"),
                g = s("217513"),
                h = s("225849"),
                I = s("790618"),
                N = s("216422"),
                p = s("599110"),
                C = s("719923"),
                A = s("184900"),
                O = s("11899"),
                x = s("668688"),
                R = s("447645"),
                M = s("632892"),
                v = s("52704"),
                D = s("741781"),
                L = s("121370"),
                P = s("49111"),
                j = s("646718"),
                b = s("397336"),
                U = s("782340"),
                B = s("387813");

            function y(e) {
                var t, y, F;
                let {
                    user: G
                } = e, {
                    reducedMotion: k
                } = n.useContext(i.AccessibilityPreferencesContext), H = C.default.isPremium(G), {
                    pendingAvatar: w,
                    pendingBanner: V,
                    pendingThemeColors: Y,
                    pendingPronouns: W,
                    pendingBio: K,
                    tryItOutThemeColors: z,
                    tryItOutAvatar: Q,
                    tryItOutBanner: q,
                    tryItOutAvatarDecoration: Z,
                    tryItOutProfileEffectId: X
                } = (0, l.useStateFromStoresObject)([I.default], () => {
                    let e = I.default.getAllPending(),
                        t = I.default.getErrors(),
                        s = I.default.getAllTryItOut();
                    return {
                        ...e,
                        ...s,
                        errors: t
                    }
                }), J = (0, c.default)(Z), $ = (0, S.default)(X), ee = n.useRef(null);
                (0, h.default)(ee, b.ProfileCustomizationScrollPositions.TRY_IT_OUT);
                let et = (0, g.default)(G.id),
                    es = null == et ? void 0 : et.getPreviewBio(K),
                    {
                        AnalyticsLocationProvider: ea,
                        sourceAnalyticsLocations: en
                    } = (0, u.default)(d.default.USER_SETTINGS_TRY_OUT_PREMIUM);
                n.useEffect(() => {
                    p.default.track(P.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: j.PremiumUpsellTypes.PREMIUM_PROFILE_TRY_IT_OUT,
                        location: {
                            page: P.AnalyticsPages.USER_SETTINGS
                        },
                        location_stack: en
                    })
                }, [en, G]);
                let el = (null === (y = (0, f.usePremiumTrialOffer)()) || void 0 === y ? void 0 : null === (t = y.subscription_trial) || void 0 === t ? void 0 : t.sku_id) === j.PremiumSubscriptionSKUs.TIER_2,
                    ei = (0, E.usePremiumDiscountOffer)(),
                    er = (0, E.discountOfferHasTier)(ei, j.PremiumSubscriptionSKUs.TIER_2),
                    eo = "TryOutPremiumSection";
                return (0, o.useTriggerDebuggingAA)({
                    location: eo + " auto on",
                    autoTrackExposure: !0
                }), (0, o.useTriggerDebuggingAA)({
                    location: eo + " auto off",
                    autoTrackExposure: !1
                }), (0, a.jsx)(ea, {
                    children: (0, a.jsxs)(M.default, {
                        ref: ee,
                        className: B.tryItOutSection,
                        type: M.FeatureBorderTypes.PREMIUM,
                        isShown: !0,
                        hasBackground: !0,
                        children: [(0, a.jsx)(O.default, {
                            layoutClassName: B.tryItOutLayout,
                            previewTitle: (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)(N.default, {
                                    className: B.premiumIcon
                                }), U.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_PREVIEW]
                            }),
                            profilePreview: (0, a.jsx)(A.default, {
                                user: G,
                                onAvatarChange: _.setTryItOutAvatar,
                                onBannerChange: _.setTryItOutBanner,
                                pendingPronouns: W,
                                pendingBio: K,
                                pendingBanner: null !== (F = null != q ? q : V) && void 0 !== F ? F : s("901979"),
                                pendingAvatar: null != Q ? Q : w,
                                pendingThemeColors: null != z ? z : Y,
                                pendingAvatarDecoration: J,
                                pendingProfileEffectId: $,
                                avatarClassName: null != Q || null != w || k.enabled ? void 0 : B.spinningAvatar,
                                canUsePremiumCustomization: !0,
                                isTryItOutFlow: !0,
                                hideExampleButton: !0,
                                hideFakeActivity: !!(null == es ? void 0 : es.value)
                            }),
                            children: (0, a.jsxs)("div", {
                                className: B.editor,
                                children: [(0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(i.Heading, {
                                        variant: "heading-xl/extrabold",
                                        children: U.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_HEADER
                                    }), (0, a.jsx)(i.Text, {
                                        className: B.description,
                                        variant: "text-sm/normal",
                                        children: U.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_DESCRIPTION
                                    })]
                                }), (0, a.jsx)(L.default, {
                                    className: B.customizationSection,
                                    user: G,
                                    pendingAvatar: null != Q ? Q : w,
                                    pendingColors: null != z ? z : Y,
                                    onThemeColorsChange: _.setTryItOutThemeColors,
                                    showPremiumIcon: !1,
                                    preventDisabled: !0
                                }), (0, a.jsx)(v.default, {
                                    className: B.customizationSection,
                                    isTryItOutFlow: !0,
                                    showRemoveBannerButton: null != q,
                                    onBannerChange: _.setTryItOutBanner,
                                    showPremiumIcon: !1
                                }), (0, a.jsx)(R.default, {
                                    className: B.customizationSection,
                                    isTryItOutFlow: !0,
                                    onAvatarChange: _.setTryItOutAvatar,
                                    showRemoveAvatarButton: !1,
                                    changeAvatarButtonText: U.default.Messages.USER_SETTINGS_ADD_ANIMATED_AVATAR,
                                    sectionTitle: U.default.Messages.PREMIUM_TIER_0_FEATURE_AVATAR
                                }), (0, a.jsx)(x.default, {
                                    isTryItOutFlow: !0,
                                    className: B.customizationSection,
                                    user: G
                                }, "decoration"), (0, a.jsx)(D.default, {
                                    className: B.customizationSection,
                                    isTryItOutFlow: !0,
                                    initialSelectedEffectId: $,
                                    user: G
                                }, "effect"), !el && (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsx)(i.Text, {
                                        variant: "text-sm/normal",
                                        className: B.premiumPerksListTitle,
                                        children: U.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_ALSO_INCLUDES
                                    }), (0, a.jsx)(m.default, {
                                        onSubscribeModalClose: e => {
                                            e && ((0, r.setPendingAvatar)(Q), (0, _.setPendingBanner)(q), (0, _.setPendingThemeColors)(z))
                                        },
                                        subscriptionTier: j.PremiumSubscriptionSKUs.TIER_2,
                                        className: B.premiumSubscribeButton,
                                        size: i.Button.Sizes.MEDIUM,
                                        buttonText: H ? U.default.Messages.USER_SETTINGS_PROFILE_THEMES_UPSELL_UPGRADE : er ? U.default.Messages.PREMIUM_DISCOUNT_CTA.format({
                                            percent: null == ei ? void 0 : ei.discount.amount
                                        }) : U.default.Messages.PREMIUM_UPSELL_GET_NITRO
                                    })]
                                })]
                            })
                        }), el && (0, a.jsxs)("div", {
                            children: [(0, a.jsx)("div", {
                                className: B.premiumTier2Divider
                            }), (0, a.jsx)(T.default, {
                                type: j.PremiumUpsellTypes.CUSTOM_PROFILE_TRY_OUT_UPSELL,
                                subscriptionTier: j.PremiumSubscriptionSKUs.TIER_2
                            })]
                        })]
                    })
                })
            }
        },
        543306: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            }), s("222007");
            var a = s("884691"),
                n = s("65597"),
                l = s("79112"),
                i = s("26092"),
                r = s("49111"),
                o = s("397336");
            let d = new Set(Object.values(o.ProfileCustomizationSubsection)),
                u = e => null != e && d.has(e);
            var c = () => {
                let e = (0, n.default)([i.default], () => {
                        let e = i.default.getSubsection();
                        return u(e) ? e : o.ProfileCustomizationSubsection.USER_PROFILE
                    }),
                    t = a.useCallback(t => {
                        e !== t && l.default.setSection(r.UserSettingsSections.PROFILE_CUSTOMIZATION, t)
                    }, [e]);
                return {
                    subsection: e,
                    setSubsection: t
                }
            }
        },
        493390: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openProfileEffectModal: function() {
                    return l
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078");
            let l = e => {
                let {
                    analyticsLocations: t,
                    initialSelectedEffectId: l
                } = e;
                (0, n.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await s.el("889793").then(s.bind(s, "889793"));
                    return s => (0, a.jsx)(e, {
                        ...s,
                        initialSelectedEffectId: l,
                        analyticsLocations: t
                    })
                }, {})
            }
        },
        456931: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return n
                }
            });
            var a = s("913144"),
                n = {
                    startSpeedTest() {
                        a.default.dispatch({
                            type: "RTC_SPEED_TEST_START_TEST"
                        })
                    },
                    stopSpeedTest() {
                        a.default.dispatch({
                            type: "RTC_SPEED_TEST_STOP_TEST"
                        })
                    }
                }
        },
        84908: function(e, t, s) {
            "use strict";
            var a, n, l, i, r, o, d, u;
            s.r(t), s.d(t, {
                SpeedTestStates: function() {
                    return a
                },
                SpeedTestDirections: function() {
                    return n
                },
                SpeedTestLifecycles: function() {
                    return l
                },
                SpeedTestOpcodes: function() {
                    return i
                }
            }), (r = a || (a = {})).STARTING_RECEIVER = "STARTING_RECEIVER", r.SENDING = "SENDING", r.AWAITING_RESULTS = "AWAITING_RESULTS", r.COMPLETED = "COMPLETED", (o = n || (n = {})).CLIENT_TO_SERVER = "CLIENT_TO_SERVER", o.SERVER_TO_CLIENT = "SERVER_TO_CLIENT", (d = l || (l = {}))[d.INACTIVE = 0] = "INACTIVE", d[d.CANCELLED = 1] = "CANCELLED", d[d.AWAITING_ENDPOINT = 2] = "AWAITING_ENDPOINT", d[d.CONNECTING = 3] = "CONNECTING", d[d.PINGING = 4] = "PINGING", d[d.TESTING = 5] = "TESTING", d[d.UPLOADING = 6] = "UPLOADING", d[d.COMPLETED = 7] = "COMPLETED", (u = i || (i = {}))[u.CLIENT_TO_SERVER_START = 0] = "CLIENT_TO_SERVER_START", u[u.CLIENT_TO_SERVER_END = 1] = "CLIENT_TO_SERVER_END", u[u.SERVER_TO_CLIENT_START = 2] = "SERVER_TO_CLIENT_START", u[u.SERVER_TO_CLIENT_END = 3] = "SERVER_TO_CLIENT_END"
        },
        868391: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return n
                }
            }), s("70102"), s("781738");
            var a, n, l = s("552442"),
                i = s.n(l),
                r = s("44170"),
                o = s("746379"),
                d = s.n(o),
                u = s("748820"),
                c = s("981980"),
                S = s("773364"),
                E = s("417040"),
                f = s("605250"),
                T = s("42887"),
                m = s("773336"),
                _ = s("414074"),
                g = s("84908"),
                h = s("49111"),
                I = s("353927");
            let N = /^https/.test((a = "https:", "https:")) ? "wss:" : "ws:";
            n = class extends r.EventEmitter {
                connect() {
                    this._backoff.cancel();
                    let e = this._socket = new E.default(this._endpoint);
                    e.on(E.SocketEvent.Connecting, this._handleConnecting.bind(this, e)), e.on(E.SocketEvent.Connect, this._handleConnect.bind(this, e)), e.on(E.SocketEvent.Disconnect, this._handleDisconnect.bind(this, e)), e.on(E.SocketEvent.Resuming, this._handleResuming.bind(this, e)), e.on(E.SocketEvent.Ready, this._handleReady.bind(this, e)), e.on(E.SocketEvent.Speaking, this._handleSpeaking.bind(this, e)), e.on(E.SocketEvent.Video, this._handleVideo.bind(this, e)), e.on(E.SocketEvent.Ping, this._handleControlPing.bind(this)), e.on(E.SocketEvent.ClientDisconnect, this._handleClientDisconnect.bind(this)), e.on(E.SocketEvent.Codecs, this._handleCodecs.bind(this)), e.on(E.SocketEvent.MediaSessionId, this._handleMediaSessionId.bind(this)), e.on(E.SocketEvent.MediaSinkWants, this._handleMediaSinkWants.bind(this)), e.on(E.SocketEvent.VoiceBackendVersion, this._handleCodeVersion.bind(this)), e.on(E.SocketEvent.KeyframeInterval, this._handleKeyframeInterval.bind(this)), e.on(E.SocketEvent.ChannelOptionsUpdateRtcLog, this._handleUpdateRtcLog.bind(this)), e.on(E.SocketEvent.SpeedTest, this._handleSpeedTest.bind(this)), e.setHeartbeatIntervalModifier(2), e.connect()
                }
                destroy() {
                    if (this._backoff.cancel(), this._cleanupSocket(), null != this._connection) {
                        let e = this._connection;
                        this._connection = null, e.destroy()
                    }
                    this.removeAllListeners(), this._destroyed = !0
                }
                _cleanupSocket() {
                    let e = this._socket;
                    null != e && (e.close(), e.removeAllListeners(), this._socket = null)
                }
                setState(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    this.logger.info("RTC connection state: ".concat(this.state, " => ").concat(e)), this.state = e, this.emit("state", e, {
                        hostname: this.hostname,
                        channelId: i(this.rtcServerId).prev().toString()
                    }, t)
                }
                startClientToServerSpeedTest(e) {
                    this.state === h.RTCConnectionStates.RTC_CONNECTED && (this._speedTestParams = e, this._speedTestDirection = g.SpeedTestDirections.CLIENT_TO_SERVER, this._setSpeedTestState(g.SpeedTestStates.STARTING_RECEIVER), this._speedTest(g.SpeedTestOpcodes.CLIENT_TO_SERVER_START, {}))
                }
                startServerToClientSpeedTest(e) {
                    let t = this._connection;
                    this.state === h.RTCConnectionStates.RTC_CONNECTED && null != t && (this._speedTestParams = e, this._speedTestDirection = g.SpeedTestDirections.SERVER_TO_CLIENT, this._setSpeedTestState(g.SpeedTestStates.STARTING_RECEIVER), t.startSpeedTestReceiver(() => {
                        var e, t, s;
                        this._setSpeedTestState(g.SpeedTestStates.SENDING), this._speedTest(g.SpeedTestOpcodes.SERVER_TO_CLIENT_START, {
                            cluster_size: null === (e = this._speedTestParams) || void 0 === e ? void 0 : e.clusterSize,
                            cluster_interval_ms: null === (t = this._speedTestParams) || void 0 === t ? void 0 : t.clusterIntervalMs,
                            num_clusters: null === (s = this._speedTestParams) || void 0 === s ? void 0 : s.numClusters
                        })
                    }, -1))
                }
                stopClientToServerSpeedTest() {
                    this._speedTest(g.SpeedTestOpcodes.CLIENT_TO_SERVER_END, {}), null != this._connection && this._connection.stopSpeedTestSender()
                }
                stopServerToClientSpeedTest() {
                    this._speedTest(g.SpeedTestOpcodes.SERVER_TO_CLIENT_END, {}), null != this._connection && this._connection.stopSpeedTestReceiver(() => {})
                }
                getNetworkOverhead() {
                    return this._networkOverhead
                }
                setPingInterval(e) {
                    null != this._connection && this._connection.setPingInterval(e)
                }
                _setSpeedTestState(e) {
                    this._speedTestState = e, this.emit("speed-test-state", e)
                }
                _completeSpeedTests(e, t) {
                    this._speedTestState = g.SpeedTestStates.COMPLETED, this.emit("speed-test-completed", e, t)
                }
                _speedTest(e, t) {
                    let s = this._socket;
                    null != s && s.speedTest(e, t)
                }
                _handleConnecting(e) {
                    null != this._endpoint && this.logger.info("Connecting to RTC server ".concat(this._endpoint, ", rtc-connection-id: ").concat(this._rtcConnectionId)), this.setState(h.RTCConnectionStates.CONNECTING)
                }
                _handleConnect(e) {
                    let t = this.token;
                    if (null == t) throw Error("RTCConnection._handleConnect(...): Token is missing.");
                    {
                        this.logger.info("Connected to RTC server.");
                        let s = [{
                            rid: "100",
                            type: I.MediaTypes.TEST,
                            quality: 100
                        }];
                        e.identify({
                            serverId: this.rtcServerId,
                            userId: this.userId,
                            sessionId: this.sessionId,
                            token: t,
                            maxSecureFramesVersion: T.default.getSupportedSecureFramesProtocolVersion(this.rtcServerId),
                            video: !1,
                            streamParameters: s
                        }), this.setState(h.RTCConnectionStates.AUTHENTICATING)
                    }
                }
                _handleDisconnect(e, t, s, a) {
                    this.logger.info("Disconnected from RTC server, clean: ".concat(t, ", code: ").concat(s, ", reason: ").concat(a, ", state: ").concat(this.state));
                    let n = "Force Close" !== a;
                    if (n) {
                        let e = this._backoff.fail(this.reconnect);
                        this.logger.warn("Disconnect was not clean! reason=".concat(a, ". Reconnecting in ").concat((e / 1e3).toFixed(2), " seconds."))
                    }
                    if (null != this._connection) {
                        let e = this._connection;
                        this._connection = null, e.destroy()
                    }
                    this.setState(h.RTCConnectionStates.DISCONNECTED, {
                        willReconnect: n
                    })
                }
                _handleResuming(e) {
                    this.emit("resuming")
                }
                _handleReady(e, t, s, a, n, l, r) {
                    this.setState(h.RTCConnectionStates.RTC_CONNECTING), this.mediaEnginePort = s, this.mediaEngineAddress = t;
                    let o = T.default.getMediaEngine(),
                        d = o.speedTester({
                            userId: this.userId,
                            channelId: i(this.rtcServerId).prev().toString(),
                            guildId: this.rtcServerId
                        }, {
                            ssrc: n,
                            address: t,
                            port: s,
                            modes: a,
                            experiments: [],
                            streamParameters: l,
                            qosEnabled: T.default.getQoS()
                        });
                    d.on(S.BaseSpeedTesterEvent.Connected, this._handleMediaEngineConnected.bind(this, e, d)), d.on(S.BaseSpeedTesterEvent.Error, this._handleMediaEngineError.bind(this, e, d)), d.on(S.BaseSpeedTesterEvent.ConnectionStateChange, this._handleMediaEngineConnectionStateChange.bind(this, e, d)), d.on(S.BaseSpeedTesterEvent.Ping, this._handleMediaEnginePing.bind(this, e)), d.on(S.BaseSpeedTesterEvent.PingTimeout, this._handleMediaEnginePingTimeout.bind(this, e)), this._connection = d
                }
                _handleSpeaking(e, t, s, a) {}
                _handleVideo(e, t, s, a, n) {}
                _handleControlPing(e) {}
                _handleClientDisconnect(e) {}
                _handleCodecs(e, t) {
                    let s = this._connection;
                    null != s && null != this.protocol ? (s.setCodecs(null != e && "" !== e ? e : I.Codecs.OPUS, "TEST"), this.emit("ready")) : this.logger.warn("Cannot set codecs on connection with protocol:", this.protocol)
                }
                _handleSpeedTest(e, t) {
                    let s = this._connection;
                    if (null != s && null != e) {
                        if (this._speedTestState === g.SpeedTestStates.STARTING_RECEIVER && this._speedTestDirection === g.SpeedTestDirections.CLIENT_TO_SERVER && e === g.SpeedTestOpcodes.CLIENT_TO_SERVER_START) {
                            var a;
                            this._setSpeedTestState(g.SpeedTestStates.SENDING), s.startSpeedTestSender((e, t) => {
                                this._speedTest(g.SpeedTestOpcodes.CLIENT_TO_SERVER_END, {}), this._setSpeedTestState(g.SpeedTestStates.AWAITING_RESULTS)
                            }, this._speedTestParams.clusterSize, this._speedTestParams.clusterIntervalMs, this._speedTestParams.numClusters)
                        }
                        if (this._speedTestState === g.SpeedTestStates.AWAITING_RESULTS && this._speedTestDirection === g.SpeedTestDirections.CLIENT_TO_SERVER && e === g.SpeedTestOpcodes.CLIENT_TO_SERVER_END) {
                            let e = t.results,
                                s = (0, _.speedTestSummary)(e, this._speedTestParams, null !== (a = this._networkOverhead) && void 0 !== a ? a : 0);
                            this._speedTestDirection = null, this._speedTestParams = null, this._completeSpeedTests(e, s)
                        }
                        this._speedTestState === g.SpeedTestStates.SENDING && this._speedTestDirection === g.SpeedTestDirections.SERVER_TO_CLIENT && e === g.SpeedTestOpcodes.SERVER_TO_CLIENT_END && (this._setSpeedTestState(g.SpeedTestStates.AWAITING_RESULTS), s.stopSpeedTestReceiver((e, t) => {
                            var s;
                            let a = (0, _.speedTestSummary)(t, this._speedTestParams, null !== (s = this._networkOverhead) && void 0 !== s ? s : 0);
                            this._speedTestDirection = null, this._speedTestParams = null, this._completeSpeedTests(t, a)
                        }))
                    }
                }
                _handleMediaSessionId(e) {}
                _handleMediaSinkWants(e) {}
                _handleCodeVersion(e, t) {}
                _handleKeyframeInterval(e) {}
                _handleUpdateRtcLog(e) {}
                _handleMediaEngineConnected(e, t, s, a) {
                    if (this.logger.info("RTC connected to media server: ".concat(this.mediaEngineAddress, ":").concat(this.mediaEnginePort)), e !== this._socket) {
                        this.logger.warn("Socket mismatch, disconnecting");
                        return
                    }
                    switch (this.protocol = s, s) {
                        case "udp":
                            this.logger.info("Sending UDP info to RTC server.", a, []), e.once(E.SocketEvent.Encryption, (e, s) => {
                                t === this._connection && (t.setEncryption(e, s), t.getNetworkOverhead(e => this._networkOverhead = e))
                            }), e.selectProtocol(s, this._rtcConnectionId, a, []);
                            break;
                        case "webrtc":
                            this.logger.info("Sending local SDP to RTC server."), e.once(E.SocketEvent.SDP, this._handleSDP.bind(this)), e.selectProtocol(s, this._rtcConnectionId, a);
                            break;
                        default:
                            this.logger.error("Unable to determine protocol.");
                            return
                    }
                    this._backoff.succeed()
                }
                _handleMediaEngineError(e, t, s) {
                    e === this._socket && this.logger.error("Error occurred while connecting to RTC server: ".concat(s))
                }
                _handleMediaEngineConnectionStateChange(e, t, s) {
                    if (this.logger.info("RTC media connection state change: ".concat(this.state, " => ").concat(s)), e !== this._socket) return;
                    let a = this.state;
                    switch (s) {
                        case I.ConnectionStates.DISCONNECTED:
                            this.setState(h.RTCConnectionStates.RTC_DISCONNECTED);
                            break;
                        case I.ConnectionStates.CONNECTING:
                            this.setState(h.RTCConnectionStates.RTC_CONNECTING);
                            break;
                        case I.ConnectionStates.CONNECTED:
                            this.setState(h.RTCConnectionStates.RTC_CONNECTED);
                            break;
                        case I.ConnectionStates.NO_ROUTE:
                            this.setState(h.RTCConnectionStates.NO_ROUTE);
                            break;
                        case I.ConnectionStates.ICE_CHECKING:
                            this.setState(h.RTCConnectionStates.ICE_CHECKING);
                            break;
                        case I.ConnectionStates.DTLS_CONNECTING:
                            this.setState(h.RTCConnectionStates.DTLS_CONNECTING)
                    }
                    a === h.RTCConnectionStates.RTC_CONNECTING && this.state === h.RTCConnectionStates.RTC_DISCONNECTED ? this.reconnect() : this.state === h.RTCConnectionStates.NO_ROUTE && this._backoff.fail(this.reconnect)
                }
                _handleMediaEnginePing(e, t) {
                    this.emit("ping", t)
                }
                _handleMediaEnginePingTimeout(e, t, s) {
                    this.emit("ping-timeout", s)
                }
                _handleSDP(e) {
                    let t = this._connection;
                    null != t && null != this.protocol ? t.setSDP(e) : this.logger.warn("Cannot set SDP on connection with protocol:", this.protocol)
                }
                constructor({
                    userId: e,
                    sessionId: t,
                    rtcServerId: s,
                    endpoint: a,
                    token: n
                }) {
                    super(), this.reconnect = () => {
                        let e = this._socket;
                        null != e && (e.close(), e.connect())
                    }, this._rtcConnectionId = (0, u.v4)(), this.logger = new f.default("RTCSpeedTestRTCConnection(".concat(s, ")")), this.userId = e, this.sessionId = t, this.rtcServerId = s, this.mediaEnginePort = null, this.mediaEngineAddress = null, this._speedTestState = null, this._speedTestDirection = null, this._speedTestParams = null, this.state = h.RTCConnectionStates.AWAITING_ENDPOINT, this._socket = null, this.token = n, this._destroyed = !1, this._connection = null, this._backoff = new c.default(1e3, 1e4), a = "".concat(N, "//").concat(a), (0, m.isAndroid)() && (a = (a = a.replace(".gg", ".media")).replace(":80", ":443"));
                    let {
                        hostname: l,
                        port: i
                    } = d.parse(a), r = null != i ? parseInt(i) : NaN;
                    null != l && (80 === r || 443 === r) && (a = "".concat(N, "//").concat(l)), this._endpoint = a + "/", this.hostname = l, this._networkOverhead = null
                }
            }
        },
        610109: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return j
                }
            }), s("424973"), s("222007");
            var a = s("446674"),
                n = s("872717"),
                l = s("913144"),
                i = s("605250"),
                r = s("271938"),
                o = s("42887"),
                d = s("985365"),
                u = s("590401"),
                c = s("800762"),
                S = s("456931"),
                E = s("868391"),
                f = s("414074"),
                T = s("84908"),
                m = s("49111"),
                _ = s("353927");
            new i.default("RTCSpeedTestStore");
            let g = [{
                    clusterSize: 40,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: T.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 40,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: T.SpeedTestDirections.SERVER_TO_CLIENT
                }, {
                    clusterSize: 160,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: T.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 160,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: T.SpeedTestDirections.SERVER_TO_CLIENT
                }, {
                    clusterSize: 4125,
                    clusterIntervalMs: 33,
                    numClusters: 455,
                    direction: T.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 4125,
                    clusterIntervalMs: 33,
                    numClusters: 455,
                    direction: T.SpeedTestDirections.SERVER_TO_CLIENT
                }, {
                    clusterSize: 17e3,
                    clusterIntervalMs: 17,
                    numClusters: 295,
                    direction: T.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 17e3,
                    clusterIntervalMs: 17,
                    numClusters: 295,
                    direction: T.SpeedTestDirections.SERVER_TO_CLIENT
                }],
                h = g.length,
                I = {
                    running: !1,
                    region: null,
                    endpoint: null,
                    connection: null,
                    rtcServerId: null,
                    connected: !1,
                    currentTest: null,
                    failed: !1,
                    lifecycle: T.SpeedTestLifecycles.INACTIVE,
                    results: [],
                    pings: [],
                    notes: ""
                };

            function N(e, t, s) {
                e === m.RTCConnectionStates.RTC_CONNECTED ? I.connected = !0 : (e === m.RTCConnectionStates.DISCONNECTED || e === m.RTCConnectionStates.RTC_DISCONNECTED) && (I.lifecycle === T.SpeedTestLifecycles.TESTING && (I.failed = !0, D(), L()), I.connected = !1)
            }

            function p() {
                I.lifecycle === T.SpeedTestLifecycles.TESTING && (I.failed = !0, D(), L())
            }

            function C() {
                if (I.lifecycle === T.SpeedTestLifecycles.CONNECTING) {
                    var e;
                    M(T.SpeedTestLifecycles.PINGING), null === (e = I.connection) || void 0 === e || e.setPingInterval(500), x()
                }
            }

            function A(e, t) {
                if (null != I.currentTest) !0 !== I.failed && (I.currentTest = I.currentTest + 1, I.results.push({
                    payload: e,
                    summary: t
                }), I.currentTest === h ? (M(T.SpeedTestLifecycles.UPLOADING), L()) : v())
            }

            function O(e) {
                void 0 !== e && I.pings.length < 10 && (I.pings.push(e), I.pings.length < 10 && M(T.SpeedTestLifecycles.PINGING), x())
            }

            function x() {
                if (I.lifecycle === T.SpeedTestLifecycles.PINGING && 10 === I.pings.length) {
                    var e;
                    null === (e = I.connection) || void 0 === e || e.setPingInterval(5e3), I.currentTest = 0, v()
                }
            }

            function R() {
                if (null == I.connection) return !1;
                I.connection.destroy(), I.connection = null
            }

            function M(e) {
                I.lifecycle = e, l.default.dispatch({
                    type: "RTC_SPEED_TEST_STATE_UPDATE",
                    lifecycle: e
                })
            }

            function v() {
                var e, t;
                null !== I.currentTest && (g[I.currentTest].direction === T.SpeedTestDirections.CLIENT_TO_SERVER ? null === (e = I.connection) || void 0 === e || e.startClientToServerSpeedTest(g[I.currentTest]) : g[I.currentTest].direction === T.SpeedTestDirections.SERVER_TO_CLIENT && (null === (t = I.connection) || void 0 === t || t.startServerToClientSpeedTest(g[I.currentTest])), M(T.SpeedTestLifecycles.TESTING))
            }

            function D() {
                if (I.lifecycle === T.SpeedTestLifecycles.TESTING && null != I.currentTest) {
                    var e, t;
                    let s = g[I.currentTest].direction;
                    s === T.SpeedTestDirections.CLIENT_TO_SERVER ? null === (e = I.connection) || void 0 === e || e.stopClientToServerSpeedTest() : null === (t = I.connection) || void 0 === t || t.stopServerToClientSpeedTest()
                }
            }
            async function L() {
                var e, t;
                let s = new Date().toISOString(),
                    a = {
                        date: s,
                        endpoint: I.endpoint,
                        networkOverhead: null === (e = I.connection) || void 0 === e ? void 0 : e.getNetworkOverhead(),
                        networkType: d.default.getType(),
                        networkEffectiveConnectionSpeed: d.default.getEffectiveConnectionSpeed(),
                        networkServiceProvider: null !== (t = d.default.getServiceProvider()) && void 0 !== t ? t : "unknown",
                        notes: I.notes
                    },
                    l = {
                        info: a,
                        ping: (0, f.speedTestPingInfo)(I.pings),
                        tests: []
                    },
                    i = {
                        info: a,
                        pings: I.pings,
                        tests: []
                    };
                for (let e = 0; e < g.length; e++) {
                    let t = {
                            params: null,
                            results: null
                        },
                        s = {
                            params: null,
                            results: null
                        };
                    t.params = g[e], s.params = g[e], e < I.results.length && (t.results = I.results[e].summary, s.results = I.results[e].payload), l.tests.push(t), i.tests.push(s)
                }
                await Promise.all([n.default.post({
                    url: m.Endpoints.DEBUG_LOG(m.DebugLogCategory.SPEED_TEST, "speed_test_summary_".concat(s, ".json")),
                    body: JSON.stringify(l, void 0, 2),
                    retries: 3,
                    headers: {
                        "Content-Type": "text/plain"
                    }
                }), n.default.post({
                    url: m.Endpoints.DEBUG_LOG(m.DebugLogCategory.SPEED_TEST, "speed_test_results_".concat(s, ".json")),
                    body: JSON.stringify(i, void 0, 2),
                    retries: 3,
                    headers: {
                        "Content-Type": "text/plain"
                    }
                })]), M(T.SpeedTestLifecycles.COMPLETED), R(), S.default.stopSpeedTest(), I.running = !1, I.notes = ""
            }
            class P extends a.default.Store {
                initialize() {
                    this.waitFor(r.default, o.default, u.default, c.default)
                }
                getAvailable() {
                    return !c.default.isCurrentClientInVoiceChannel()
                }
                getActive() {
                    return I.running
                }
                getEndpoint() {
                    return I.endpoint
                }
                getConnected() {
                    var e;
                    return null !== (e = I.connected) && void 0 !== e && e
                }
                getLifecycle() {
                    return I.lifecycle
                }
                getFailed() {
                    return I.failed
                }
                getCurrentTest() {
                    return I.currentTest
                }
                getTestCases() {
                    return g
                }
                getTestResults() {
                    return I.results
                }
                getPings() {
                    return I.pings
                }
                getNotes() {
                    return I.notes
                }
                setNotes(e) {
                    I.notes = e
                }
                isSupported() {
                    return o.default.supports(_.Features.SPEED_TEST)
                }
            }
            P.displayName = "RTCSpeedTestStore";
            var j = new P(l.default, {
                RTC_SPEED_TEST_START_TEST: function(e) {
                    !I.running && (M(T.SpeedTestLifecycles.AWAITING_ENDPOINT), I.running = !0, I.currentTest = null, I.results = [], I.failed = !1, I.pings = [], I.connected = !1, R())
                },
                RTC_SPEED_TEST_STOP_TEST: function(e) {
                    I.running = !1, R(), I.lifecycle !== T.SpeedTestLifecycles.COMPLETED && M(T.SpeedTestLifecycles.CANCELLED)
                },
                SPEED_TEST_CREATE: function(e) {
                    if (!I.running) {
                        S.default.stopSpeedTest();
                        return
                    }
                    I.rtcServerId = e.rtcServerId
                },
                SPEED_TEST_DELETE: function(e) {
                    R(), I.running = !1, I.lifecycle !== T.SpeedTestLifecycles.COMPLETED && M(T.SpeedTestLifecycles.INACTIVE)
                },
                SPEED_TEST_SERVER_UPDATE: function(e) {
                    var t;
                    R(), I.endpoint = null !== (t = e.endpoint) && void 0 !== t ? t : null, I.connection = new E.default({
                        userId: r.default.getId(),
                        sessionId: r.default.getSessionId(),
                        rtcServerId: I.rtcServerId,
                        endpoint: e.endpoint,
                        token: e.token
                    }), I.connection.on("state", N), I.connection.on("resuming", p), I.connection.on("ready", C), I.connection.on("speed-test-completed", A), I.connection.on("ping", O), I.connection.on("ping-timeout", O), I.connection.connect(), M(T.SpeedTestLifecycles.CONNECTING)
                }
            })
        },
        414074: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                speedTestRate: function() {
                    return i
                },
                speedTestDuration: function() {
                    return r
                },
                speedTestDirection: function() {
                    return o
                },
                speedTestFps: function() {
                    return d
                },
                speedTestPingInfo: function() {
                    return u
                },
                speedTestSummary: function() {
                    return c
                }
            }), s("222007"), s("311790"), s("477657"), s("811875"), s("90301"), s("652153"), s("28797"), s("817884"), s("597349"), s("667536"), s("690341"), s("492311");
            var a = s("24815"),
                n = s("226445"),
                l = s("84908");

            function i(e) {
                return 8 * e.clusterSize * 1e3 / e.clusterIntervalMs
            }

            function r(e) {
                return e.clusterIntervalMs * e.numClusters / 1e3
            }

            function o(e) {
                return e.direction === l.SpeedTestDirections.CLIENT_TO_SERVER ? "Client -> Server" : e.direction === l.SpeedTestDirections.SERVER_TO_CLIENT ? "Server -> Client" : e.direction
            }

            function d(e) {
                return 1e3 / e.clusterIntervalMs
            }

            function u(e) {
                let t = [...e];
                t.sort((e, t) => e - t);
                let s = t.length;
                return {
                    count: s,
                    min: t[0],
                    p50: t[Math.floor(s / 2)],
                    max: t[s - 1]
                }
            }

            function c(e, t, s) {
                let l = Uint8Array.from(a.toByteArray(e)),
                    i = new DataView(l.buffer),
                    r = 16,
                    o = Math.ceil(t.clusterSize / 1200),
                    d = t.numClusters * o,
                    u = 0,
                    c = 0,
                    S = 0,
                    E = null,
                    f = null,
                    T = null,
                    m = null,
                    _ = null;
                for (let e = 0; e < i.byteLength / r; e++) {
                    let t = i.getUint32(4 * (4 * e + 0)),
                        a = i.getUint32(4 * (4 * e + 1)),
                        n = i.getUint32(4 * (4 * e + 2)),
                        l = i.getUint32(4 * (4 * e + 3));
                    u++, c += a, S += a + s, null == f && (f = l), T = l, null == E && (E = n), null == m && (m = t);
                    let r = l - (n - E);
                    null == _ && (_ = r), r < _ && (_ = r)
                }
                let g = new n.Histogram,
                    h = null;
                for (let e = 0; e < i.byteLength / r; e++) {
                    let t = i.getUint32(4 * (4 * e + 2)),
                        s = i.getUint32(4 * (4 * e + 3)),
                        a = (s - (t - E) - _) / 1e3;
                    g.addSample(a), null == h && (h = a), a > h && (h = a)
                }
                let I = null != f && null != T ? (T - f) / 1e3 : 0,
                    N = 1 - u / d,
                    p = 8 * c / I,
                    C = 8 * S / I,
                    A = g.getReport([50, 95, 99]);
                return {
                    payloadBandwidth: p,
                    networkBandwidth: C,
                    loss: N,
                    iatP50: A.percentiles[50],
                    iatP95: A.percentiles[95],
                    iatP99: A.percentiles[99],
                    iatMax: null != h ? h : 0
                }
            }
        },
        36978: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useIsSafetyHubEnabled: function() {
                    return l
                }
            });
            var a = s("862205");
            let n = (0, a.createExperiment)({
                kind: "user",
                id: "2023-07_safetyhub",
                label: "Safety Hub",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return !!n.useExperiment({
                    location: "ed2c3f_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        67508: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("468200"),
                n = s("782340");

            function l(e) {
                switch (e) {
                    case a.SettingsOverrideReasonKeys.REDUCED_MOTION:
                        return n.default.Messages.ACCESSIBILITY_REDUCED_MOTION_SETTINGS_OVERRIDE.format();
                    case a.SettingsOverrideReasonKeys.REDUCED_MOTION_STICKERS:
                        return n.default.Messages.STICKERS_AUTO_PLAY_HELP_DISABLED;
                    default:
                        return
                }
            }
        },
        561847: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("669491"),
                r = s("77078"),
                o = s("430568"),
                d = s("697218"),
                u = s("832132"),
                c = s("368121"),
                S = s("228220"),
                E = s("719923"),
                f = s("78581"),
                T = s("23106"),
                m = s("429829"),
                _ = s("553372"),
                g = s("191191"),
                h = s("782340"),
                I = s("686066");

            function N(e) {
                let {
                    onSelect: t
                } = e, [s, i] = n.useState(!1), o = (0, l.useStateFromStores)([d.default], () => d.default.getCurrentUser()), c = E.default.canUseCustomCallSounds(o);

                function S(e) {
                    c && (i(!1), null == t || t(e))
                }
                return (0, a.jsx)(r.Popout, {
                    shouldShow: s,
                    position: "left",
                    onRequestClose: () => i(!1),
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(r.Dialog, {
                            children: (0, a.jsx)(g.default, {
                                suppressPlaySound: !0,
                                shouldShowUpsell: !1,
                                guildId: null,
                                channel: null,
                                onClose: t,
                                onSelect: S,
                                gridNotice: c ? null : (0, a.jsx)(m.CustomCallSoundUpsell, {}),
                                analyticsSource: "call sounds edit setting"
                            })
                        })
                    },
                    children: e => (0, a.jsx)(_.SecondaryActionButton, {
                        ...e,
                        onClick: () => {
                            i(!s)
                        },
                        text: h.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND_CHANGE,
                        children: (0, a.jsx)(u.default, {
                            className: I.secondaryIcon
                        })
                    })
                })
            }

            function p(e) {
                let {
                    sound: t
                } = e, {
                    previewSound: s
                } = (0, T.default)(t, null), n = (0, f.getAmplitudinalSoundboardVolume)(), l = 0 === n ? h.default.Messages.SOUNDBOARD_SOUND_PREVIEW_SOUND_LOW_VOLUME : h.default.Messages.SOUNDBOARD_SOUND_PREVIEW_SOUND.format({
                    emojiName: t.emojiName,
                    soundName: t.name
                });
                return (0, a.jsx)(_.SecondaryActionButton, {
                    onClick: s,
                    text: l,
                    children: (0, a.jsx)(c.default, {
                        className: I.secondaryIconActive
                    })
                })
            }

            function C(e) {
                let {
                    sound: t,
                    isGlobal: s,
                    onSelect: n
                } = e, l = null != t, d = null == t ? void 0 : t.emojiId, u = null == t ? void 0 : t.emojiName, E = l && (null != u || null != d), f = e => (0, a.jsx)(r.Text, {
                    variant: "text-xs/medium",
                    color: "header-secondary",
                    tag: "span",
                    children: e
                });
                return (0, a.jsxs)("div", {
                    className: I.soundButtonSettingContainer,
                    children: [(0, a.jsxs)("div", {
                        className: I.container,
                        children: [E && (0, a.jsx)(o.default, {
                            emojiId: d,
                            emojiName: u,
                            className: I.emoji
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-xs/medium",
                            color: "header-primary",
                            className: I.soundText,
                            children: null == t ? h.default.Messages.NONE : s ? h.default.Messages.CALL_SOUNDS_SETTINGS_ALL_SERVERS.format({
                                soundName: t.name,
                                subtextHook: f
                            }) : t.name
                        }), l ? (0, a.jsx)(p, {
                            sound: t
                        }) : (0, a.jsx)(c.default, {
                            className: I.secondaryIconDisabled
                        })]
                    }), (0, a.jsxs)("div", {
                        className: I.container,
                        children: [(0, a.jsx)(N, {
                            onSelect: n
                        }), l && !s && (0, a.jsx)(_.SecondaryActionButton, {
                            onClick: () => n(null),
                            text: h.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND_REMOVE,
                            children: (0, a.jsx)(S.default, {
                                color: i.default.unsafe_rawColors.RED_400.css,
                                className: I.secondaryIcon
                            })
                        })]
                    })]
                })
            }
        },
        405069: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                setSoundpack: function() {
                    return r
                }
            });
            var a = s("913144"),
                n = s("599110"),
                l = s("870696"),
                i = s("49111");

            function r(e) {
                n.default.track(i.AnalyticEvents.SOUNDPACK_UPDATED, {
                    soundpack: e,
                    previous_soundpack: l.default.getSoundpack()
                }), a.default.dispatch({
                    type: "SET_SOUNDPACK",
                    soundpack: e
                })
            }
        },
        820974: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("168067"),
                r = s("405069"),
                o = s("870696"),
                d = s("157246");

            function u(e) {
                let {
                    className: t
                } = e, s = (0, n.useStateFromStores)([o.default], () => o.default.getSoundpack()), {
                    allowAprilFoolsSoundpack: u
                } = i.default.useExperiment({
                    location: "a96548_1"
                }, {
                    autoTrackExposure: !1
                });
                if (!u) return null;
                let c = u ? (0, d.getSoundpackOptionsAprilFools2023)() : [];
                return (0, a.jsx)(l.SingleSelect, {
                    className: t,
                    onChange: e => (0, r.setSoundpack)(e),
                    value: s,
                    options: c
                })
            }
        },
        880397: function(e, t, s) {
            "use strict";

            function a(e) {
                let t = {};
                return void 0 !== e.pendingBanner && (t.banner = e.pendingBanner), null != e.pendingBio && (t.bio = e.pendingBio), null != e.pendingPronouns && (t.pronouns = e.pendingPronouns), void 0 !== e.pendingAccentColor && (t.accent_color = e.pendingAccentColor), void 0 !== e.pendingThemeColors && (t.theme_colors = e.pendingThemeColors), void 0 !== e.pendingProfileEffectId && (t.profile_effect_id = null != e.pendingProfileEffectId ? e.pendingProfileEffectId : null), t
            }

            function n(e) {
                let t = {};
                return void 0 !== e.pendingGlobalName && (t.globalName = e.pendingGlobalName), void 0 !== e.pendingAvatar && (t.avatar = e.pendingAvatar), void 0 !== e.pendingAvatarDecoration && (t.avatarDecoration = e.pendingAvatarDecoration), t
            }

            function l(e) {
                let t = {};
                if (void 0 !== e.pendingAvatar && (t.avatar = e.pendingAvatar), void 0 !== e.pendingNickname) {
                    var s;
                    t.nick = null !== (s = e.pendingNickname) && void 0 !== s ? s : ""
                }
                return t
            }
            s.r(t), s.d(t, {
                getProfileChangesForUpdateRequest: function() {
                    return a
                },
                getAccountUpdateForUpdateRequest: function() {
                    return n
                },
                getGuildMemberChangesForUpdateRequest: function() {
                    return l
                }
            })
        },
        546605: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, s("862205").createExperiment)({
                kind: "user",
                id: "2022-06_auth_sessions_user_settings",
                label: "Auth Sessions User Settings",
                defaultConfig: {
                    showSettings: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show settings",
                    config: {
                        showSettings: !0
                    }
                }]
            })
        },
        462369: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getSMSBackupDisabledMessage: function() {
                    return d
                },
                use2FARemoveDisableReason: function() {
                    return u
                }
            });
            var a = s("65597"),
                n = s("305961"),
                l = s("957255"),
                i = s("697218"),
                r = s("49111"),
                o = s("782340");

            function d(e) {
                return e.hasAnyStaffLevel() || e.hasFlag(r.UserFlags.PARTNER) ? o.default.Messages.MFA_SMS_DISABLED_PARTNER : null == e.email ? o.default.Messages.MFA_SMS_DISABLED_NO_EMAIL : null
            }

            function u() {
                return (0, a.default)([n.default, l.default, i.default], () => {
                    var e;
                    if (null === (e = i.default.getCurrentUser()) || void 0 === e ? void 0 : e.hasAnyStaffLevel()) return o.default.Messages.TWO_FA_DISABLED_FOR_STAFF;
                    let t = n.default.getGuilds();
                    return Object.values(t).some(e => e.hasFeature(r.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE) && l.default.can(r.Permissions.ADMINISTRATOR, e)) ? o.default.Messages.TWO_FA_DISABLED_FOR_SERVER_SUBSCRIPTION_MOD : null
                })
            }
        },
        663657: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                isMfaEmailVerificationEnabled: function() {
                    return l
                }
            });
            var a = s("862205");
            let n = (0, a.createExperiment)({
                kind: "user",
                id: "2023-07_mfa_email_verification",
                label: "Safety Experience Mfa Email Verification",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                let {
                    enabled: e
                } = n.getCurrentConfig({
                    location: "41ef90_2"
                }, {
                    autoTrackExposure: !0
                });
                return e
            }
        },
        733051: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, s("862205").createExperiment)({
                kind: "user",
                id: "2023-05_speed_test",
                label: "Speed Test User Setting",
                defaultConfig: {
                    showSettings: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show speed test",
                    config: {
                        showSettings: !0
                    }
                }]
            })
        },
        327350: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getEntries: function() {
                    return r
                },
                sortEntries: function() {
                    return o
                },
                getBestMatches: function() {
                    return d
                }
            }), s("222007"), s("424973");
            var a = s("345570"),
                n = s.n(a);
            let l = /^(\d{4}-\d{1,2})/;

            function i(e) {
                let t = l.exec(e);
                return null != t ? t[1] : null
            }

            function r(e) {
                return Array.from(Object.entries(e)).map(e => {
                    let [t, s] = e;
                    return {
                        id: t,
                        experiment: s
                    }
                })
            }

            function o(e, t) {
                return e.slice().sort((e, s) => {
                    if (null != t[null == e ? void 0 : e.id] && null == t[null == s ? void 0 : s.id]) return -1;
                    if (null == t[null == e ? void 0 : e.id] && null != t[null == s ? void 0 : s.id]) return 1;
                    let a = i(e.id),
                        n = i(s.id);
                    if (null != a && null != n) {
                        let e = n.localeCompare(a);
                        if (0 !== e) return e
                    }
                    return e.experiment.title.localeCompare(s.experiment.title)
                })
            }

            function d(e, t) {
                let s = t.split(/\s+/g).filter(e => "" !== e);
                if (0 === s.length) return e;
                let a = [];
                for (let t of e) {
                    let e = 0;
                    for (let a of s)(function e(t, s) {
                        if (Array.isArray(t)) {
                            for (let a of t)
                                if (e(a, s)) return !0
                        } else if ("object" == typeof t && null !== t) {
                            for (let a of Object.values(t))
                                if (e(a, s)) return !0
                        } else if ("string" == typeof t && t.toLowerCase().includes(s.toLowerCase())) return !0;
                        return !1
                    })(t, a) && (e += 1);
                    0 !== e && (null == a[e] && (a[e] = []), a[e].push(t))
                }
                return n(a.filter(e => void 0 !== e).reverse())
            }
        },
        101787: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return n
                },
                useShouldWarnAuthorizedAppTwoWay: function() {
                    return l
                }
            });
            var a = s("106076");

            function n(e) {
                return a.ConsoleOAuthApplications.XBOX_APPLICATION_ID === e || a.ConsoleOAuthApplicationsSets.PLAYSTATION_APPLICATION_IDS.has(e)
            }

            function l(e) {
                return n(e)
            }
        },
        333562: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            }), s("222007");
            var a = s("49111");
            let n = new Set([a.PlatformTypes.XBOX, a.PlatformTypes.PLAYSTATION, a.PlatformTypes.PLAYSTATION_STAGING, a.PlatformTypes.CRUNCHYROLL]);

            function l(e) {
                return n.has(e.type) && e.twoWayLink
            }
        },
        225849: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("884691"),
                n = s("446674"),
                l = s("79112"),
                i = s("206230"),
                r = s("26092"),
                o = s("397336"),
                d = s("49111");
            let u = Object.freeze({
                [o.UserSettingsScrollPositions.ProfileCustomizationScrollPositions.TRY_IT_OUT]: d.UserSettingsSections.PROFILE_CUSTOMIZATION,
                [o.UserSettingsScrollPositions.AccessibilityScrollPositions.REDUCED_MOTION]: d.UserSettingsSections.ACCESSIBILITY,
                [o.UserSettingsScrollPositions.AccessibilityScrollPositions.SYNC_PROFILE_THEME_WITH_USER_THEME]: d.UserSettingsSections.ACCESSIBILITY,
                [o.UserSettingsScrollPositions.AccessibilityScrollPositions.LEGACY_CHAT_INPUT]: d.UserSettingsSections.ACCESSIBILITY,
                [o.UserSettingsScrollPositions.VoiceAndVideoScrollPositions.HARDWARE_ACCELERATION]: d.UserSettingsSections.VOICE
            });
            var c = (e, t) => {
                let s = (0, n.useStateFromStores)([i.default], () => i.default.useReducedMotion),
                    o = (0, n.useStateFromStores)([r.default], () => r.default.getScrollPosition());
                (0, a.useEffect)(() => {
                    let a = e.current;
                    if (null == a || t !== o) return;
                    let n = requestAnimationFrame(() => {
                        a.scrollIntoView({
                            behavior: s ? "auto" : "smooth"
                        }), l.default.clearScrollPosition(u[t])
                    });
                    return () => cancelAnimationFrame(n)
                }, [e, t, o, s])
            }
        },
        760947: function(e, t, s) {
            "use strict";

            function a(e) {
                return "".concat("*".repeat(e.length - 4)).concat(e.slice(-4))
            }

            function n(e) {
                let [t, s] = e.split("@");
                return "".concat("*".repeat(t.length), "@").concat(s)
            }
            s.r(t), s.d(t, {
                censorPhone: function() {
                    return a
                },
                censorEmail: function() {
                    return n
                }
            }), s("222007")
        },
        474775: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("597755"),
                l = s.n(n),
                i = s("77078"),
                r = s("49671"),
                o = s("172588"),
                qzd = s("825287");

            function d() {
                var e, t, s, n, d, u;
                let c = window.GLOBAL_ENV.RELEASE_CHANNEL,
                    S = (e = "", e.substring(0, 7)),
                    E = null === r.default || void 0 === r.default ? void 0 : r.default.remoteApp.getVersion(),
                    f = null === r.default || void 0 === r.default ? void 0 : null === (t = (s = r.default.remoteApp).getBuildNumber) || void 0 === t ? void 0 : t.call(s),
                    T = null === r.default || void 0 === r.default ? void 0 : null === (n = (d = r.default.remoteApp).getAppArch) || void 0 === n ? void 0 : n.call(d),
                    m = null == l ? void 0 : null === (u = l.os) || void 0 === u ? void 0 : u.toString(),
                    _ = null != r.default ? "(".concat(r.default.os.release, ")") : null;
                return (0, a.jsxs)("div", {
                    className: o.info,
                    children: [(0, a.jsxs)(i.Text, {
                        tag: "span",
                        className: o.line,
                        variant: "text-xs/normal",
                        color: "text-muted",
                        children: [c, " ", "", "\n", (0, a.jsxs)("span", {
                            className: o.versionHash,
                            children: ["(", S, ")","\n","Happycord"," ","v1"]
                        })]
                    }), " ", null != E ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)(i.Text, {
                            tag: "span",
                            className: o.line,
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: ["Host ", E, " ", null != T ? (0, a.jsxs)("span", {
                                className: o.appArch,
                                children: [T.toLowerCase(), " "]
                            }) : null, null != f ? (0, a.jsxs)("span", {
                                children: ["(", f, ")"]
                            }) : null]
                        }), " "]
                    }) : null, null != m ? (0, a.jsxs)(i.Text, {
                        tag: "span",
                        className: o.line,
                        variant: "text-xs/normal",
                        color: "text-muted",
                        children: [m, " ", _]
                    }) : null]
                })
            }
        },
        566126: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            }), s("222007"), s("70102");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("569272"),
                o = s("583711"),
                d = s("102985"),
                u = s("145131"),
                c = s("599110"),
                S = s("659632"),
                E = s("49111"),
                f = s("782340"),
                T = s("882553");
            class m extends n.Component {
                get analyticsLocation() {
                    let {
                        analyticsContext: {
                            location: e
                        }
                    } = this.props;
                    return {
                        ...e,
                        object: E.AnalyticsObjects.BUTTON_CTA
                    }
                }
                render() {
                    let {
                        obscureInput: e
                    } = this.props, {
                        codeInput: t,
                        submitting: s,
                        hasError: n,
                        isPromoCode: l
                    } = this.state;
                    return (0, a.jsxs)(i.FormSection, {
                        tag: i.FormTitleTags.H1,
                        title: f.default.Messages.GIFT_INVENTORY_REDEEM_CODES,
                        children: [(0, a.jsx)(i.FormTitle, {
                            children: f.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_PROMPT
                        }), (0, a.jsx)("form", {
                            onSubmit: this.handleSubmit,
                            children: (0, a.jsxs)(u.default, {
                                children: [(0, a.jsx)(i.TextInput, {
                                    type: e ? "password" : "text",
                                    value: t,
                                    onChange: this.handleChange,
                                    placeholder: "WUMP-AAAAA-BBBBB-CCCCC",
                                    error: !l && n ? f.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_INVALID : null,
                                    className: T.codeRedemptionInput
                                }), (0, a.jsx)(i.Button, {
                                    type: "submit",
                                    submitting: s,
                                    children: f.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_REDEEM
                                })]
                            })
                        }), l ? (0, a.jsx)(i.Text, {
                            className: T.errorMessage,
                            variant: "text-sm/normal",
                            children: f.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_PROMOTION.format({
                                promoLink: () => {
                                    window.open("https://discord.com/billing/promotions/".concat(t))
                                }
                            })
                        }) : null]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        codeInput: "",
                        submitting: !1,
                        hasError: !1,
                        isPromoCode: !1
                    }, this.handleChange = e => {
                        this.setState({
                            codeInput: e,
                            hasError: !1
                        })
                    }, this.handleSubmit = async e => {
                        e.preventDefault();
                        let {
                            codeInput: t
                        } = this.state;
                        if ("" === t) return;
                        let s = (0, S.processGiftCodeInput)(t);
                        if (null == s) {
                            this.setState({
                                hasError: !0
                            });
                            return
                        }
                        this.setState({
                            submitting: !0
                        });
                        try {
                            let e = await r.default.resolveGiftCode(s);
                            if (null != e && null != e.giftCode.promotion) throw this.setState({
                                isPromoCode: !0
                            }), Error("Cannnot redeem promotion code as gift");
                            c.default.track(E.AnalyticEvents.OPEN_MODAL, {
                                type: "gift_accept",
                                location: {
                                    ...this.analyticsLocation,
                                    object: E.AnalyticsObjects.BUTTON_CTA
                                }
                            }), (0, o.openGiftCodeAcceptModal)({
                                processedCode: s
                            }), this.setState({
                                codeInput: ""
                            })
                        } catch (e) {
                            this.setState({
                                hasError: !0
                            })
                        } finally {
                            this.setState({
                                submitting: !1
                            })
                        }
                    }
                }
            }

            function _() {
                let e = n.useContext(c.AnalyticsContext),
                    t = (0, l.useStateFromStores)([d.default], () => d.default.enabled);
                return (0, a.jsx)(m, {
                    analyticsContext: e,
                    obscureInput: t
                })
            }
        },
        392409: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("627445"),
                o = s.n(r),
                d = s("446674"),
                u = s("77078"),
                c = s("697218"),
                S = s("145131"),
                E = s("387225"),
                f = s("782340"),
                T = s("160918");
            class m extends n.Component {
                renderNotice() {
                    let {
                        isClaimed: e,
                        unclaimedNotice: t,
                        unverifiedNotice: s
                    } = this.props;
                    return e ? null != s ? s : f.default.Messages.NOTICE_UNVERIFIED_ACCOUNT : null != t ? t : f.default.Messages.NOTICE_UNCLAIMED_ACCOUNT
                }
                renderPrimaryAction() {
                    return this.props.isClaimed ? this.props.hasEmail ? (0, a.jsx)(S.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(E.default, {})
                    }) : (0, a.jsx)(u.Button, {
                        size: u.Button.Sizes.MEDIUM,
                        color: u.Button.Colors.BRAND,
                        onClick: this.openChangeEmailModal,
                        children: f.default.Messages.ADD_EMAIL_SHORT
                    }) : (0, a.jsx)(S.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(u.Button, {
                            size: u.Button.Sizes.MEDIUM,
                            color: u.Button.Colors.BRAND,
                            onClick: this.openClaimAccountModal,
                            children: f.default.Messages.CLAIM_ACCOUNT
                        })
                    })
                }
                renderSecondaryAction() {
                    return this.props.isClaimed && this.props.hasEmail ? (0, a.jsx)(S.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(u.Button, {
                            color: u.Button.Colors.PRIMARY,
                            look: u.Button.Looks.LINK,
                            onClick: this.openChangeEmailModal,
                            children: f.default.Messages.CHANGE_EMAIL_SHORT
                        })
                    }) : null
                }
                openClaimAccountModal() {
                    (0, u.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await s.el("633156").then(s.bind(s, "633156"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    })
                }
                openChangeEmailModal() {
                    (0, u.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await s.el("867693").then(s.bind(s, "867693"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    })
                }
                render() {
                    let {
                        className: e,
                        isClaimed: t,
                        isVerified: s
                    } = this.props;
                    return t && s ? null : (0, a.jsx)(u.Card, {
                        className: i(T.wrapper, e),
                        children: (0, a.jsxs)(S.default, {
                            align: S.default.Align.CENTER,
                            children: [(0, a.jsx)(S.default.Child, {
                                className: T.image,
                                grow: 0,
                                shrink: 0
                            }), (0, a.jsxs)(S.default.Child, {
                                children: [(0, a.jsx)(u.Text, {
                                    variant: "text-sm/normal",
                                    children: this.renderNotice()
                                }), (0, a.jsxs)(S.default, {
                                    justify: S.default.Justify.CENTER,
                                    className: T.content,
                                    children: [this.renderPrimaryAction(), this.renderSecondaryAction()]
                                })]
                            })]
                        })
                    })
                }
            }
            var _ = d.default.connectStores([c.default], () => {
                let e = c.default.getCurrentUser();
                return o(null != e, "EmailNotice: currentUser cannot be undefined"), {
                    isClaimed: e.isClaimed(),
                    isVerified: e.verified,
                    hasEmail: null != e.email
                }
            })(m)
        },
        943927: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return L
                }
            }), s("222007"), s("70102");
            var a = s("37983"),
                n = s("884691"),
                l = s("866227"),
                i = s.n(l),
                r = s("446674"),
                o = s("862337"),
                d = s("77078"),
                u = s("569272"),
                c = s("299285"),
                S = s("65324"),
                E = s("271938"),
                f = s("55411"),
                T = s("102985"),
                m = s("10514"),
                _ = s("552712"),
                g = s("233976"),
                h = s("920700"),
                I = s("145131"),
                N = s("953109"),
                p = s("461380"),
                C = s("306160"),
                A = s("659632"),
                O = s("380186"),
                x = s("646718"),
                R = s("782340"),
                M = s("664829");
            class v extends n.PureComponent {
                componentWillUnmount() {
                    this._copyModeTimeout.stop()
                }
                get copyButtonText() {
                    switch (this.state.copyMode) {
                        case h.CopyInputModes.SUCCESS:
                            return R.default.Messages.BILLING_GIFT_COPIED;
                        case h.CopyInputModes.ERROR:
                            return R.default.Messages.FAILED;
                        default:
                            return R.default.Messages.COPY
                    }
                }
                handleRevoke(e) {
                    u.default.revokeGiftCode(e)
                }
                render() {
                    let {
                        hideCode: e,
                        giftCode: t
                    } = this.props, {
                        copyMode: s
                    } = this.state;
                    return (0, a.jsxs)(I.default, {
                        direction: I.default.Direction.VERTICAL,
                        className: M.giftCodeRow,
                        children: [(0, a.jsx)(h.default, {
                            className: M.codeText,
                            value: (0, A.getGiftCodeURL)(t.code),
                            text: this.copyButtonText,
                            mode: s,
                            supportsCopy: C.SUPPORTS_COPY,
                            hideMessage: e ? R.default.Messages.GIFT_INVENTORY_HIDDEN : null,
                            onCopy: this.handleCopy,
                            buttonColor: h.default.ButtonColors.BRAND,
                            buttonLook: h.default.ButtonLooks.FILLED
                        }), (0, a.jsxs)("div", {
                            className: M.subTextRow,
                            children: [null != t.expiresAt ? (0, a.jsxs)(n.Fragment, {
                                children: [R.default.Messages.GIFT_INVENTORY_EXPIRES_IN.format({
                                    hours: t.expiresAt.diff(i(), "h")
                                }), " ", "—\xa0"]
                            }) : null, (0, a.jsx)(d.Clickable, {
                                tag: "a",
                                onClick: () => this.handleRevoke(t.code),
                                children: R.default.Messages.REVOKE
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._copyModeTimeout = new o.Timeout, this.state = {
                        copyMode: h.CopyInputModes.DEFAULT
                    }, this.handleCopy = e => {
                        let {
                            giftCode: t,
                            sku: s
                        } = this.props;
                        (0, A.trackGiftCodeCopy)(t, s);
                        try {
                            (0, C.copy)(e), this.setState({
                                copyMode: h.CopyInputModes.SUCCESS
                            })
                        } catch (e) {
                            this.setState({
                                copyMode: h.CopyInputModes.ERROR
                            })
                        }
                        this._copyModeTimeout.start(1e3, () => {
                            this.setState({
                                copyMode: h.CopyInputModes.DEFAULT
                            })
                        })
                    }
                }
            }
            class D extends n.PureComponent {
                componentDidMount() {
                    this._loadedAt = Date.now()
                }
                renderTitle() {
                    let e;
                    let {
                        sku: t,
                        subscriptionPlan: s,
                        giftCodeBatchId: n
                    } = this.props;
                    return e = n === x.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID ? R.default.Messages.BLACK_FRIDAY_PROMOTION_GIFT_INVENTORY_TITLE : n === x.STICKERS_GIFT_CODE_BATCH_ID && null != s ? (s.interval === x.SubscriptionIntervalTypes.MONTH ? R.default.Messages.STICKERS_GIFT_INVENTORY_TITLE_MONTH : R.default.Messages.STICKERS_GIFT_INVENTORY_TITLE_YEAR).format({
                        skuName: t.name,
                        intervalCount: s.intervalCount
                    }) : null == s ? t.name : (s.interval === x.SubscriptionIntervalTypes.MONTH ? R.default.Messages.GIFT_INVENTORY_SUBSCRIPTION_MONTHS : R.default.Messages.GIFT_INVENTORY_SUBSCRIPTION_YEARS).format({
                        skuName: t.name,
                        intervalCount: s.intervalCount
                    }), (0, a.jsx)("div", {
                        className: M.gameName,
                        children: e
                    })
                }
                renderGenerateGiftCodeRow() {
                    return (0, a.jsxs)(I.default, {
                        justify: I.default.Justify.BETWEEN,
                        align: I.default.Align.CENTER,
                        className: M.generateCodeRow,
                        children: [(0, a.jsx)("div", {
                            className: M.codeText,
                            children: R.default.Messages.GIFT_INVENTORY_GENERATE_HELP
                        }), (0, a.jsx)(d.Button, {
                            submitting: this.state.isCreating,
                            size: d.Button.Sizes.SMALL,
                            color: d.Button.Colors.BRAND,
                            onClick: this.handleGenerateGiftCode,
                            children: R.default.Messages.GIFT_INVENTORY_GENERATE_LINK
                        })]
                    })
                }
                setIsHovered(e) {
                    this.setState({
                        isHovered: e
                    })
                }
                render() {
                    let {
                        entitlements: e,
                        application: t,
                        giftCodes: s,
                        className: l,
                        sku: i,
                        isFetching: r,
                        hideCodes: o,
                        giftStyle: u
                    } = this.props, {
                        isOpen: c
                    } = this.state;
                    return (0, a.jsxs)(g.default, {
                        className: l,
                        children: [(0, a.jsx)(d.Clickable, {
                            onClick: this.handleToggleOpen,
                            className: M.card,
                            onMouseEnter: () => this.setIsHovered(!0),
                            onMouseLeave: () => this.setIsHovered(!1),
                            children: (0, a.jsx)(g.default.Header, {
                                splashArtURL: t.getSplashURL(512),
                                children: (0, a.jsxs)("div", {
                                    className: M.cardHeader,
                                    children: [(0, a.jsxs)(I.default, {
                                        align: I.default.Align.CENTER,
                                        children: [null != u ? (0, a.jsx)(S.default, {
                                            giftStyle: u,
                                            className: M.seasonalGiftBox,
                                            shouldAnimate: this.state.isHovered
                                        }) : (0, a.jsx)(N.default, {
                                            game: t,
                                            size: N.default.Sizes.MEDIUM,
                                            skuId: i.id
                                        }), (0, a.jsxs)("div", {
                                            className: M.headerText,
                                            children: [this.renderTitle(), (0, a.jsx)("div", {
                                                className: M.subTextHeader,
                                                children: R.default.Messages.GIFT_INVENTORY_COPIES.format({
                                                    copies: e.length
                                                })
                                            })]
                                        })]
                                    }), (0, a.jsx)(p.default, {
                                        direction: c ? p.default.Directions.UP : p.default.Directions.DOWN,
                                        className: M.expandIcon
                                    })]
                                })
                            })
                        }), c ? (0, a.jsx)(g.default.Body, {
                            children: r ? (0, a.jsx)(d.Spinner, {
                                className: M.spinner
                            }) : (0, a.jsxs)(n.Fragment, {
                                children: [s.length < e.length ? this.renderGenerateGiftCodeRow() : null, s.map(e => (0, a.jsx)(v, {
                                    giftCode: e,
                                    sku: i,
                                    hideCode: o
                                }, e.code))]
                            })
                        }) : null]
                    })
                }
                constructor(...e) {
                    super(...e), this._loadedAt = null, this.state = {
                        isOpen: !1,
                        isCreating: !1,
                        isHovered: !1
                    }, this.handleGenerateGiftCode = async e => {
                        e.stopPropagation();
                        let {
                            skuId: t,
                            subscriptionPlanId: s,
                            giftStyle: a
                        } = this.props;
                        this.setState({
                            isCreating: !0
                        }), await u.default.createGiftCode(t, s, a), this.setState({
                            isCreating: !1,
                            isOpen: !0
                        })
                    }, this.handleToggleOpen = () => {
                        let {
                            skuId: e,
                            subscriptionPlanId: t,
                            loadedAt: s
                        } = this.props, a = !this.state.isOpen;
                        (null == s || null == this._loadedAt || s < this._loadedAt) && a && u.default.fetchUserGiftCodesForSKU(e, t), this.setState({
                            isOpen: !this.state.isOpen
                        })
                    }
                }
            }
            var L = r.default.connectStores([_.default, T.default, f.default, c.default, m.default, E.default], e => {
                let {
                    skuId: t,
                    subscriptionPlanId: s,
                    giftStyle: a
                } = e, n = _.default.get(t);
                if (null == n) throw Error("SKU was unavailable while rendering gift.");
                let l = f.default.getForGifterSKUAndPlan(E.default.getId(), t, s).filter(e => !e.isClaimed).filter(e => e.giftStyle === a);
                return {
                    sku: n,
                    hideCodes: T.default.enabled,
                    isFetching: f.default.getUserGiftCodesFetchingForSKUAndPlan(t, s),
                    loadedAt: f.default.getUserGiftCodesLoadedAtForSKUAndPlan(t, s),
                    application: c.default.getApplication(n.applicationId),
                    subscriptionPlan: null != s ? (0, O.getOrFetchSubscriptionPlan)(s) : null,
                    giftCodes: l
                }
            })(D)
        },
        832837: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return U
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("917351"),
                o = s.n(r),
                d = s("866227"),
                u = s.n(d),
                c = s("446674"),
                S = s("77078"),
                E = s("913144"),
                f = s("316718"),
                T = s("79112"),
                m = s("841098"),
                _ = s("376152"),
                g = s("243632"),
                h = s("180273"),
                I = s("367376"),
                N = s("44678"),
                p = s("694540"),
                C = s("541840"),
                A = s("437712"),
                O = s("888400"),
                x = s("659632"),
                R = s("845579"),
                M = s("943927"),
                v = s("663952"),
                D = s("49111"),
                L = s("646718"),
                P = s("782340"),
                j = s("76836");

            function b(e) {
                let t, {
                        outboundPromotion: s,
                        code: l,
                        addClaimedOutboundPromotionCode: r
                    } = e,
                    [o, d] = n.useState(!1),
                    [c, E] = n.useState(!1),
                    f = () => d(e => !e),
                    T = (0, m.default)(),
                    _ = (0, N.getPromotionImageURL)(s.id, T),
                    g = null != l,
                    h = g ? (0, O.dateFormat)(u(s.endDate).add(L.OUTBOUND_PROMOTION_REDEMPTION_EXPIRATION_WINDOW), "LL") : (0, O.dateFormat)(u(s.endDate), "LL");
                g && o ? t = P.default.Messages.OUTBOUND_PROMOTION_CARD_CLAIMED_EXPANDED_BODY.format({
                    endDate: h,
                    onClickDetails: f
                }) : g && !o ? t = P.default.Messages.OUTBOUND_PROMOTION_CARD_CLAIMED_UNEXPANDED_BODY.format({
                    endDate: h,
                    onClickDetails: f
                }) : !g && o ? t = P.default.Messages.OUTBOUND_PROMOTION_CARD_UNCLAIMED_EXPANDED_BODY.format({
                    endDate: h,
                    onClickDetails: f
                }) : !g && !o && (t = P.default.Messages.OUTBOUND_PROMOTION_CARD_UNCLAIMED_UNEXPANDED_BODY.format({
                    endDate: h,
                    onClickDetails: f
                }));
                let p = g ? P.default.Messages.OUTBOUND_PROMOTION_SEE_CODE : P.default.Messages.PROMOTION_CARD_ACTION_CLAIM,
                    A = n.useCallback(() => E(!1), []),
                    {
                        outboundTitle: x,
                        outboundTermsAndConditions: R
                    } = s;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i(j.skuCard, j.promotionCard),
                        children: [(0, a.jsxs)("div", {
                            className: j.mainPromotionCardContainer,
                            children: [(0, a.jsxs)("div", {
                                className: j.promotionCardLeftContainer,
                                children: [(0, a.jsx)("div", {
                                    className: j.promotionIcon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: _,
                                        className: j.promotionIconImage
                                    })
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(S.Heading, {
                                        variant: "heading-md/semibold",
                                        children: x
                                    }), (0, a.jsx)(S.Text, {
                                        variant: "text-sm/normal",
                                        color: "text-normal",
                                        className: j.promotionText,
                                        children: t
                                    })]
                                })]
                            }), (0, a.jsx)(S.Button, {
                                className: j.promotionCardButton,
                                color: S.Button.Colors.BRAND,
                                size: S.Button.Sizes.SMALL,
                                onClick: () => E(!0),
                                children: p
                            })]
                        }), o && (0, a.jsx)(S.Text, {
                            className: j.promotionLegalese,
                            variant: "text-xs/normal",
                            color: "header-secondary",
                            children: I.default.parse(R, !1, {
                                allowLinks: !0
                            })
                        })]
                    }), c && (0, a.jsx)(S.Modal, {
                        renderModal: e => (0, a.jsx)(C.default, {
                            ...e,
                            onClose: A,
                            onClaim: r,
                            code: l,
                            outboundPromotion: s
                        }),
                        onCloseRequest: A
                    })]
                })
            }
            var U = function() {
                let e = (0, c.useStateFromStoresArray)([A.default], () => A.default.getGiftable()),
                    [t, s] = o.partition(e, e => {
                        let {
                            giftCodeBatchId: t
                        } = e;
                        return null == t
                    }),
                    l = o.groupBy(t, e => (0, x.makeComboId)(e.skuId, e.subscriptionPlanId, e.giftStyle)),
                    [i, r] = n.useState(!1),
                    d = (0, c.useStateFromStores)([h.default], () => h.default.userStatus);
                n.useEffect(() => {
                    E.default.wait(() => {
                        (0, f.fetchGiftableEntitlements)().then(() => r(!0))
                    })
                }, []);
                let u = (0, g.useAnyDropsEnabled)();
                n.useEffect(() => {
                    u && E.default.wait(async () => {
                        await (0, _.fetchDropsUserStatus)()
                    })
                }, [u]);
                let m = R.DropsOptedOut.useSetting(),
                    I = null != d || !u,
                    {
                        promotionsLoaded: N,
                        activeOutboundPromotions: C,
                        claimedEndedOutboundPromotions: O,
                        claimedOutboundPromotionCodeMap: U,
                        addClaimedOutboundPromotionCode: B
                    } = (0, p.useOutboundPromotions)();

                function y() {
                    T.default.open(D.UserSettingsSections.PREMIUM)
                }
                return i && N && I ? (0, a.jsxs)(a.Fragment, {
                    children: [u ? (0, a.jsx)(v.default, {
                        dropsOptedOut: m,
                        dropsStatuses: d
                    }) : null, function() {
                        var e;
                        let t = s.find(e => e.giftCodeBatchId === L.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID && !e.consumed),
                            n = null !== (e = s.filter(e => e.giftCodeBatchId === L.STICKERS_GIFT_CODE_BATCH_ID && !e.consumed)) && void 0 !== e ? e : [],
                            [l, i] = o.partition(n, e => {
                                let {
                                    subscriptionPlanId: t
                                } = e;
                                return t === L.SubscriptionPlans.PREMIUM_YEAR_TIER_2
                            }),
                            r = C.length + O.length > 0;
                        return (0, a.jsx)(S.FormSection, {
                            children: (0, a.jsxs)(S.HeadingLevel, {
                                component: (0, a.jsx)(S.Heading, {
                                    variant: "heading-md/semibold",
                                    children: r ? P.default.Messages.GIFT_INVENTORY_YOUR_GIFTS : void 0
                                }),
                                children: [r ? (0, a.jsx)(S.FormDivider, {
                                    className: j.divider
                                }) : null, O.map(e => {
                                    let {
                                        code: t,
                                        promotion: s
                                    } = e;
                                    return (0, a.jsx)(b, {
                                        outboundPromotion: s,
                                        code: t,
                                        addClaimedOutboundPromotionCode: B
                                    }, s.id)
                                }), C.map(e => (0, a.jsx)(b, {
                                    outboundPromotion: e,
                                    code: U[e.id],
                                    addClaimedOutboundPromotionCode: B
                                }, e.id)), null != t ? (0, a.jsx)(M.default, {
                                    className: j.skuCard,
                                    skuId: t.skuId,
                                    subscriptionPlanId: t.subscriptionPlanId,
                                    entitlements: [t],
                                    giftCodeBatchId: L.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID
                                }, (0, x.makeComboId)(t.skuId, t.subscriptionPlanId)) : null, l.length > 0 ? (0, a.jsx)(M.default, {
                                    className: j.skuCard,
                                    skuId: l[0].skuId,
                                    subscriptionPlanId: l[0].subscriptionPlanId,
                                    entitlements: l,
                                    giftCodeBatchId: L.STICKERS_GIFT_CODE_BATCH_ID
                                }, (0, x.makeComboId)(l[0].skuId, l[0].subscriptionPlanId)) : null, i.length > 0 ? (0, a.jsx)(M.default, {
                                    className: j.skuCard,
                                    skuId: i[0].skuId,
                                    subscriptionPlanId: i[0].subscriptionPlanId,
                                    entitlements: i,
                                    giftCodeBatchId: L.STICKERS_GIFT_CODE_BATCH_ID
                                }, (0, x.makeComboId)(i[0].skuId, i[0].subscriptionPlanId)) : null]
                            })
                        })
                    }(), (0, a.jsx)(S.FormSection, {
                        children: (0, a.jsxs)(S.HeadingLevel, {
                            component: (0, a.jsx)(S.Heading, {
                                variant: "heading-md/semibold",
                                children: P.default.Messages.GIFT_INVENTORY_GIFTS_YOU_PURCHASED
                            }),
                            children: [(0, a.jsx)(S.FormDivider, {
                                className: j.divider
                            }), 0 === Object.keys(l).length ? (0, a.jsxs)("div", {
                                className: j.emptyState,
                                children: [(0, a.jsx)("div", {
                                    className: j.emptyStateImage
                                }), (0, a.jsx)(S.H, {
                                    className: j.emptyStateHeader,
                                    children: P.default.Messages.GIFT_INVENTORY_NO_GIFTS
                                }), (0, a.jsx)("p", {
                                    className: j.emptyStateSubtext,
                                    children: P.default.Messages.GIFT_INVENTORY_NO_GIFTS_SUBTEXT.format({
                                        onClick: y
                                    })
                                })]
                            }) : o.keys(l).map(e => {
                                let {
                                    skuId: t,
                                    subscriptionPlanId: s,
                                    giftStyle: n
                                } = (0, x.parseComboId)(e);
                                return (0, a.jsx)(M.default, {
                                    className: j.skuCard,
                                    skuId: t,
                                    subscriptionPlanId: s,
                                    entitlements: l[e],
                                    giftStyle: n
                                }, e)
                            })]
                        })
                    })]
                }) : (0, a.jsx)(S.Spinner, {
                    className: j.loading
                })
            }
        },
        413622: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            }), s("222007");
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("139321"),
                r = s("36694"),
                o = s("945330"),
                d = s("810822");

            function u(e) {
                let {
                    hotspotLocation: t
                } = e, [s, u] = (0, n.useStateFromStoresArray)([i.HotspotStore], () => [i.HotspotStore.hasHotspot(t, !0), i.HotspotStore.getHotspotOverride(t)]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(l.FormItem, {
                        title: t,
                        className: d.hotspotSwitch,
                        children: [s ? (0, a.jsx)(l.TooltipContainer, {
                            className: d.iconContainer,
                            element: "span",
                            text: "Active",
                            children: (0, a.jsx)(r.default, {
                                className: d.checkmark
                            })
                        }) : (0, a.jsx)(l.TooltipContainer, {
                            className: d.iconContainer,
                            element: "span",
                            text: "Inactive",
                            children: (0, a.jsx)(o.default, {
                                className: d.xmark
                            })
                        }), (0, a.jsx)(l.SingleSelect, {
                            className: d.overrideSelect,
                            value: u,
                            options: [{
                                value: void 0,
                                label: "No Override"
                            }, {
                                value: !0,
                                label: "Force Active"
                            }, {
                                value: !1,
                                label: "Force Inactive"
                            }],
                            onChange: e => null != e ? (0, i.setHotspotOverride)(t, e) : (0, i.clearHotspotOverride)(t)
                        })]
                    }), (0, a.jsx)(l.FormDivider, {})]
                })
            }

            function c(e) {
                let {
                    className: t
                } = e;
                return (0, a.jsxs)(l.FormSection, {
                    title: "Hotspots",
                    tag: l.FormTitleTags.H1,
                    className: t,
                    children: [(0, a.jsx)(l.Text, {
                        className: d.helpText,
                        tag: "p",
                        variant: "text-sm/normal",
                        children: 'All the "hotspots" in app, and their current status. Use the select menu to override them on or off.'
                    }), Object.keys(i.HotspotLocations).sort((e, t) => e.localeCompare(t)).map(e => (0, a.jsx)(u, {
                        hotspotLocation: e
                    }, e))]
                })
            }
        },
        216503: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                InfoBoxLooks: function() {
                    return n
                },
                default: function() {
                    return f
                }
            });
            var a, n, l = s("37983");
            s("884691");
            var i = s("414456"),
                r = s.n(i),
                o = s("77078"),
                d = s("266926"),
                u = s("423487"),
                c = s("759538");
            (a = n || (n = {})).INFO = "info", a.WARNING = "warning";
            let S = {
                    info: c.info,
                    warning: c.warning
                },
                E = {
                    info: d.default,
                    warning: u.default
                };

            function f(e) {
                let {
                    children: t,
                    className: s,
                    look: a = "info"
                } = e, n = E[a];
                return (0, l.jsxs)("div", {
                    className: r(c.root, s, S[a]),
                    children: [(0, l.jsx)(n, {
                        className: c.icon
                    }), (0, l.jsx)(o.Text, {
                        className: c.text,
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children: t
                    })]
                })
            }
        },
        484894: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                OverridePremiumTypeDropDown: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("811199"),
                r = s("285471"),
                o = s("400205"),
                d = s("697218"),
                u = s("646718");
            let c = e => {
                let {
                    isDevTools: t = !1
                } = e, s = (0, n.useStateFromStores)([d.default], () => d.default.getCurrentUser()), c = (0, n.useStateFromStores)([o.default], () => o.default.getPremiumTypeOverride());
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(l.FormSection, {
                        title: "Override Client-Side Premium Type",
                        tag: l.FormTitleTags.H3,
                        children: (0, a.jsx)(l.SingleSelect, {
                            options: u.PREMIUM_TYPE_OVERRIDE_OPTIONS,
                            value: c,
                            onChange: e => {
                                (0, r.updateClientPremiumTypeOverride)(e, s)
                            },
                            popoutLayerContext: t ? i.devToolsLayerContext : void 0
                        })
                    }), (0, a.jsx)(l.Button, {
                        look: l.Button.Looks.LINK,
                        style: {
                            padding: "0"
                        },
                        onClick: () => {
                            (0, r.updateClientPremiumTypeOverride)(u.UNSELECTED_PREMIUM_TYPE_OVERRIDE, s)
                        },
                        children: "Reset premium type override"
                    })]
                })
            }
        },
        479290: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return M
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("522632"),
                i = s("446674"),
                r = s("77078"),
                o = s("850068"),
                d = s("775433"),
                u = s("308757"),
                c = s("812204"),
                S = s("685665"),
                E = s("585653"),
                f = s("617917"),
                T = s("257869"),
                m = s("837008"),
                _ = s("108314"),
                g = s("946964"),
                h = s("649844"),
                I = s("509167"),
                N = s("635956"),
                p = s("305961"),
                C = s("521012"),
                A = s("49111"),
                O = s("646718"),
                x = s("596650");

            function R(e) {
                let {
                    selectedGuildForGuildSub: t
                } = e, s = (0, m.useGroupListingsForGuild)(null == t ? void 0 : t.id)[0];
                return (0, a.jsx)(a.Fragment, {
                    children: null != t && null != s ? (0, a.jsx)("div", {
                        className: x.formItem,
                        children: s.subscription_listings_ids.map(e => (0, a.jsx)(_.default, {
                            guildId: t.id,
                            groupListingId: e,
                            listingId: e
                        }, e))
                    }) : null
                })
            }
            var M = function() {
                let [e, t] = n.useState(O.PremiumSubscriptionSKUs.TIER_2), [s, m] = n.useState(null), [_] = (0, i.useStateFromStoresArray)([p.default], () => [p.default.getGuilds()]), [M] = (0, i.useStateFromStoresArray)([C.default], () => [C.default.getPremiumSubscription()]), v = Object.values(_).map(e => ({
                    value: e,
                    label: e.name
                })), [D, L] = n.useState(v.length > 0 ? v[0].value : null), [P, j] = n.useState(""), [b, U] = n.useState({
                    plan_id: O.SubscriptionPlans.PREMIUM_MONTH_TIER_2,
                    gift: "true"
                }), B = "true" !== b.gift && null != M, [y, F] = n.useState(v.length > 0 ? v[0].value : null), {
                    AnalyticsLocationProvider: G,
                    analyticsLocations: k
                } = (0, S.default)(c.default.PAYMENT_FLOW_TEST_PAGE), [H, w] = n.useState(""), [V, Y] = n.useState(""), [W, K] = n.useState(""), [z, Q] = n.useState(""), [q, Z] = n.useState("");
                return (0, a.jsx)(G, {
                    children: (0, a.jsxs)(r.FormSection, {
                        title: "Payment Flow Modals",
                        tag: r.FormTitleTags.H1,
                        children: [(0, a.jsx)(r.FormTitle, {
                            children: "Gift"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: e,
                                options: [{
                                    value: O.PremiumSubscriptionSKUs.TIER_2,
                                    label: "Nitro"
                                }, {
                                    value: O.PremiumSubscriptionSKUs.TIER_1,
                                    label: "Nitro Classic"
                                }, {
                                    value: O.PremiumSubscriptionSKUs.TIER_0,
                                    label: "Nitro Basic"
                                }, {
                                    value: null,
                                    label: "None"
                                }],
                                onChange: e => t(e)
                            }), (0, a.jsx)(N.default, {
                                subscriptionTier: e,
                                isGift: !0,
                                premiumModalAnalyticsLocation: {}
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Premium Select Plan"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: s,
                                options: [{
                                    value: O.PremiumSubscriptionSKUs.TIER_2,
                                    label: "Nitro"
                                }, {
                                    value: O.PremiumSubscriptionSKUs.TIER_1,
                                    label: "Nitro Classic"
                                }, {
                                    value: O.PremiumSubscriptionSKUs.TIER_0,
                                    label: "Nitro Basic"
                                }, {
                                    value: null,
                                    label: "None"
                                }],
                                onChange: e => m(e)
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, h.default)({
                                    subscriptionTier: s,
                                    analyticsLocations: k
                                }),
                                children: "Select Plan"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Boost"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: D,
                                options: v,
                                onChange: e => L(e)
                            }), null != D ? (0, a.jsx)(f.default, {
                                guild: D,
                                analyticsLocation: {}
                            }) : (0, a.jsx)("div", {
                                children: "No Guild to boost"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsxs)(r.FormTitle, {
                            children: [(0, a.jsx)("div", {
                                children: "Standalone: Trial Promotion Redemption"
                            }), (0, a.jsx)(r.Anchor, {
                                href: "https://i.dis.gd/createPromo",
                                children: "How to create promotion"
                            })]
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "Promotion Code",
                                value: P,
                                onChange: e => j(e)
                            }), (0, a.jsx)(r.Tooltip, {
                                text: "Need Promotion Code",
                                shouldShow: P.length < 1,
                                children: e => {
                                    let {
                                        onMouseEnter: t,
                                        onMouseLeave: s
                                    } = e;
                                    return (0, a.jsx)(r.Button, {
                                        disabled: P.length < 1,
                                        onMouseEnter: t,
                                        onMouseLeave: s,
                                        onClick: () => {
                                            window.open(A.Routes.BILLING_PROMOTION_REDEMPTION(P))
                                        },
                                        children: "Open Link"
                                    })
                                }
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Standalone: Gift/Subscription Purchase"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: b.plan_id,
                                options: [{
                                    value: O.SubscriptionPlans.PREMIUM_MONTH_TIER_2,
                                    label: "Nitro"
                                }, {
                                    value: O.SubscriptionPlans.PREMIUM_MONTH_TIER_1,
                                    label: "Nitro Classic"
                                }, {
                                    value: O.SubscriptionPlans.PREMIUM_MONTH_TIER_0,
                                    label: "Nitro Basic"
                                }],
                                onChange: e => U(t => ({
                                    ...t,
                                    plan_id: e
                                }))
                            }), (0, a.jsx)(r.SingleSelect, {
                                value: b.gift,
                                options: [{
                                    value: "true",
                                    label: "Gift"
                                }, {
                                    value: "false",
                                    label: "Not Gift"
                                }],
                                onChange: e => U(t => ({
                                    ...t,
                                    gift: e
                                }))
                            }), (0, a.jsx)(r.Tooltip, {
                                text: "Already subscribed",
                                shouldShow: B,
                                children: e => {
                                    let {
                                        onMouseEnter: t,
                                        onMouseLeave: s
                                    } = e;
                                    return (0, a.jsx)(r.Button, {
                                        onMouseLeave: s,
                                        onMouseEnter: t,
                                        disabled: B,
                                        onClick: () => {
                                            window.open(A.Routes.BILLING_PREMIUM_SUBSCRIBE + "?" + l.stringify({
                                                ...b
                                            }))
                                        },
                                        children: "Open Link"
                                    })
                                }
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Creator Revenue"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.Text, {
                                className: x.guildServerDescription,
                                variant: "text-sm/normal",
                                children: "Premium Server Subscription For"
                            }), (0, a.jsx)(r.SingleSelect, {
                                value: y,
                                options: v,
                                onChange: e => F(e)
                            })]
                        }), (0, a.jsx)(T.GroupListingsFetchContextProvider, {
                            guildId: null == y ? void 0 : y.id,
                            children: (0, a.jsx)(R, {
                                selectedGuildForGuildSub: y
                            })
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Activities & Application Payment Modals"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "Application Id",
                                value: H,
                                onChange: w
                            }), (0, a.jsx)(r.TextInput, {
                                placeholder: "Sku Id",
                                value: V,
                                onChange: Y
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, u.openIAPPurchaseModal)({
                                    applicationId: H,
                                    skuId: V,
                                    openPremiumPaymentModal: () => !0,
                                    analyticsLocations: [],
                                    analyticsLocationObject: {
                                        page: A.AnalyticsPages.IN_APP
                                    },
                                    context: A.AppContext.APP
                                }),
                                children: "Open App Subs Modal for Activity"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Standard Payment Modal Test"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "Application Id",
                                value: W,
                                onChange: K
                            }), (0, a.jsx)(r.TextInput, {
                                placeholder: "SKU ID",
                                value: z,
                                onChange: Q
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, I.default)({
                                    applicationId: W,
                                    skuId: z,
                                    analyticsLocations: k
                                }),
                                children: "Open Standard Payment Modal for SKU"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Collectibles Payment Modal Test"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "SKU ID",
                                value: q,
                                onChange: Z
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, g.default)({
                                    skuId: q,
                                    analyticsLocations: k
                                }),
                                children: "Open Collectibles Payment Modal for SKU"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Helpers"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: x.formItem,
                            children: [(0, a.jsx)(r.Button, {
                                onClick: () => (0, d.resetSubscriptionPlanData)(),
                                children: "Reset SubscriptionPlanStore"
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, o.resetSubscriptionStore)(),
                                children: "Reset SubscriptionStore"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Dismissible Content Framework"
                        }), (0, a.jsx)(r.FormItem, {
                            className: x.formItem,
                            children: (0, a.jsx)(r.Button, {
                                onClick: () => (0, E.resetDismissibleContentFrameworkStore)(),
                                children: "Reset DismissibleContentFrameworkStore"
                            })
                        })]
                    })
                })
            }
        },
        825958: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("743053"),
                i = s("595426"),
                r = s("697218"),
                o = s("719923"),
                d = s("646718");

            function u() {
                let e = (0, n.useStateFromStores)([r.default], () => r.default.getCurrentUser()),
                    t = (0, o.isPremiumExactly)(e, d.PremiumTypes.TIER_2);
                return t ? (0, a.jsx)(l.default, {}) : (0, a.jsx)(i.default, {})
            }
        },
        20604: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("15649"),
                i = s("762740"),
                r = s("369952"),
                o = s("198911"),
                d = s("15435"),
                u = s("578521"),
                c = s("49111"),
                S = s("89315");
            let E = {
                offset: {
                    top: -8
                }
            };

            function f() {
                return (0, a.jsxs)("div", {
                    className: S.socialLinks,
                    children: [(0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        tabIndex: -1,
                        rel: "author",
                        title: "Twitter",
                        href: (0, l.default)(c.LocalizedLinks.TWITTER),
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(d.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "Instagram",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.INSTAGRAM_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "Facebook",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.FACEBOOK_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(i.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "YouTube",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.YOUTUBE_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(u.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "TikTok",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.TIKTOK_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(o.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    })]
                })
            }
        },
        836833: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return m
                }
            }), s("222007"), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("913144"),
                u = s("456931"),
                c = s("610109"),
                S = s("414074"),
                E = s("84908"),
                f = s("926622");
            class T extends n.Component {
                renderTestCase(e, t, s, n, l) {
                    let r = null == t ? void 0 : t.summary;
                    return (0, a.jsxs)(o.FormText, {
                        className: f.marginBottom20,
                        children: [!0 === n ? "✅" : !0 === l ? "❌" : !0 === s ? "\uD83C\uDFCE️" : "", "speed test, bitrate = ", ((0, S.speedTestRate)(e) / 1e3).toFixed(0), " kbps, framerate =", " ", (0, S.speedTestFps)(e).toFixed(0), " fps, duration = ", (0, S.speedTestDuration)(e).toFixed(1), "s, direction =", " ", (0, S.speedTestDirection)(e), void 0 !== r && (0, a.jsxs)("div", {
                            children: [(0, a.jsxs)("div", {
                                className: i(f.marginTop8, f.marginBottom8),
                                children: ["Loss ", 100 * r.loss.toFixed(2), "%, Payload Bandwidth ", r.payloadBandwidth.toFixed(0), " kbps, Network Bandwidth ", r.networkBandwidth.toFixed(0), " kbps"]
                            }), (0, a.jsxs)("div", {
                                className: i(f.marginTop8, f.marginBottom8),
                                children: ["IAT p50=", r.iatP50.toFixed(2), "ms, p95=", r.iatP95.toFixed(2), "ms, max=", r.iatMax.toFixed(2), "ms"]
                            })]
                        }), !1 === n && !0 === s && !1 === l && (0, a.jsx)("div", {
                            children: (0, a.jsx)("div", {
                                className: i(f.marginTop8, f.marginBottom8),
                                children: "Test in progress. Results will appear when test completes."
                            })
                        }), !1 === n && !0 === l && (0, a.jsx)("div", {
                            children: (0, a.jsx)("div", {
                                className: i(f.marginTop8, f.marginBottom8),
                                children: "Test skipped."
                            })
                        })]
                    })
                }
                renderTestCases(e, t, s, a, n) {
                    if (!1 === e) return;
                    let l = [];
                    for (let [e, i] of s.entries()) {
                        let s = e === n,
                            r = null != n && e < n;
                        l.push(this.renderTestCase(i, a[e], s, r, t))
                    }
                    return l
                }
                renderPing(e, t, s) {
                    if (!1 === e) return;
                    let n = s.length > 0 ? (0, S.speedTestPingInfo)(s) : null;
                    return (0, a.jsxs)(o.FormText, {
                        className: f.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.PINGING ? "✅" : t === E.SpeedTestLifecycles.PINGING ? "\uD83C\uDFCE️" : "", "Ping endpoint", null !== n && (0, a.jsxs)("div", {
                            className: i(f.marginTop8, f.marginBottom8),
                            children: ["Pinged ", n.count, " time(s), min=", n.min, "ms, p50=", n.p50, "ms, max=", n.max, "ms"]
                        })]
                    })
                }
                renderConnect(e, t, s) {
                    if (!1 !== e) return (0, a.jsxs)(o.FormText, {
                        className: f.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.CONNECTING ? "✅" : t === E.SpeedTestLifecycles.CONNECTING ? "\uD83C\uDFCE️" : "", "Connect to ", null != s ? s : "endpoint"]
                    })
                }
                renderNotes() {
                    return (0, a.jsx)(o.TextArea, {
                        className: f.marginBottom20,
                        value: this.state.notes,
                        onChange: e => {
                            c.default.setNotes(e), this.setState({
                                notes: e
                            })
                        },
                        placeholder: "Anything we should know about this test? Enter any relevant information about location, connection strength, or recent call quality here."
                    })
                }
                renderAwaitingEndpoint(e, t) {
                    if (!1 !== e) return (0, a.jsxs)(o.FormText, {
                        className: f.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.AWAITING_ENDPOINT ? "✅" : t === E.SpeedTestLifecycles.AWAITING_ENDPOINT ? "\uD83C\uDFCE️" : "", "Select endpoint"]
                    })
                }
                renderUpload(e, t) {
                    if (!1 !== e) return (0, a.jsxs)(o.FormText, {
                        className: f.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.UPLOADING ? "✅" : t === E.SpeedTestLifecycles.UPLOADING ? "\uD83C\uDFCE️" : "", "Upload results"]
                    })
                }
                renderComplete(e, t) {
                    if (!1 !== e) {
                        if (t === E.SpeedTestLifecycles.COMPLETED) return (0, a.jsx)(o.FormText, {
                            className: f.marginBottom20,
                            children: "Your Speed Test is completed and the results have been uploaded. You may safely close this page."
                        })
                    }
                }
                render() {
                    let e = this.props.available,
                        t = this.props.active,
                        s = this.props.failed,
                        n = this.props.endpoint,
                        l = this.props.lifecycle,
                        i = this.props.testCases,
                        r = this.props.currentTest,
                        d = this.props.testResults,
                        c = this.props.pings,
                        S = t ? u.default.stopSpeedTest : u.default.startSpeedTest,
                        T = l >= E.SpeedTestLifecycles.AWAITING_ENDPOINT;
                    return !1 === e ? (0, a.jsx)(o.FormSection, {
                        tag: o.FormTitleTags.H1,
                        title: "Speed Test",
                        children: (0, a.jsx)(o.FormText, {
                            className: f.marginBottom20,
                            children: "Sorry! The Speed Test is not currently available. Disconnect from any existing calls and try again."
                        })
                    }) : (0, a.jsxs)(o.FormSection, {
                        tag: o.FormTitleTags.H1,
                        title: "Speed Test",
                        children: [this.renderNotes(), (0, a.jsx)(o.FormItem, {
                            className: f.marginBottom20,
                            children: (0, a.jsx)("div", {
                                children: (0, a.jsx)(o.Button, {
                                    onClick: () => S(),
                                    children: t ? "Stop Speed Test" : "Start Speed Test"
                                })
                            })
                        }), this.renderAwaitingEndpoint(T, l), this.renderConnect(T, l, n), this.renderPing(T, l, c), this.renderTestCases(T, s, i, d, r), this.renderUpload(T, l), this.renderComplete(T, l)]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        notes: this.props.notes
                    }
                }
            }

            function m() {
                let e = (0, r.useStateFromStoresObject)([c.default], () => ({
                        available: c.default.getAvailable(),
                        active: c.default.getActive(),
                        failed: c.default.getFailed(),
                        endpoint: c.default.getEndpoint(),
                        lifecycle: c.default.getLifecycle(),
                        testCases: c.default.getTestCases(),
                        testResults: c.default.getTestResults(),
                        currentTest: c.default.getCurrentTest(),
                        pings: c.default.getPings(),
                        notes: c.default.getNotes()
                    })),
                    [t, s] = n.useState(0),
                    l = n.useCallback(e => {
                        let {} = e;
                        s(t + 1)
                    }, [t]);
                return n.useEffect(() => (d.default.subscribe("RTC_SPEED_TEST_STATE_UPDATE", l), () => {
                    d.default.unsubscribe("RTC_SPEED_TEST_STATE_UPDATE", l)
                }), [l]), (0, a.jsx)(T, {
                    ...e
                })
            }
        },
        264278: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("424973"), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("913139"),
                o = s("850166"),
                d = s("42203"),
                u = s("923959"),
                c = s("305961"),
                S = s("162771"),
                E = s("145131"),
                f = s("409082"),
                T = s("375822"),
                m = s("782340"),
                _ = s("279309");

            function g() {}
            let h = [T.AutocompleterResultTypes.VOICE_CHANNEL];

            function I(e) {
                e.setOptions({
                    voiceChannelGuildFilter: null
                }), e.setLimit(1 / 0)
            }

            function N(e) {
                let {
                    height: t
                } = e;
                return (0, a.jsx)("div", {
                    style: {
                        height: t
                    }
                })
            }

            function p() {
                return (0, a.jsx)(N, {
                    height: 16
                }, "footer")
            }

            function C() {
                return (0, a.jsx)(N, {
                    height: 8
                }, "header")
            }

            function A() {
                return (0, a.jsx)("div", {
                    className: _.voiceListSearchEmpty,
                    children: (0, a.jsx)(i.Text, {
                        variant: "text-md/medium",
                        color: "text-muted",
                        className: _.noVoiceChannelSelected,
                        children: m.default.Messages.USER_SETTINGS_KEYBINDS_SEARCH_NO_RESULTS_FOUND
                    })
                })
            }

            function O(e) {
                var t, s;
                let {
                    keybind: l
                } = e, o = n.useRef(l);
                n.useEffect(() => void(o.current = l));
                let [d, u] = n.useState(null !== (s = null === (t = l.params) || void 0 === t ? void 0 : t.channelId) && void 0 !== s ? s : void 0), c = n.useCallback(() => {
                    (0, i.openModalLazy)(async () => e => (0, a.jsx)(x, {
                        ...e,
                        onSelect: e => {
                            u(e), r.default.setKeybind({
                                ...o.current,
                                params: {
                                    channelId: e
                                }
                            })
                        }
                    }))
                }, []);
                return (0, a.jsx)(i.FormSection, {
                    title: m.default.Messages.USER_SETTINGS_KEYBIND_SWITCH_SERVER_SETTINGS_SECTION,
                    className: _.channelIdSection,
                    children: (0, a.jsxs)(E.default, {
                        align: E.default.Align.STRETCH,
                        children: [(0, a.jsx)("div", {
                            className: _.selectedVoiceChannel,
                            children: (0, a.jsx)(R, {
                                channelId: d
                            })
                        }), (0, a.jsx)(E.default.Child, {
                            grow: 0,
                            shrink: 0,
                            children: (0, a.jsx)(i.Button, {
                                onClick: c,
                                children: m.default.Messages.USER_SETTINGS_KEYBINDS_SELECT_VOICE_CHANNEL
                            })
                        })]
                    })
                })
            }

            function x(e) {
                let {
                    transitionState: t,
                    onClose: s,
                    onSelect: r
                } = e, E = n.useId(), g = n.useRef(null), {
                    mouseFocusEnabled: N,
                    enableMouseFocus: O,
                    disableMouseFocus: x
                } = function() {
                    let e = n.useRef(!1),
                        t = n.useCallback(() => {
                            e.current = !0
                        }, []),
                        s = n.useCallback(() => {
                            e.current = !1
                        }, []);
                    return {
                        mouseFocusEnabled: e,
                        enableMouseFocus: t,
                        disableMouseFocus: s
                    }
                }(), {
                    query: R,
                    updateQuery: M,
                    queryResults: v
                } = (0, o.default)({
                    visible: !0,
                    autocompleterResultTypes: h,
                    autocompleterBeforeCreateSearchContext: I
                }), D = function(e) {
                    let t = "" !== e,
                        s = (0, l.useStateFromStoresArray)([u.default, d.default, S.default], () => {
                            let e = S.default.getGuildId();
                            if (t || null == e) return [];
                            let s = [];
                            for (let t of u.default.getVocalChannelIds(e)) {
                                let e = d.default.getChannel(t);
                                null != e && s.push(e)
                            }
                            return s
                        }, [t]);
                    return t ? null : s
                }(R), {
                    focusedIndex: L,
                    setFocusedIndex: P
                } = function(e) {
                    let [t, s] = n.useState(0), a = n.useRef(e);
                    return e !== a.current && 0 !== t && s(0), n.useEffect(() => void(a.current = e)), {
                        focusedIndex: t,
                        setFocusedIndex: s
                    }
                }(R);
                n.useEffect(() => {
                    let {
                        current: e
                    } = g;
                    !(null == e || e.isItemVisible(0, L, !0)) && e.scrollToIndex({
                        section: 0,
                        row: L
                    })
                }, [L]);
                let j = null != D ? D.length : v.length,
                    b = (() => {
                        if (null != D) {
                            var e;
                            return null === (e = D[L]) || void 0 === e ? void 0 : e.id
                        }
                        let t = v[L];
                        if ((null == t ? void 0 : t.type) === T.AutocompleterResultTypes.VOICE_CHANNEL) return t.record.id
                    })();
                return (0, a.jsx)("div", {
                    className: _.voiceModalContainer,
                    onMouseMove: O,
                    children: (0, a.jsxs)(i.ModalRoot, {
                        transitionState: t,
                        size: i.ModalSize.MEDIUM,
                        className: _.voiceModalRootContainer,
                        children: [(0, a.jsx)("div", {
                            className: _.inputWrapper,
                            children: (0, a.jsx)(i.TextInput, {
                                value: R,
                                onChange: M,
                                onKeyDown: function(e) {
                                    x();
                                    let t = e.key.toLowerCase();
                                    if ("arrowdown" === t || "arrowup" === t || "enter" === t || "escape" === t) switch (e.preventDefault(), t) {
                                        case "escape":
                                            s();
                                            break;
                                        case "enter": {
                                            let e = (() => {
                                                if (null != D) return D[L];
                                                let e = v[L];
                                                if ((null == e ? void 0 : e.type) === T.AutocompleterResultTypes.VOICE_CHANNEL) return e.record
                                            })();
                                            null == e ? r(void 0) : r(e.id), s();
                                            break
                                        }
                                        case "arrowup":
                                            0 === L ? P(j - 1) : P(L - 1);
                                            break;
                                        case "arrowdown":
                                            L >= j - 1 ? P(0) : P(L + 1)
                                    }
                                },
                                placeholder: m.default.Messages.USER_SETTINGS_KEYBINDS_SEARCH_VOICE,
                                role: "combobox",
                                "aria-controls": E,
                                "aria-expanded": j > 0,
                                "aria-activedescendant": j > 0 && null != b ? b : void 0,
                                "aria-autocomplete": "list",
                                spellCheck: !1
                            })
                        }), 0 === j && "" !== R && (0, a.jsx)(A, {}), (j > 0 || "" === R) && (0, a.jsx)(i.ListThin, {
                            innerId: E,
                            innerRole: "listbox",
                            "aria-label": m.default.Messages.USER_SETTINGS_KEYBIND_VOICE_CHANNEL_RESULTS,
                            ref: g,
                            sections: [j],
                            renderRow: function(e) {
                                let {
                                    row: t
                                } = e, n = (() => {
                                    if (null != D) return D[t];
                                    let e = v[t];
                                    if ((null == e ? void 0 : e.type) === T.AutocompleterResultTypes.VOICE_CHANNEL) return e.record
                                })();
                                if (null == n) return null;
                                let l = null != n.parent_id ? d.default.getChannel(n.parent_id) : void 0,
                                    i = c.default.getGuild(n.guild_id);
                                return (0, a.jsx)(f.Channel, {
                                    id: n.id,
                                    channel: n,
                                    category: l,
                                    focused: L === t,
                                    onMouseEnter: () => N.current && P(t),
                                    onClick: () => {
                                        r(n.id), s()
                                    },
                                    onFocus: () => P(t),
                                    children: null != i ? (0, a.jsx)("div", {
                                        className: _.guildName,
                                        children: i.name
                                    }) : null
                                }, n.id)
                            },
                            renderListHeader: C,
                            renderFooter: p,
                            sectionHeight: 0,
                            rowHeight: 34,
                            className: _.voiceChannelList,
                            listHeaderHeight: 8,
                            footerHeight: 16
                        })]
                    })
                })
            }

            function R(e) {
                let {
                    channelId: t
                } = e, {
                    channel: s,
                    category: n,
                    guild: r
                } = (0, l.useStateFromStoresObject)([d.default, c.default], () => {
                    let e = null != t ? d.default.getChannel(t) : void 0;
                    return null != e ? {
                        channel: e,
                        category: null != e.parent_id ? d.default.getChannel(e.parent_id) : void 0,
                        guild: null != e.guild_id ? c.default.getGuild(e.guild_id) : void 0
                    } : {
                        channel: void 0,
                        category: void 0,
                        guild: void 0
                    }
                });
                return null == s ? (0, a.jsx)(i.Text, {
                    variant: "text-md/medium",
                    color: "text-muted",
                    className: _.noVoiceChannelSelected,
                    children: m.default.Messages.USER_SETTINGS_KEYBINDS_NO_VOICE_CHANNEL_SELECTED
                }) : (0, a.jsx)(f.Channel, {
                    channel: s,
                    id: s.id,
                    category: n,
                    onClick: g,
                    onFocus: g,
                    onMouseEnter: g,
                    focused: !1,
                    children: null != r ? (0, a.jsx)("div", {
                        className: _.guildName,
                        children: r.name
                    }) : null
                })
            }
        },
        271445: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return h
                }
            }), s("222007");
            var a, n, l = s("37983"),
                i = s("884691"),
                r = s("446674"),
                o = s("77078"),
                d = s("913144"),
                u = s("70614"),
                c = s("711562"),
                S = s("167726"),
                E = s("145131"),
                f = s("476765"),
                T = s("782340"),
                m = s("866223"),
                _ = s("926622");
            let g = /^\d+$|^$/;
            (n = a || (a = {})).LOCALHOST = "localhost", n.PROXY = "proxy";

            function h(e) {
                let {
                    onClose: t,
                    transitionState: s
                } = e, {
                    authorizedApplicationId: a,
                    authorizationError: n,
                    authorizing: h
                } = (0, r.useStateFromStoresObject)([S.default], () => ({
                    authorizedApplicationId: S.default.testModeApplicationId,
                    authorizationError: S.default.error,
                    authorizing: S.default.isFetchingAuthorization
                })), [I, N] = i.useState(null != a ? a : ""), [p, C] = i.useState("8080"), [A, O] = i.useState("localhost"), x = (0, f.useUID)(), R = g.test(I);
                async function M() {
                    u.resetError();
                    let e = function(e, t, s) {
                            if (null == e) return null;
                            switch (e) {
                                case "localhost":
                                    return "https://localhost:".concat(t);
                                case "proxy":
                                    return (0, c.default)(s)
                            }
                        }(A, p, I),
                        s = await u.authorizeAndSetTestModeApplication(I, e);
                    null != s && t()
                }
                i.useEffect(() => () => d.default.wait(() => u.resetError()), []);
                let v = null != a && a === I,
                    D = v ? function() {
                        u.reset(), N(""), O(null)
                    } : M;
                return (0, l.jsxs)(o.ModalRoot, {
                    "aria-labelledby": x,
                    transitionState: s,
                    children: [(0, l.jsxs)(o.ModalHeader, {
                        justify: E.default.Justify.BETWEEN,
                        separator: !1,
                        children: [(0, l.jsx)(o.FormTitle, {
                            id: x,
                            tag: "h1",
                            className: _.marginReset,
                            children: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_MODAL_HEADER
                        }), (0, l.jsx)(o.ModalCloseButton, {
                            onClick: t
                        })]
                    }), (0, l.jsxs)(o.ModalContent, {
                        className: m.modalContent,
                        children: [(0, l.jsx)(o.FormText, {
                            className: _.marginBottom20,
                            type: o.FormText.Types.DESCRIPTION,
                            children: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_MODAL_BODY
                        }), null == n ? null : (0, l.jsx)(o.FormErrorBlock, {
                            className: _.marginBottom20,
                            children: n
                        }), (0, l.jsx)("form", {
                            onSubmit: e => {
                                e.preventDefault(), D()
                            },
                            children: (0, l.jsxs)(E.default, {
                                direction: E.default.Direction.VERTICAL,
                                align: E.default.Align.START,
                                children: [(0, l.jsx)(o.FormItem, {
                                    className: m.inputWrapper,
                                    title: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_PLACEHOLDER,
                                    required: !0,
                                    children: (0, l.jsx)(o.TextInput, {
                                        value: I,
                                        maxLength: 19,
                                        error: R ? null : T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_INVALID,
                                        onChange: function(e) {
                                            N(e)
                                        },
                                        disabled: h
                                    })
                                }), (0, l.jsx)(o.FormItem, {
                                    className: m.inputWrapper,
                                    title: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_ORIGIN_LABEL,
                                    children: (0, l.jsx)(o.SingleSelect, {
                                        isDisabled: !R || "" === I,
                                        value: A,
                                        options: [{
                                            value: "localhost",
                                            label: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_LOCALHOST_OPTION,
                                            key: "localhost"
                                        }, {
                                            value: "proxy",
                                            label: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_PROXY_OPTION,
                                            key: "proxy"
                                        }],
                                        onChange: function(e) {
                                            O(e)
                                        },
                                        placeholder: "URL Origin Type"
                                    })
                                }), "localhost" !== A ? null : (0, l.jsx)(o.FormItem, {
                                    className: m.inputWrapper,
                                    title: T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_PORT_NUMBER_LABEL,
                                    required: !0,
                                    children: (0, l.jsx)(o.TextInput, {
                                        value: p,
                                        maxLength: 5,
                                        onChange: e => C(e),
                                        disabled: h
                                    })
                                }), (0, l.jsx)(o.Button, {
                                    submitting: h,
                                    type: "submit",
                                    disabled: !R || 0 === I.length || "localhost" === A && 0 === p.length,
                                    color: v ? o.Button.Colors.RED : o.Button.Colors.GREEN,
                                    children: v ? T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_CLEAR : T.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_ACTIVATE
                                })]
                            })
                        })]
                    })]
                })
            }
        },
        625393: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("927858"),
                i = s("77078");

            function r() {
                let [e, t] = n.useState("");
                return (0, a.jsxs)(i.FormSection, {
                    title: "Text components",
                    tag: i.FormTitleTags.H1,
                    children: [(0, a.jsx)(i.TextInput, {
                        placeholder: "Enter custom text...",
                        onChange: e => t(e)
                    }), (0, a.jsx)(i.FormDivider, {
                        style: {
                            margin: "10px 0"
                        }
                    }), l.TEXT_VARIANT.map(t => "code" === t ? null : (0, a.jsx)(i.Text, {
                        variant: t,
                        children: "" !== e ? "".concat(e, " (").concat(t, ")") : t
                    }, t))]
                })
            }
        },
        152891: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                shouldShowTextPlayground: function() {
                    return l
                }
            });
            var a = s("862205");
            let n = (0, a.createExperiment)({
                kind: "user",
                id: "2023-03_text_playground_settings_pane",
                label: "Text Playground",
                defaultConfig: {
                    showSetting: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable settings pane",
                    config: {
                        showSetting: !0
                    }
                }]
            });

            function l() {
                return n.getCurrentConfig({
                    location: "26c832_1"
                }, {
                    autoTrackExposure: !0
                }).showSetting
            }
        },
        628235: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return L
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("627445"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("430713"),
                u = s("984557"),
                c = s("920636"),
                S = s("583227"),
                E = s("878720"),
                f = s("601745"),
                T = s("685223"),
                m = s("271938"),
                _ = s("650893"),
                g = s("697218"),
                h = s("145131"),
                I = s("306160"),
                N = s("222038"),
                p = s("462369"),
                C = s("803163"),
                A = s("49111"),
                O = s("482931"),
                x = s("782340"),
                R = s("374204"),
                M = s("926622");

            function v(e) {
                let {
                    code: {
                        code: t,
                        consumed: s
                    }
                } = e, l = "".concat(t.substr(0, 4), "-").concat(t.substr(4)), i = n.useRef(null), r = n.useCallback(e => {
                    if ("c" === e.key && e.metaKey && I.SUPPORTS_COPY) {
                        var t;
                        e.preventDefault(), e.stopPropagation(), (0, I.copy)(l), null == i || null === (t = i.current) || void 0 === t || t.focus()
                    }
                }, [l]);
                return (0, a.jsx)("li", {
                    className: M.marginBottom20,
                    children: (0, a.jsx)(o.Clickable, {
                        innerRef: i,
                        className: R.backupCode,
                        onKeyDown: r,
                        children: (0, a.jsx)(o.Checkbox, {
                            displayOnly: !0,
                            readOnly: !0,
                            className: R.codeCheckbox,
                            value: s,
                            children: (0, a.jsx)("span", {
                                className: R.code,
                                children: l
                            })
                        })
                    })
                })
            }
            class D extends n.PureComponent {
                maskPhoneNumber(e) {
                    return null == e ? "" : "".concat("*".repeat(e.length - 4)).concat(e.slice(-4))
                }
                renderMFASMS() {
                    let e, t;
                    let {
                        revealed: s
                    } = this.state, {
                        currentUser: n,
                        togglingSMS: l
                    } = this.props, i = null != n.phone, r = n.hasFlag(A.UserFlags.MFA_SMS);
                    if (i || r) {
                        let e = s ? n.phone : this.maskPhoneNumber(n.phone);
                        t = (0, a.jsxs)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            className: M.marginBottom8,
                            children: [x.default.Messages.MFA_SMS_AUTH_CURRENT_PHONE.format({
                                phoneNumber: e
                            }), (0, a.jsx)(o.Anchor, {
                                onClick: this.togglePhoneNumberVisibility,
                                className: R.phoneRevealer,
                                children: s ? x.default.Messages.MFA_SMS_PHONE_NUMBER_HIDE : x.default.Messages.MFA_SMS_PHONE_NUMBER_REVEAL
                            })]
                        })
                    }
                    if (r) e = (0, a.jsx)(h.default, {
                        className: i ? "" : M.marginTop8,
                        children: (0, a.jsx)(o.Button, {
                            color: o.Button.Colors.RED,
                            look: o.Button.Looks.OUTLINED,
                            size: o.Button.Sizes.SMALL,
                            submitting: l,
                            onClick: this.handleDisableSMS,
                            children: x.default.Messages.MFA_SMS_REMOVE
                        })
                    });
                    else {
                        let t = (0, p.getSMSBackupDisabledMessage)(n);
                        e = (0, a.jsxs)(h.default, {
                            className: i ? "" : M.marginTop8,
                            children: [(0, a.jsx)(o.Button, {
                                onClick: this.handleEnableSMS,
                                size: o.Button.Sizes.SMALL,
                                submitting: l,
                                disabled: null != t,
                                children: null != t ? t : x.default.Messages.MFA_SMS_ENABLE
                            }), i ? (0, a.jsx)(o.Button, {
                                onClick: this.handleChangePhoneNumber,
                                color: o.Button.Colors.PRIMARY,
                                size: o.Button.Sizes.SMALL,
                                look: o.Button.Looks.LINK,
                                children: x.default.Messages.CHANGE_PHONE_NUMBER
                            }) : null]
                        })
                    }
                    return (0, a.jsxs)(o.FormSection, {
                        className: M.marginTop40,
                        title: x.default.Messages.MFA_SMS_AUTH,
                        children: [(0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            children: x.default.Messages.MFA_SMS_AUTH_SALES_PITCH
                        }), t, e]
                    })
                }
                renderTOTPRemove() {
                    let {
                        totpDisabledReason: e
                    } = this.props, t = null !== e;
                    return (0, a.jsx)(o.Tooltip, {
                        text: e,
                        shouldShow: t,
                        children: e => (0, a.jsx)(o.Button, {
                            ...e,
                            onClick: this.handleDisableMFA,
                            size: o.Button.Sizes.SMALL,
                            color: o.ButtonColors.RED,
                            look: o.ButtonLooks.OUTLINED,
                            disabled: t,
                            children: x.default.Messages.TWO_FA_REMOVE
                        })
                    })
                }
                renderEnabled() {
                    let e;
                    let {
                        backupCodes: t
                    } = this.props, s = (0, a.jsx)(o.Button, {
                        onClick: this.sendMFABackupCodesVerificationKeyEmail,
                        size: o.Button.Sizes.SMALL,
                        children: x.default.Messages.TWO_FA_VIEW_BACKUP_CODES
                    });
                    if (t.length > 0) {
                        s = (0, a.jsx)(u.default, {
                            fileContents: this.getDownloadFileContents,
                            contentType: "text/plain",
                            fileName: "discord_backup_codes.txt",
                            children: (0, a.jsx)(o.Button, {
                                size: o.Button.Sizes.SMALL,
                                children: x.default.Messages.TWO_FA_DOWNLOAD_CODES
                            })
                        });
                        let n = e => e.map(e => (0, a.jsx)(v, {
                            code: e
                        }, e.code));
                        e = (0, a.jsxs)(o.FormSection, {
                            title: x.default.Messages.TWO_FA_BACKUP_CODES_LABEL,
                            children: [(0, a.jsx)(o.FormText, {
                                type: o.FormText.Types.DESCRIPTION,
                                className: M.marginBottom20,
                                children: x.default.Messages.TWO_FA_BACKUP_CODES_BODY.format()
                            }), (0, a.jsxs)(h.default, {
                                children: [(0, a.jsx)(h.default.Child, {
                                    children: (0, a.jsx)("ul", {
                                        className: R.checkboxGroup,
                                        children: n(t.slice(0, t.length / 2))
                                    })
                                }), (0, a.jsx)(h.default.Child, {
                                    children: (0, a.jsx)("ul", {
                                        className: R.checkboxGroup,
                                        children: n(t.slice(t.length / 2))
                                    })
                                })]
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(o.Button, {
                                    onClick: this.generateBackupCodes,
                                    look: o.ButtonLooks.LINK,
                                    size: o.ButtonSizes.MIN,
                                    children: x.default.Messages.TWO_FA_GENERATE_CODES
                                })
                            }), (0, a.jsx)(o.FormDivider, {
                                className: M.marginTop20
                            })]
                        })
                    }
                    return (0, a.jsxs)(o.FormSection, {
                        children: [(0, a.jsx)(o.FormTitle, {
                            children: x.default.Messages.TWO_FA
                        }), (0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            className: M.marginBottom20,
                            children: x.default.Messages.TWO_FA_DESCRIPTION
                        }), (0, a.jsxs)(h.default, {
                            justify: h.default.Justify.START,
                            className: M.marginBottom20,
                            children: [(0, a.jsx)(h.default.Child, {
                                wrap: !0,
                                grow: 0,
                                children: s
                            }), (0, a.jsx)(h.default.Child, {
                                wrap: !0,
                                children: this.props.hasTOTPEnabled ? this.renderTOTPRemove() : (0, a.jsx)(o.Button, {
                                    onClick: C.default.enableMFA,
                                    size: o.ButtonSizes.SMALL,
                                    children: x.default.Messages.TWO_FA_ENABLE
                                })
                            })]
                        }), e, this.renderMFASMS(), (0, a.jsx)(T.default, {})]
                    })
                }
                renderDisabled() {
                    return (0, a.jsxs)(o.FormSection, {
                        title: x.default.Messages.TWO_FA,
                        children: [(0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            className: M.marginBottom20,
                            children: x.default.Messages.TWO_FA_SALES_PITCH
                        }), (0, a.jsx)(o.FormItem, {
                            children: (0, a.jsx)(o.Button, {
                                onClick: C.default.enableMFA,
                                size: o.ButtonSizes.SMALL,
                                children: x.default.Messages.TWO_FA_ENABLE
                            })
                        }), (0, a.jsx)(T.default, {})]
                    })
                }
                render() {
                    let {
                        currentUser: e
                    } = this.props;
                    return N.hasCrypto ? e.verified ? e.mfaEnabled ? this.renderEnabled() : this.renderDisabled() : (0, a.jsx)(o.FormSection, {
                        title: x.default.Messages.TWO_FA,
                        children: (0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            children: x.default.Messages.TWO_FA_NOT_VERIFIED
                        })
                    }) : (0, a.jsx)(o.FormSection, {
                        title: x.default.Messages.TWO_FA,
                        children: (0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            children: x.default.Messages.TWO_FA_USE_DESKTOP_APP
                        })
                    })
                }
                openPhoneVerificationModal() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    (0, o.openModal)(t => (0, a.jsx)(f.default, {
                        reason: E.ChangePhoneReason.USER_SETTINGS_UPDATE,
                        ...t,
                        ...e
                    }), {
                        modalKey: O.PHONE_VERIFICATION_MODAL_KEY
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        revealed: !1,
                        password: ""
                    }, this.togglePhoneNumberVisibility = e => {
                        e.preventDefault(), this.setState({
                            revealed: !this.state.revealed
                        })
                    }, this.handleDisableMFA = () => {
                        d.default.disable()
                    }, this.generateBackupCodes = async () => {
                        let e = _.default.getVerificationKey();
                        await d.default.confirmViewBackupCodes(e, !0)
                    }, this.sendMFABackupCodesVerificationKeyEmail = () => {
                        (0, o.openModal)(e => (0, a.jsx)(S.default, {
                            ...e,
                            handleSubmit: e => d.default.sendMFABackupCodesVerificationKeyEmail(e).then(() => {
                                this.viewBackupCodes(e)
                            }),
                            title: x.default.Messages.TWO_FA_VIEW_BACKUP_CODES_ENTER_PASSWORD,
                            actionText: x.default.Messages.TWO_FA_BACKUP_CODES_NEXT_ACTION
                        }))
                    }, this.viewBackupCodes = e => {
                        (0, o.openModal)(t => (0, a.jsx)(c.default, {
                            ...t,
                            handleSubmit: e => d.default.confirmViewBackupCodes(e, !1).then(() => t.onClose()),
                            maxLength: 8,
                            title: x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_LABEL,
                            label: x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_INPUT_LABEL,
                            forceNoPlaceholder: !0,
                            retryPrompt: x.default.Messages.TWO_FA_CONFIRM_VIEW_RESEND_EMAIL_PROMPT,
                            retrySuccessMessage: x.default.Messages.TWO_FA_CONFIRM_VIEW_RESEND_EMAIL_SUCCESS,
                            onRetry: () => d.default.sendMFABackupCodesVerificationKeyEmail(e),
                            actionText: x.default.Messages.TWO_FA_VIEW_CODES_SUBMIT,
                            helpMessage: x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_BODY
                        }))
                    }, this.getDownloadFileContents = () => {
                        let e = this.props.backupCodes.map(e => {
                                let {
                                    consumed: t,
                                    code: s
                                } = e;
                                return "* ".concat(s.substr(0, 4), "-").concat(s.substr(4), " ").concat(t ? "(used)" : "")
                            }).join("\r\n"),
                            t = x.default.Messages.TWO_FA_DISCORD_BACKUP_CODES.format({
                                email: this.props.currentUser.email
                            });
                        return "".concat(t, "\r\n\r\n").concat(e)
                    }, this.handleChangePhoneNumber = () => {
                        this.openPhoneVerificationModal()
                    }, this.handleEnableSMS = () => {
                        let {
                            currentUser: e
                        } = this.props, t = () => {
                            (0, o.openModal)(e => (0, a.jsx)(S.default, {
                                ...e,
                                handleSubmit: d.default.enableSMS,
                                title: x.default.Messages.MFA_SMS_ENABLE
                            }))
                        };
                        null == e.phone ? this.openPhoneVerificationModal({
                            onAddedPhone: t
                        }) : t()
                    }, this.handleDisableSMS = () => {
                        (0, o.openModal)(e => (0, a.jsx)(S.default, {
                            ...e,
                            handleSubmit: d.default.disableSMS,
                            title: x.default.Messages.MFA_SMS_REMOVE,
                            children: x.default.Messages._MFA_SMS_CONFIRM_REMOVE_BODY
                        }))
                    }
                }
            }

            function L(e) {
                let t = (0, r.useStateFromStores)([g.default], () => g.default.getCurrentUser());
                i(null != t, "TwoFactorAuth: currentUser cannot be undefined");
                let s = (0, r.useStateFromStoresObject)([_.default, m.default], () => ({
                        togglingSMS: _.default.togglingSMS,
                        hasTOTPEnabled: m.default.hasTOTPEnabled()
                    })),
                    n = (0, p.use2FARemoveDisableReason)();
                return (0, a.jsx)(D, {
                    currentUser: t,
                    ...s,
                    ...e,
                    totpDisabledReason: n
                })
            }
        },
        921600: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return W
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("917351"),
                o = s.n(r),
                d = s("446674"),
                u = s("77078"),
                c = s("79112"),
                S = s("533280"),
                E = s("180748"),
                f = s("206230"),
                T = s("951212"),
                m = s("692038"),
                _ = s("815297"),
                g = s("574073"),
                h = s("291655"),
                I = s("67508"),
                N = s("76629"),
                p = s("981957"),
                C = s("145131"),
                A = s("476765"),
                O = s("830837"),
                x = s("132755"),
                R = s("599110"),
                M = s("701909"),
                v = s("845579"),
                D = s("186709"),
                L = s("225849"),
                P = s("397336"),
                j = s("49111"),
                b = s("560241"),
                U = s("357046"),
                B = s("782340"),
                y = s("667473"),
                F = s("926622"),
                G = s("307757");
            let k = (0, A.uid)(),
                H = (0, A.uid)(),
                w = (0, A.uid)(),
                V = o.debounce(e => {
                    (0, E.setSaturation)(e)
                }, 250),
                Y = o.debounce(e => {
                    (0, N.setSpeechRate)(e)
                }, 250);

            function W(e) {
                return (0, a.jsxs)(u.FormSection, {
                    tag: u.FormTitleTags.H1,
                    title: B.default.Messages.ACCESSIBILITY,
                    children: [(0, a.jsx)(K, {}), (0, a.jsx)(z, {}), (0, a.jsx)(u.FormDivider, {}), (0, a.jsx)(Q, {}), (0, a.jsx)(q, {}), (0, a.jsx)(Z, {}), (0, T.canEnableForcedColors)() ? (0, a.jsx)(X, {}) : null, (0, a.jsx)(J, {}), (0, a.jsx)($, {}), (0, a.jsx)(ee, {}), (0, a.jsx)(et, {}), (0, a.jsx)(u.FormDivider, {
                        className: F.marginBottom20
                    }), (0, a.jsx)(u.Text, {
                        variant: "text-md/normal",
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_APPEARANCE_LINK.format({
                            onAppearanceClick() {
                                c.default.open(j.UserSettingsSections.APPEARANCE)
                            }
                        })
                    })]
                })
            }

            function K() {
                let e = v.MessageDisplayCompact.useSetting(),
                    [t] = n.useState(() => {
                        let e = (0, m.createMessageRecord)({
                            ...(0, _.default)({
                                channelId: "1337",
                                content: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_LINK_PREVIEW_MESSAGE.format({
                                    previewLink: "https://discord.com/accessibility"
                                })
                            }),
                            state: j.MessageStates.SENT,
                            id: "".concat(0)
                        });
                        return e.colorString = "green", e
                    });
                return (0, a.jsx)(u.FocusBlock, {
                    children: (0, a.jsxs)(u.Card, {
                        className: y.preview,
                        "aria-hidden": !0,
                        children: [(0, a.jsxs)("div", {
                            className: y.previewHeader,
                            children: [(0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                color: u.Button.Colors.BRAND,
                                children: B.default.Messages.ACCESSIBILITY_EXAMPLE_BUTTON_LABEL
                            }), (0, a.jsx)("div", {
                                className: y.previewAvatars,
                                children: [j.StatusTypes.ONLINE, j.StatusTypes.DND, j.StatusTypes.IDLE].map(e => (0, a.jsx)(u.AnimatedAvatar, {
                                    "aria-label": B.default.Messages.USER_SETTINGS_AVATAR,
                                    src: G,
                                    size: u.AvatarSizes.SIZE_32,
                                    status: e
                                }, e))
                            })]
                        }), (0, a.jsx)("div", {
                            className: y.previewMessage,
                            children: (0, a.jsx)(h.default, {
                                compact: e,
                                author: {
                                    ...(0, g.getMessageAuthor)(t),
                                    colorString: "#DD80F4"
                                },
                                message: t
                            })
                        })]
                    })
                })
            }

            function z() {
                let {
                    saturation: e,
                    desaturateUserColors: t
                } = (0, d.useStateFromStoresObject)([f.default], () => ({
                    saturation: f.default.saturation,
                    desaturateUserColors: f.default.desaturateUserColors
                }));
                return (0, a.jsxs)(u.FormSection, {
                    className: F.marginTop20,
                    children: [(0, a.jsx)(u.FormTitle, {
                        id: k,
                        className: F.marginBottom8,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_TITLE
                    }), (0, a.jsx)(u.FormText, {
                        id: H,
                        type: u.FormText.Types.DESCRIPTION,
                        className: F.marginBottom20,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_DESCRIPTION
                    }), (0, a.jsx)(u.Slider, {
                        "aria-labelledby": k,
                        "aria-describedby": H,
                        markers: j.Accessibility.SATURATION_INCREMENTS,
                        equidistant: !0,
                        stickToMarkers: !0,
                        maxValue: 1,
                        minValue: 0,
                        initialValue: e,
                        onValueChange: V,
                        onMarkerRender: e => 100 * e % 2 == 0 ? "".concat(100 * e, "%") : void 0
                    }), (0, a.jsx)(u.FormSwitch, {
                        hideBorder: !0,
                        className: i(F.marginTop8, F.marginBottom20),
                        value: t,
                        onChange: E.toggleDesaturateUserColors,
                        note: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_CUSTOM_COLORS_DESCRIPTION,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_CUSTOM_COLORS_LABEL
                    })]
                })
            }

            function Q() {
                let e = (0, d.useStateFromStores)([f.default], () => f.default.alwaysShowLinkDecorations);
                return (0, a.jsx)(u.FormItem, {
                    className: F.marginTop20,
                    children: (0, a.jsx)(u.FormSwitch, {
                        note: B.default.Messages.ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_NOTE,
                        value: e,
                        onChange: function() {
                            (0, E.setAlwaysShowLinkDecorations)(!e)
                        },
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_LABEL
                    })
                })
            }

            function q() {
                let e = (0, d.useStateFromStores)([f.default], () => f.default.roleStyle);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.FormItem, {
                        title: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_TITLE,
                        className: F.marginTop20,
                        children: [(0, a.jsx)(u.FormText, {
                            type: u.FormText.Types.DESCRIPTION,
                            className: F.marginBottom8,
                            children: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_DESCRIPTION
                        }), (0, a.jsx)(u.RadioGroup, {
                            options: [{
                                name: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_USERNAME_LABEL,
                                value: "username"
                            }, {
                                name: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_DOT_LABEL,
                                value: "dot"
                            }, {
                                name: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_HIDDEN_LABEL,
                                value: "hidden"
                            }],
                            onChange: function(e) {
                                (0, E.setRoleStyle)(e.value)
                            },
                            value: e
                        })]
                    }), (0, a.jsx)(u.FormDivider, {
                        className: F.marginTop20
                    })]
                })
            }

            function Z() {
                let e = (0, d.useStateFromStores)([f.default], () => f.default.syncProfileThemeWithUserTheme),
                    t = n.useRef(null);
                return (0, L.default)(t, P.AccessibilityScrollPositions.SYNC_PROFILE_THEME_WITH_USER_THEME), (0, a.jsx)(u.FormItem, {
                    ref: t,
                    title: B.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_COLORS_TITLE,
                    className: i(F.marginTop20, y.syncProfileThemeWithUserTheme),
                    children: (0, a.jsx)(u.FormSwitch, {
                        note: B.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_THEMES_NOTE.format({
                            onThemeClick() {
                                c.default.open(j.UserSettingsSections.APPEARANCE)
                            }
                        }),
                        className: F.marginTop20,
                        value: e,
                        onChange: E.toggleSyncProfileThemeWithUserTheme,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_THEMES_DESCRIPTION
                    })
                })
            }

            function X() {
                let [e] = (0, d.useStateFromStoresArray)([f.default], () => [f.default.syncForcedColors, f.default.systemForcedColors]), [t, s] = n.useState(e);
                n.useEffect(() => {
                    s(e)
                }, [e]);
                let l = n.useRef(null);
                n.useEffect(() => {
                    null != l.current && (clearTimeout(l.current), l.current = null), t !== e && (l.current = setTimeout(() => (0, E.setSyncForcedColors)(t), 150))
                }, [t, e]);
                let i = B.default.Messages.ACCESSIBILITY_SETTINGS_SYNC_FORCED_COLORS_DESCRIPTION.format({
                    learnMoreLink: M.default.getArticleURL(j.HelpdeskArticles.FORCED_COLORS)
                });
                return (0, a.jsx)(u.FormItem, {
                    title: B.default.Messages.ACCESSIBILITY_SETTINGS_CONTRAST,
                    className: F.marginTop20,
                    children: (0, a.jsx)(u.FormSwitch, {
                        value: t,
                        note: i,
                        onChange: s,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SYNC_FORCED_COLORS_LABEL
                    })
                })
            }

            function J() {
                let e = v.GifAutoPlay.useSetting(),
                    t = v.AnimateEmoji.useSetting(),
                    {
                        useReducedMotion: s,
                        rawPrefersReducedMotion: l,
                        systemPrefersReducedMotion: r,
                        gifAutoPlayOverrideReason: o,
                        animateEmojiOverrideReason: c
                    } = (0, d.useStateFromStoresObject)([f.default, D.default], () => ({
                        systemPrefersReducedMotion: f.default.systemPrefersReducedMotion,
                        rawPrefersReducedMotion: f.default.rawPrefersReducedMotion,
                        useReducedMotion: f.default.useReducedMotion,
                        gifAutoPlayOverrideReason: D.default.getAppliedOverrideReasonKey("gifAutoPlay"),
                        animateEmojiOverrideReason: D.default.getAppliedOverrideReasonKey("animateEmoji")
                    })),
                    S = n.useRef(null);
                (0, L.default)(S, P.AccessibilityScrollPositions.REDUCED_MOTION);
                let T = n.useCallback((e, t) => {
                        (0, E.setPrefersReducedMotion)(t ? "auto" : r)
                    }, [r]),
                    m = n.useCallback(e => {
                        (0, E.setPrefersReducedMotion)(e ? "reduce" : "no-preference")
                    }, []);
                return (0, a.jsxs)(u.FormItem, {
                    ref: S,
                    title: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION,
                    className: i(F.marginTop20, y.reducedMotion),
                    children: [(0, a.jsx)(u.FormText, {
                        type: u.FormText.Types.DESCRIPTION,
                        className: F.marginBottom8,
                        children: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_DESCRIPTION.format({
                            helpdeskArticle: M.default.getArticleURL(j.HelpdeskArticles.REDUCED_MOTION)
                        })
                    }), (0, a.jsx)(u.Checkbox, {
                        className: F.marginTop20,
                        value: "auto" === l,
                        shape: u.Checkbox.Shapes.BOX,
                        type: u.Checkbox.Types.INVERTED,
                        onChange: T,
                        children: (0, a.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            children: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_AUTO
                        })
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: F.marginTop20,
                        value: s,
                        onChange: m,
                        children: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_ENABLE
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: F.marginBottom40,
                        value: e,
                        note: null != o ? (0, I.default)(o) : void 0,
                        onChange: v.GifAutoPlay.updateSetting,
                        children: B.default.Messages.GIF_AUTO_PLAY_LABEL
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: i(F.marginTop8, F.marginBottom20),
                        value: t,
                        note: null != c ? (0, I.default)(c) : void 0,
                        onChange: v.AnimateEmoji.updateSetting,
                        children: B.default.Messages.ANIMATE_EMOJI
                    })]
                })
            }

            function $() {
                let e = v.AnimateStickers.useSetting(),
                    t = (0, d.useStateFromStores)([D.default], () => D.default.getAppliedOverrideReasonKey("animateStickers")),
                    s = n.useCallback(e => {
                        v.AnimateStickers.updateSetting(e.value)
                    }, []);
                return (0, a.jsxs)(u.FormItem, {
                    className: F.marginBottom40,
                    title: B.default.Messages.STICKERS_AUTO_PLAY_HEADING,
                    children: [(0, a.jsx)(u.FormText, {
                        type: u.FormText.Types.DESCRIPTION,
                        className: F.marginBottom8,
                        children: null != t ? (0, I.default)(t) : B.default.Messages.STICKERS_AUTO_PLAY_HELP
                    }), (0, a.jsx)(u.RadioGroup, {
                        options: [{
                            name: B.default.Messages.STICKERS_ALWAYS_ANIMATE,
                            value: b.StickerAnimationSettings.ALWAYS_ANIMATE
                        }, {
                            name: B.default.Messages.STICKERS_ANIMATE_ON_INTERACTION,
                            desc: B.default.Messages.STICKERS_ANIMATE_ON_INTERACTION_DESCRIPTION,
                            value: b.StickerAnimationSettings.ANIMATE_ON_INTERACTION
                        }, {
                            name: B.default.Messages.STICKERS_NEVER_ANIMATE,
                            value: b.StickerAnimationSettings.NEVER_ANIMATE
                        }],
                        onChange: s,
                        value: e
                    })]
                })
            }

            function ee() {
                let e = (0, d.useStateFromStores)([f.default], () => f.default.isSubmitButtonEnabled),
                    t = v.UseLegacyChatInput.useSetting(),
                    s = n.useRef(null);
                return (0, L.default)(s, P.AccessibilityScrollPositions.LEGACY_CHAT_INPUT), (0, a.jsxs)(u.FormItem, {
                    ref: s,
                    children: [(0, a.jsx)(u.FormTitle, {
                        className: F.marginBottom8,
                        children: B.default.Messages.FORM_LABEL_ACCESSIBILITY_CHAT_INPUT
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: F.marginTop20,
                        value: e,
                        onChange: E.toggleSubmitButton,
                        children: B.default.Messages.DISPLAY_SUBMIT_BUTTON
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: F.marginTop8,
                        value: t,
                        note: B.default.Messages.LEGACY_CHAT_INPUT_DESCRIPTION,
                        onChange: e => {
                            R.default.track(j.AnalyticEvents.LEGACY_CHAT_INPUT_TOGGLED, {
                                enabled: e,
                                location: {
                                    section: j.AnalyticsSections.SETTINGS_ACCESSIBILITY
                                }
                            }), v.UseLegacyChatInput.updateSetting(e)
                        },
                        children: B.default.Messages.LEGACY_CHAT_INPUT
                    })]
                })
            }

            function et() {
                let e = v.EnableTTSCommand.useSetting(),
                    t = (0, d.useStateFromStores)([p.default], () => p.default.speechRate),
                    [s, l] = n.useState(!1);
                return S.supported ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.FormItem, {
                        children: [(0, a.jsx)(u.FormTitle, {
                            className: F.marginBottom8,
                            children: B.default.Messages.FORM_LABEL_TTS
                        }), (0, a.jsx)(u.FormSwitch, {
                            className: F.marginTop20,
                            value: e,
                            onChange: v.EnableTTSCommand.updateSetting,
                            children: B.default.Messages.ALLOW_TTS_COMMAND
                        })]
                    }), (0, a.jsxs)(u.FormItem, {
                        className: F.marginBottom20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: w,
                            className: F.marginBottom20,
                            children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_LABEL
                        }), (0, a.jsx)("div", {
                            className: y.ttsPreviewWrapper,
                            children: (0, a.jsx)(u.Button, {
                                color: u.ButtonColors.BRAND_NEW,
                                onClick: () => {
                                    if (s) {
                                        (0, N.stopSpeaking)(), l(!1);
                                        return
                                    }(0, N.speakText)(B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_TEST, !0, void 0, () => l(!0), () => l(!1)), l(!0)
                                },
                                children: (0, a.jsxs)(C.default, {
                                    align: C.default.Align.CENTER,
                                    children: [s ? (0, a.jsx)(O.default, {
                                        width: 24,
                                        height: 24
                                    }) : (0, a.jsx)(x.default, {
                                        width: 24,
                                        height: 24
                                    }), (0, a.jsx)("span", {
                                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_PREVIEW
                                    }), (0, a.jsx)(u.HiddenVisually, {
                                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_LABEL
                                    })]
                                })
                            })
                        }), (0, a.jsx)(u.Slider, {
                            markers: U.SPEECH_RATE_INCREMENTS,
                            initialValue: t,
                            defaultValue: 1,
                            stickToMarkers: !0,
                            onValueChange: Y,
                            onValueRender: e => "x".concat(e.toFixed(2)),
                            onMarkerRender: e => 0 === e ? (0, a.jsx)("span", {
                                className: y.ttsSliderMarker,
                                children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_SLOWER
                            }) : 10 === e ? (0, a.jsx)("span", {
                                className: y.ttsSliderMarker,
                                children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_FASTER
                            }) : 1 === e ? (0, a.jsx)("span", {
                                children: "x1.0"
                            }) : e % 1 == 0 ? "" : void 0,
                            "aria-labelledby": w
                        })]
                    })]
                }) : null
            }
        },
        250972: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return G
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("627445"),
                o = s.n(r),
                d = s("446674"),
                u = s("819855"),
                c = s("77078"),
                S = s("430713"),
                E = s("152584"),
                f = s("642950"),
                T = s("583227"),
                m = s("426902"),
                _ = s("167209"),
                g = s("363861"),
                h = s("506885"),
                I = s("305961"),
                N = s("650893"),
                p = s("102985"),
                C = s("697218"),
                A = s("145131"),
                O = s("555158"),
                x = s("37785"),
                R = s("161778"),
                M = s("387225"),
                v = s("628235"),
                D = s("913299"),
                L = s("629145"),
                P = s("969927"),
                j = s("49111"),
                b = s("935583"),
                U = s("782340"),
                B = s("374204"),
                y = s("926622");
            class F extends n.PureComponent {
                componentDidMount() {
                    let {
                        currentUser: e
                    } = this.props;
                    (0, h.default)(e.id, e.getAvatarURL(void 0, 80))
                }
                componentWillUnmount() {
                    S.default.clearBackupCodes(), (0, E.accountDetailsClose)()
                }
                renderAccountWarning() {
                    let {
                        currentUser: e
                    } = this.props;
                    if (!e.isClaimed()) {
                        let e = (0, a.jsxs)("section", {
                            children: [(0, a.jsx)("div", {
                                className: B.accountWarningBodyText,
                                children: U.default.Messages.UNCLAIMED_ACCOUNT_BODY_2
                            }), (0, a.jsx)(c.Button, {
                                look: c.ButtonLooks.INVERTED,
                                size: c.ButtonSizes.SMALL,
                                color: c.Button.Colors.RED,
                                onClick: () => m.default.openClaimAccountModal(),
                                children: U.default.Messages.CLAIM_ACCOUNT_LONG
                            })]
                        });
                        return (0, a.jsx)(c.FormNotice, {
                            type: c.FormNotice.Types.DANGER,
                            className: y.marginBottom20,
                            imageData: {
                                src: s("389671"),
                                width: 60,
                                height: 60
                            },
                            title: U.default.Messages.UNCLAIMED_ACCOUNT_TITLE,
                            body: e
                        })
                    }
                    if (null == e.email) return null;
                    if (!e.verified) {
                        let e = (0, a.jsxs)("section", {
                            children: [(0, a.jsx)("div", {
                                className: B.accountWarningBodyText,
                                children: U.default.Messages.USER_SETTINGS_UNVERIFIED_EMAIL_BODY
                            }), (0, a.jsx)(M.default, {
                                size: c.ButtonSizes.SMALL,
                                color: c.Button.Colors.PRIMARY
                            })]
                        });
                        return (0, a.jsx)(c.FormNotice, {
                            type: c.FormNotice.Types.PRIMARY,
                            className: y.marginBottom20,
                            imageData: {
                                src: s("445113"),
                                width: 60,
                                height: 60
                            },
                            title: U.default.Messages.UNVERIFIED_EMAIL_TITLE,
                            body: e
                        })
                    }
                }
                renderPomeloWarning() {
                    return this.props.shouldRenderPomeloWarning ? (0, a.jsxs)(O.default, {
                        className: B.accountWarningBodyText,
                        messageType: O.HelpMessageTypes.WARNING,
                        children: [U.default.Messages.POMELO_ACTION_NEEDED.format(), " ", "", (0, a.jsx)(x.default, {
                            className: B.noticeTextButton,
                            onClick: () => (0, g.default)(b.PomeloEntrypoints.USER_SETTINGS),
                            children: U.default.Messages.GET_STARTED
                        })]
                    }) : null
                }
                renderAccountSettings() {
                    return (0, a.jsxs)(c.FormSection, {
                        tag: c.FormTitleTags.H1,
                        title: U.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                        className: B.userSettingsAccount,
                        children: [this.renderPomeloWarning(), this.renderAccountWarning(), (0, a.jsx)(L.default, {})]
                    })
                }
                renderSecuritySettings() {
                    let {
                        backupCodes: e,
                        currentUser: t,
                        theme: n
                    } = this.props, l = (0, u.isThemeDark)(n) ? s("553847") : s("963040");
                    return (0, a.jsxs)(c.FormSection, {
                        className: i(B.userSettingsSecurity, y.marginTop40),
                        title: U.default.Messages.USER_SETTINGS_ACCOUNT_PASSWORD_AND_AUTHENTICATION,
                        tag: "h1",
                        children: [t.mfaEnabled ? (0, a.jsx)(c.FormSection, {
                            children: (0, a.jsxs)(c.FormTitle, {
                                className: i(B.isEnabled, y.marginBottom20),
                                children: [(0, a.jsx)("img", {
                                    alt: "",
                                    className: i(B.lockIcon),
                                    src: s("507822")
                                }), U.default.Messages.TWO_FA_ENABLED]
                            })
                        }) : null, (0, a.jsx)("div", {
                            children: (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                className: B.changePasswordButton,
                                onClick: () => (0, c.openModal)(e => (0, a.jsx)(P.default, {
                                    ...e,
                                    onSuccess: e.onClose
                                })),
                                children: U.default.Messages.CHANGE_PASSWORD
                            })
                        }), (0, a.jsxs)(A.default, {
                            align: A.default.Align.STRETCH,
                            children: [(0, a.jsx)(A.default.Child, {
                                wrap: !0,
                                children: (0, a.jsx)(v.default, {
                                    backupCodes: e
                                })
                            }), t.mfaEnabled ? null : (0, a.jsx)(A.default, {
                                align: A.default.Align.CENTER,
                                basis: "323px",
                                grow: 0,
                                children: (0, a.jsx)("img", {
                                    src: l,
                                    className: B.userSettingsSecurityImage,
                                    alt: ""
                                })
                            })]
                        })]
                    })
                }
                renderConfirmModals() {
                    let {
                        shouldRenderOwnedGuildsModal: e,
                        shouldRenderDeleteAccountConfirmModal: t,
                        shouldRenderDisableAccountErrorModal: s,
                        disableAccountErrorMessage: n
                    } = this.state;
                    if (e) {
                        let e = () => this.setState({
                            shouldRenderOwnedGuildsModal: !1
                        });
                        return (0, a.jsx)(c.DeclarativeConfirmModal, {
                            dismissable: !0,
                            header: U.default.Messages.DELETE_ACCOUNT_TRANSFER_OWNERSHIP,
                            confirmText: U.default.Messages.OKAY,
                            confirmButtonColor: c.ButtonColors.BRAND,
                            onCancel: e,
                            onConfirm: e,
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-md/normal",
                                children: U.default.Messages.DELETE_ACCOUNT_TRANSFER_OWNERSHIP_BODY
                            })
                        })
                    }
                    if (t) {
                        let e = () => this.setState({
                            shouldRenderDeleteAccountConfirmModal: !1
                        });
                        return (0, a.jsx)(c.DeclarativeConfirmModal, {
                            dismissable: !0,
                            header: U.default.Messages.DELETE_ACCOUNT,
                            confirmText: U.default.Messages.DELETE_ACCOUNT,
                            cancelText: U.default.Messages.CANCEL,
                            onCancel: e,
                            onConfirm: () => (0, E.disableAccount)("", !0).then(e),
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-md/normal",
                                children: U.default.Messages.DELETE_ACCOUNT_BODY
                            })
                        })
                    }
                    if (s) {
                        let e = () => this.setState({
                            shouldRenderDisableAccountErrorModal: !1,
                            disableAccountErrorMessage: null
                        });
                        return (0, a.jsx)(c.DeclarativeConfirmModal, {
                            dismissable: !0,
                            header: U.default.Messages.DELETE_ACCOUNT_ERROR,
                            confirmText: U.default.Messages.OKAY,
                            confirmButtonColor: c.ButtonColors.BRAND,
                            onCancel: e,
                            onConfirm: e,
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-md/normal",
                                children: n
                            })
                        })
                    }
                }
                render() {
                    if (this.props.hide) return (0, a.jsx)(f.default, {});
                    let {
                        currentUser: e
                    } = this.props;
                    return (0, a.jsxs)("div", {
                        children: [this.renderConfirmModals(), this.renderAccountSettings(), e.isClaimed() ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(c.FormDivider, {
                                className: y.marginTop40
                            }), this.renderSecuritySettings(), (0, a.jsx)(c.FormDivider, {
                                className: y.marginTop40
                            })]
                        }) : null, (0, a.jsx)(D.default, {
                            className: y.marginTop40,
                            currentUser: e,
                            handleDisableAccount: () => this.handleDisableAccount(!1),
                            handleDeleteAccount: () => this.handleDisableAccount(!0)
                        })]
                    })
                }
                handleDisableAccountError(e) {
                    if (e.body.code === j.AbortCodes.INVALID_PASSWORD) throw e;
                    this.setState({
                        shouldRenderDisableAccountErrorModal: !0,
                        disableAccountErrorMessage: e.body.message
                    })
                }
                handleSubmitDisableAccount(e, t) {
                    return (0, E.disableAccount)(e, t).then(j.NOOP, this.handleDisableAccountError)
                }
                handleDisableAccount() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                        {
                            currentUser: t
                        } = this.props,
                        s = I.default.getGuilds(),
                        n = Object.keys(s).filter(e => s[e].ownerId === t.id);
                    if (n.length > 0) {
                        this.setState({
                            shouldRenderOwnedGuildsModal: !0
                        });
                        return
                    }
                    t.isClaimed() ? (0, c.openModal)(t => (0, a.jsx)(T.default, {
                        ...t,
                        handleSubmit: t => this.handleSubmitDisableAccount(t, e),
                        title: e ? U.default.Messages.DELETE_ACCOUNT : U.default.Messages.DISABLE_ACCOUNT,
                        actionText: e ? U.default.Messages.DELETE_ACCOUNT : U.default.Messages.DISABLE_ACCOUNT,
                        children: e ? U.default.Messages.DELETE_ACCOUNT_BODY : U.default.Messages.DISABLE_ACCOUNT_BODY
                    })) : this.setState({
                        shouldRenderDeleteAccountConfirmModal: !0
                    })
                }
                constructor(e) {
                    super(e), this.state = {
                        disableAccountErrorMessage: null,
                        shouldRenderOwnedGuildsModal: !1,
                        shouldRenderDeleteAccountConfirmModal: !1,
                        shouldRenderDisableAccountErrorModal: !1
                    }
                }
            }
            var G = () => {
                let e = (0, d.useStateFromStores)([C.default], () => {
                        let e = C.default.getCurrentUser();
                        return o(null != e, "ConnectedUserAccountSettings: currentUser cannot be undefined"), e
                    }),
                    t = (0, d.useStateFromStores)([N.default], () => N.default.getBackupCodes()),
                    s = (0, d.useStateFromStores)([p.default], () => p.default.hidePersonalInformation),
                    n = (0, d.useStateFromStores)([R.default], () => R.default.theme),
                    l = (0, _.useIsEligibleForPomelo)();
                return (0, a.jsx)(F, {
                    theme: n,
                    currentUser: e,
                    backupCodes: t,
                    hide: s,
                    shouldRenderPomeloWarning: l
                })
            }
        },
        89563: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("9759"),
                i = s("395635"),
                r = s("162236"),
                o = s("305961"),
                d = s("701909"),
                u = s("773336"),
                c = s("845579"),
                S = s("49111"),
                E = s("782340"),
                f = s("852003"),
                T = s("926622");

            function m() {
                let e = c.ShowCurrentGame.useSetting(),
                    t = c.DefaultGuildsActivityRestricted.useSetting(),
                    s = u.isPlatformEmbedded ? E.default.Messages.SHOW_CURRENT_ACTIVITY_DESC_EMBEDDED : E.default.Messages.SHOW_CURRENT_ACTIVITY_DESC,
                    l = e => {
                        c.DefaultGuildsActivityRestricted.updateSetting(e), ! function(e) {
                            let t = () => {
                                c.ActivityRestrictedGuilds.updateSetting(e ? Object.keys(o.default.getGuilds()) : [])
                            };
                            (0, n.openModal)(e => (0, a.jsx)(n.ConfirmModal, {
                                header: E.default.Messages.USER_DM_SETTINGS_TITLE,
                                confirmText: E.default.Messages.NO_TEXT,
                                cancelText: E.default.Messages.YES_TEXT,
                                onCancel: t,
                                confirmButtonColor: n.Button.Colors.BRAND,
                                ...e,
                                children: (0, a.jsx)(n.Text, {
                                    variant: "text-md/normal",
                                    children: E.default.Messages.ACTIVITY_RESTRICTION_MODAL_DESC
                                })
                            }))
                        }(e)
                    };
                return (0, a.jsxs)(n.FormSection, {
                    className: T.marginBottom40,
                    children: [(0, a.jsx)(n.FormTitle, {
                        tag: n.FormTitleTags.H5,
                        className: T.marginBottom8,
                        children: E.default.Messages.ACTIVITY_STATUS
                    }), (0, a.jsx)(n.FormSwitch, {
                        value: e,
                        onChange: e => c.ShowCurrentGame.updateSetting(e),
                        note: s,
                        children: E.default.Messages.SHOW_CURRENT_ACTIVITY
                    }), (0, a.jsx)(n.FormSwitch, {
                        value: !t,
                        note: E.default.Messages.ACTIVITY_RESTRICTION_DEFAULT_NOTE.format({
                            helpdeskArticle: d.default.getArticleURL(S.HelpdeskArticles.ACTIVITY_STATUS_SETTINGS)
                        }),
                        onChange: e => l(!e),
                        children: E.default.Messages.ACTIVITY_RESTRICTION_DEFAULT
                    })]
                })
            }

            function _() {
                let e = c.AllowActivityPartyPrivacyFriends.useSetting(),
                    t = c.AllowActivityPartyPrivacyVoiceChannel.useSetting();
                return (0, a.jsxs)(n.FormSection, {
                    className: T.marginBottom40,
                    children: [(0, a.jsx)(n.FormTitle, {
                        tag: n.FormTitleTags.H5,
                        className: T.marginBottom8,
                        children: E.default.Messages.ACTIVITY_PARTY_PRIVACY
                    }), (0, a.jsx)(n.FormSwitch, {
                        value: e,
                        note: E.default.Messages.ACTIVITY_PARTY_PRIVACY_FRIENDS_HELP,
                        onChange: e => c.AllowActivityPartyPrivacyFriends.updateSetting(e),
                        children: E.default.Messages.ACTIVITY_PARTY_PRIVACY_FRIENDS
                    }), (0, a.jsx)(n.FormSwitch, {
                        value: t,
                        note: E.default.Messages.ACTIVITY_PARTY_PRIVACY_VOICE_CHANNEL_HELP,
                        onChange: e => c.AllowActivityPartyPrivacyVoiceChannel.updateSetting(e),
                        children: E.default.Messages.ACTIVITY_PARTY_PRIVACY_VOICE_CHANNEL
                    })]
                })
            }

            function g() {
                return (0, a.jsxs)(n.FormSection, {
                    className: T.marginBottom40,
                    children: [(0, a.jsxs)(n.FormTitle, {
                        tag: n.FormTitleTags.H5,
                        className: T.marginBottom8,
                        children: [E.default.Messages.BROADCASTING_SETTINGS, (0, a.jsx)(i.default, {
                            className: f.betaTag
                        })]
                    }), (0, a.jsx)(n.FormText, {
                        type: n.FormText.Types.DESCRIPTION,
                        className: T.marginBottom20,
                        children: E.default.Messages.BROADCASTING_SETTINGS_DESCRIPTION
                    }), (0, a.jsx)(n.FormItem, {
                        children: (0, a.jsx)(n.Button, {
                            onClick: () => (0, r.openBroadcastingPrivacySettingsModal)(),
                            size: n.ButtonSizes.SMALL,
                            children: E.default.Messages.BROADCASTING_SETTINGS_CTA
                        })
                    })]
                })
            }

            function h() {
                return (0, a.jsx)(n.FormSection, {
                    className: T.marginBottom40,
                    children: (0, a.jsx)(n.FormNotice, {
                        type: n.FormNotice.Types.PRIMARY,
                        body: E.default.Messages.USER_SETTINGS_PRIVACY_TERMS.format({
                            termsLink: S.MarketingURLs.TERMS,
                            privacyLink: S.MarketingURLs.PRIVACY
                        })
                    })
                })
            }

            function I() {
                let {
                    canBroadcast: e
                } = l.default.useExperiment({
                    location: "user_settings_activity_privacy"
                }, {
                    autoTrackExposure: !0
                });
                return (0, a.jsxs)(n.FormSection, {
                    tag: n.FormTitleTags.H1,
                    title: E.default.Messages.ACTIVITY_PRIVACY,
                    children: [(0, a.jsx)(m, {}), (0, a.jsx)(_, {}), e && (0, a.jsx)(g, {}), (0, a.jsx)(h, {})]
                })
            }
        },
        41525: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return A
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("669491"),
                r = s("77078"),
                o = s("70614"),
                d = s("898065"),
                u = s("84460"),
                c = s("655151"),
                S = s("686470"),
                E = s("167726"),
                f = s("956089"),
                T = s("306160"),
                m = s("701909"),
                _ = s("773336"),
                g = s("50885"),
                h = s("845579"),
                I = s("271445"),
                N = s("49111"),
                p = s("782340"),
                C = s("393149");

            function A() {
                let e = (0, l.useStateFromStores)([u.default], () => u.default.getIsEnabled(), []),
                    {
                        enabled: t
                    } = c.ExperimentDevelopersGetDeveloperShelf.useExperiment({
                        location: "UserSettingsAdvanced"
                    }),
                    [s] = n.useState(() => g.default.getEnableHardwareAcceleration()),
                    A = h.DisableGamesTab.useSetting(),
                    O = h.DeveloperMode.useSetting(),
                    x = h.DisableHomeAutoNav.useSetting(),
                    {
                        hasLibraryApplication: R,
                        testModeApplicationId: M
                    } = (0, l.useStateFromStoresObject)([E.default, S.default], () => ({
                        hasLibraryApplication: S.default.hasLibraryApplication(),
                        testModeApplicationId: E.default.testModeApplicationId
                    })),
                    v = n.useCallback(e => {
                        h.DisableGamesTab.updateSetting(!e)
                    }, []),
                    D = n.useCallback(e => {
                        e ? (0, r.openModal)(e => (0, a.jsx)(I.default, {
                            ...e
                        })) : o.reset()
                    }, []),
                    L = n.useCallback(e => {
                        (0, r.openModal)(t => (0, a.jsx)(r.ConfirmModal, {
                            header: p.default.Messages.SWITCH_HARDWARE_ACCELERATION,
                            confirmText: p.default.Messages.OKAY,
                            cancelText: p.default.Messages.CANCEL,
                            onConfirm: () => g.default.setEnableHardwareAcceleration(e),
                            ...t,
                            children: (0, a.jsx)(r.Text, {
                                variant: "text-sm/normal",
                                children: p.default.Messages.SWITCH_HARDWARE_ACCELERATION_BODY
                            })
                        }))
                    }, []),
                    P = n.useCallback(e => {
                        h.DisableHomeAutoNav.updateSetting(!e)
                    }, []);
                return (0, a.jsxs)(r.FormSection, {
                    tag: r.FormTitleTags.H1,
                    title: p.default.Messages.SETTINGS_ADVANCED,
                    children: [T.SUPPORTS_COPY && (0, a.jsx)(r.FormSwitch, {
                        value: O,
                        onChange: h.DeveloperMode.updateSetting,
                        note: p.default.Messages.DEVELOPER_MODE_HELP_TEXT.format({
                            apiDocsUrl: N.MarketingURLs.API_DOCS
                        }),
                        children: p.default.Messages.DEVELOPER_MODE
                    }), _.isPlatformEmbedded && (0, a.jsx)(r.FormSwitch, {
                        value: s,
                        onChange: L,
                        note: p.default.Messages.HARDWARE_ACCELERATION_HELP_TEXT,
                        children: p.default.Messages.HARDWARE_ACCELERATION
                    }), R && (0, a.jsx)(r.FormSwitch, {
                        value: !A,
                        onChange: v,
                        note: p.default.Messages.USER_SETTINGS_SHOW_LIBRARY_NOTE,
                        children: p.default.Messages.USER_SETTINGS_SHOW_LIBRARY
                    }), O && (0, a.jsx)(r.FormSwitch, {
                        value: null != M,
                        note: p.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_NOTE,
                        onChange: D,
                        children: p.default.Messages.DEVELOPER_APPLICATION_TEST_MODE
                    }), O && !t ? (0, a.jsx)(r.FormSwitch, {
                        value: e,
                        note: p.default.Messages.DEVELOPER_ACTIVITY_SHELF_NOTE,
                        onChange: d.toggleEnableDeveloperActivityShelf,
                        children: p.default.Messages.DEVELOPER_ACTIVITY_SHELF
                    }) : null, (0, a.jsx)(r.FormSwitch, {
                        value: !x,
                        note: p.default.Messages.USER_SETTINGS_HOME_AUTO_NAV_HELP_TEXT.format({
                            helpCenterLink: m.default.getArticleURL(N.HelpdeskArticles.GUILD_HOME)
                        }),
                        onChange: P,
                        children: (0, a.jsxs)("div", {
                            className: C.badgedItem,
                            children: [p.default.Messages.USER_SETTINGS_HOME_AUTO_NAV, (0, a.jsx)(f.TextBadge, {
                                text: p.default.Messages.BETA,
                                color: i.default.unsafe_rawColors.BRAND_500.css,
                                className: C.betaTag
                            })]
                        })
                    })]
                })
            }
        },
        
        415253: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return A
                }
            }), s("222007");
            


            function A() {
                
                var plugins = window.Happycord.plugins
                var u = s("77078"),
                    a = s("37983"),
                    r = s("77078"),
                    n = s("884691"),
                    d = s("77078")

                console.log(plugins)

                var pluginsjsx = []
                

                for (let plugin of plugins){
                    let children = []
                    children.push( (0,a.jsxs)(u.Text, {
                        className: "plugin-card-name",
                        variant: "text-md/bold",
                        children: plugin.title
                    }))
                    
                    
                    if (window.Happycord.pluginsLoaded.includes(plugin.id)){
                        if (window[plugin.id].Settings){
                            children.push( (0,a.jsxs)(r.Button, {
                                children:"⚙️",
                                color:r.Button.Colors.BRAND_NEW,
                                onClick: () => {
                                    try{
                                        let c = window[plugin.id].Settings(window.Happycord)
                                        window.Happycord.openModal({
                                            header:`${plugin.title} — Settings`,
                                            children:c[0],
                                            confirmText:"Save & quit",
                                            onConfirm: () => {
                                                c[1]()
                                            }
                                        })
                                    }
                                    catch (e){
                                        console.error(`[HAPPYCORD] (${plugin.id}) [REPORT TO DEVS] Settings failed to load: ${e}`)
                                    }
                                },
                            }))
                        }
                    }

                    children.push(
                        (0,a.jsxs)(r.Button, {
                            children:"Enable",
                            color:r.Button.Colors.PRIMARY,
                            onClick: () => {
                                document.cookie = `${plugin.id}=true`
                                if (!window.Happycord.pluginsEnabled.includes(plugin.id)){
                                    window.Happycord.pluginsEnabled.push(plugin.id)
                                    window.Happycord.localStorage.setItem('pluginsEnabled',JSON.stringify(window.Happycord.pluginsEnabled))
                                }
                                d.showToast(d.createToast("Enabled plugin!", d.ToastType.SUCCESS))
                                window.Happycord.loadPlugin(plugin.id)
                            },
                        }),
                    )

                    children.push( (0,a.jsxs)(r.Button, {
                        children:"Disable",
                        color:r.Button.Colors.PRIMARY,
                        onClick: () => {
                            window.Happycord.pluginsEnabled.pop(plugin.id)
                            window.Happycord.localStorage.setItem('pluginsEnabled',window.Happycord.pluginsEnabled)
                            d.showToast(d.createToast("Disabled plugin! Reload to see changes", d.ToastType.SUCCESS))
                            if (window[plugin.id].onDisable){
                                window[plugin.id].onDisable(window.Happycord)
                            }
                        },
                    })
                    )
                  
                    pluginsjsx.push((0,a.jsxs)("div",{
                        key:plugin.id,
                        style:{
                            paddingBottom:"5px"
                        },
                        className:"plugin-card",
                        children: [
                            (0,a.jsxs)("div", {
                                className: "plugin-card-header",
                                children: children 
                            }),
                            (0,a.jsxs)(u.Text, {
                                className: "plugin-card-desc",
                                variant: "text-md/normal",
                                children: plugin.description
                            })
                        ]
               
                        
                        })
         
                    )
                    pluginsjsx.push( (0,a.jsxs)("br",{}),
                    (0,a.jsxs)("br",{}),(0,a.jsxs)("br",{}),)
                }

                return (0, a.jsxs)(r.FormSection, {
                    tag: r.FormTitleTags.H1,
                    title: "HappyCord — Plugins",
                    children: pluginsjsx                    
                })
            }
        },
        4152534: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return A
                }
            }), s("222007");
            


            function A() {
                
                var themes = window.Happycord.themes
                var u = s("77078"),
                    a = s("37983"),
                    r = s("77078"),
                    n = s("884691"),
                    d = s("77078"),
                    S = s("627819")

                const themesjsx = []
                const [themes_,setThemes] = n.useState(themes.join('\n'))
                
                themesjsx.push((0,a.jsxs)(r.TextArea,{
                    style:{
                        height:"100px"
                    },
                    autoFocus:true,
                    placeholder:"Enter links for themes! (only github user content links are supported)",
                    value:themes_,
                    className: S.textArea,
                    onChange: (e) =>{
                        setThemes(e)
                        window.Happycord.themes = e.split('\n')
                        window.Happycord.localStorage.setItem('themes',JSON.stringify(e.split('\n')))
                        window.Happycord.loadThemes()
                       
                    }
                }))
                return (0, a.jsxs)(r.FormSection, {
                    tag: r.FormTitleTags.H1,
                    title: "HappyCord — Themes",
                    children: themesjsx                    
                })
            }
        },
        
        59574: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return W
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("151426"),
                d = s("819855"),
                u = s("77078"),
                c = s("452804"),
                S = s("79112"),
                E = s("485328"),
                f = s("180748"),
                T = s("206230"),
                m = s("951212"),
                _ = s("714657"),
                g = s("10641"),
                h = s("692038"),
                I = s("815297"),
                N = s("574073"),
                p = s("291655"),
                C = s("697218"),
                A = s("145131"),
                O = s("476765"),
                x = s("773336"),
                R = s("161778"),
                M = s("168973"),
                v = s("845579"),
                D = s("403338"),
                L = s("449550"),
                P = s("49111"),
                j = s("994428"),
                b = s("894488"),
                U = s("782340"),
                B = s("358237"),
                y = s("926622");
            let F = {
                    COZY: "cozy",
                    COMPACT: "compact"
                },
                G = (0, O.uid)(),
                k = (0, O.uid)(),
                H = (0, O.uid)(),
                w = "1337",
                V = e => {
                    let t = 0;
                    return [(0, h.createMessageRecord)({
                        ...(0, I.default)({
                            channelId: w,
                            content: U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_1
                        }),
                        state: P.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, h.createMessageRecord)({
                        ...(0, I.default)({
                            channelId: w,
                            content: (0, d.isThemeDark)(e) ? U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_2_DARK : U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_2_LIGHT
                        }),
                        state: P.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, h.createMessageRecord)({
                        ...(0, I.default)({
                            channelId: w,
                            content: U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_3
                        }),
                        state: P.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, h.createMessageRecord)({
                        ...(0, I.default)({
                            channelId: w,
                            content: U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_4
                        }),
                        state: P.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, h.createMessageRecord)({
                        ...(0, I.default)({
                            channelId: w,
                            content: U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_5
                        }),
                        state: P.MessageStates.SENT,
                        id: "".concat(t)
                    })]
                };
            class Y extends n.Component {
                renderZoomSlider() {
                    return x.isPlatformEmbedded ? (0, a.jsxs)(u.FormItem, {
                        className: y.marginTop20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: G,
                            tag: u.FormTitleTags.H5,
                            className: y.marginBottom8,
                            children: U.default.Messages.ACCESSIBILITY_ZOOM_LEVEL_LABEL
                        }), (0, a.jsx)(u.Slider, {
                            className: i(y.marginTop20, y.marginBottom4),
                            initialValue: this.props.zoom,
                            defaultValue: P.Accessibility.ZOOM_DEFAULT,
                            markers: P.Accessibility.ZOOM_SCALES,
                            stickToMarkers: !0,
                            onValueChange: this.handleZoomChange,
                            onValueRender: this.handleSliderRender,
                            "aria-labelledby": G
                        }), (0, a.jsx)(u.FormText, {
                            type: u.FormText.Types.DESCRIPTION,
                            children: U.default.Messages.USER_SETTINGS_APPEARANCE_ZOOM_TIP.format({
                                modKey: E.default.modKey
                            })
                        })]
                    }) : null
                }
                renderFontScaleSlider() {
                    return (0, a.jsxs)(u.FormItem, {
                        className: y.marginTop20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: k,
                            tag: u.FormTitleTags.H5,
                            className: y.marginBottom8,
                            children: U.default.Messages.ACCESSIBILITY_FONT_SCALING_LABEL
                        }), (0, a.jsx)(A.default, {
                            align: A.default.Align.CENTER,
                            children: (0, a.jsx)(u.Slider, {
                                className: i(y.marginTop20, y.marginBottom4),
                                initialValue: this.props.fontSize,
                                defaultValue: P.Accessibility.FONT_SIZE_DEFAULT,
                                markers: P.Accessibility.FONT_SIZES,
                                stickToMarkers: !0,
                                onValueChange: this.handleFontSizeChange,
                                onValueRender: this.handleSliderRenderPX,
                                onMarkerRender: this.handleSliderRenderPX,
                                getAriaValueText: this.handleSliderValueText,
                                "aria-labelledby": k
                            })
                        })]
                    })
                }
                renderMessageGroupSpacingSlider() {
                    let {
                        messageDisplayCompact: e,
                        messageGroupSpacing: t
                    } = this.props;
                    return (0, a.jsxs)(u.FormItem, {
                        className: y.marginTop20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: H,
                            tag: u.FormTitleTags.H5,
                            className: y.marginBottom8,
                            children: U.default.Messages.ACCESSIBILITY_MESSAGE_GROUP_SPACING
                        }), (0, a.jsx)(u.Slider, {
                            className: i(y.marginTop20, y.marginBottom4),
                            initialValue: t,
                            defaultValue: e ? b.DEFAULT_COMPACT_SPACING : b.DEFAULT_COZY_SPACING,
                            markers: b.MESSAGE_GROUP_SPACING,
                            stickToMarkers: !0,
                            onValueChange: this.handleMessageSpacingChange,
                            onValueRender: this.handleSliderRenderPX,
                            onMarkerRender: this.handleSliderRenderPX,
                            getAriaValueText: this.handleSliderValueText,
                            "aria-labelledby": H
                        })]
                    })
                }
                renderPreview() {
                    let {
                        messageDisplayCompact: e,
                        theme: t,
                        messageGroupSpacing: s,
                        hideSimpleEmbedContent: n
                    } = this.props, l = (0, d.isThemeDark)(t) ? this.darkMessages : this.lightMessages;
                    return (0, a.jsx)(u.FocusBlock, {
                        children: (0, a.jsx)(u.Card, {
                            className: i(B.preview, y.marginBottom40, e ? B.compactPreview : void 0, "group-spacing-".concat(null != s ? s : e ? b.DEFAULT_COMPACT_SPACING : b.DEFAULT_COZY_SPACING)),
                            outline: !0,
                            "aria-hidden": !0,
                            children: l.map((t, s) => (0, a.jsx)(p.default, {
                                author: (0, N.getMessageAuthor)(t),
                                message: t,
                                compact: e,
                                isGroupStart: s % 2 == 0,
                                className: 0 === s ? B.firstMessage : void 0,
                                hideSimpleEmbedContent: n
                            }, t.id))
                        })
                    })
                }
                renderTheme() {
                    let {
                        theme: e,
                        useForcedColors: t,
                        darkSidebar: s,
                        gradientPreset: n
                    } = this.props;
                    return t ? (0, a.jsx)(u.FormItem, {
                        className: i(y.marginTop8, y.marginBottom40),
                        title: (0, a.jsx)("div", {
                            className: B.themeTitle,
                            children: (0, a.jsx)("div", {
                                className: B.title,
                                children: U.default.Messages.THEME
                            })
                        }),
                        children: (0, a.jsx)(u.FormText, {
                            type: u.FormText.Types.DEFAULT,
                            className: B.forcedColorsWarning,
                            children: (0, m.canEnableForcedColors)() ? U.default.Messages.THEME_DISABLED_FOR_CONTRAST_SYNC.format({
                                onClick: () => {
                                    S.default.open(P.UserSettingsSections.ACCESSIBILITY)
                                }
                            }) : U.default.Messages.THEME_DISABLED_FOR_FORCED_COLORS
                        })
                    }) : (0, a.jsxs)(u.FormItem, {
                        className: y.marginTop8,
                        title: (0, a.jsxs)("div", {
                            className: B.themeTitle,
                            children: [(0, a.jsx)("div", {
                                className: B.title,
                                children: U.default.Messages.THEME
                            }), (0, a.jsx)(D.ClientThemesSidebarButton, {})]
                        }),
                        children: [(0, a.jsx)(D.UserSettingsAppearanceClientThemes, {}), (0, a.jsx)(L.UserSettingsAppearanceInAppIcon, {}), (0, a.jsx)(u.FormSwitch, {
                            value: s && (0, d.isThemeLight)(e) && !t,
                            disabled: e !== P.ThemeTypes.LIGHT || t || null != n,
                            onChange: this.handleDarkSidebarChecked,
                            className: y.marginTop20,
                            children: U.default.Messages.ACCESSIBILITY_DARK_SIDEBAR
                        })]
                    })
                }
                renderDisplayMode() {
                    return (0, a.jsxs)(u.FormItem, {
                        title: U.default.Messages.MESSAGE_DISPLAY_MODE_LABEL,
                        className: y.marginTop8,
                        children: [(0, a.jsx)(u.RadioGroup, {
                            options: [{
                                name: U.default.Messages.COZY_MODE,
                                value: F.COZY
                            }, {
                                name: U.default.Messages.COMPACT_MODE,
                                value: F.COMPACT
                            }],
                            onChange: this.handleMessageDisplayModeChange,
                            value: this.props.messageDisplayCompact ? F.COMPACT : F.COZY
                        }), (0, a.jsx)(u.FormSwitch, {
                            value: this.props.messageDisplayCompact && this.props.displayCompactAvatars,
                            disabled: !this.props.messageDisplayCompact,
                            onChange: this.handleDisplayCompactAvatarsChanged,
                            className: y.marginTop20,
                            children: U.default.Messages.DISPLAY_COMPACT_AVATARS
                        })]
                    })
                }
                handleDarkSidebarChecked() {
                    (0, f.toggleDarkSidebar)()
                }
                renderScalingAndSpacing() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [this.renderFontScaleSlider(), this.renderMessageGroupSpacingSlider(), this.renderZoomSlider(), (0, a.jsx)(u.FormDivider, {
                            className: y.marginTop20
                        })]
                    })
                }
                render() {
                    return (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H1,
                        title: U.default.Messages.APPEARANCE,
                        children: [this.renderPreview(), this.renderTheme(), this.renderDisplayMode(), this.renderScalingAndSpacing(), (0, a.jsx)(u.Text, {
                            variant: "text-md/normal",
                            className: y.marginTop20,
                            children: U.default.Messages.APPEARANCE_SETTINGS_ACCESSIBILITY_LINK.format({
                                onAccessibilityClick() {
                                    S.default.open(P.UserSettingsSections.ACCESSIBILITY)
                                }
                            })
                        })]
                    })
                }
                handleSliderRender(e) {
                    return "".concat(e.toFixed(0), "%")
                }
                handleSliderRenderPX(e) {
                    return "".concat(e.toFixed(0), "px")
                }
                handleSliderValueText(e) {
                    return U.default.Messages.PIXEL_VALUE_A11Y_TEXT.format({
                        value: e
                    })
                }
                handleFontSizeChange(e) {
                    (0, f.setFontSize)(e)
                }
                handleMessageSpacingChange(e) {
                    switch (e) {
                        case 0:
                        case 4:
                        case 8:
                        case 16:
                        case 24:
                            (0, f.setMessageGroupSpacing)(e)
                    }
                }
                handleZoomChange(e) {
                    (0, f.setZoom)(e)
                }
                constructor(...e) {
                    super(...e), this.darkMessages = V(P.ThemeTypes.DARK), this.lightMessages = V(P.ThemeTypes.LIGHT), this.handleDisplayCompactAvatarsChanged = e => {
                        c.default.updatedUnsyncedSettings({
                            displayCompactAvatars: e
                        })
                    }, this.handleMessageDisplayModeChange = e => {
                        let {
                            value: t
                        } = e;
                        v.MessageDisplayCompact.updateSetting(t === F.COMPACT), (0, f.setMessageGroupSpacing)()
                    }
                }
            }

            function W() {
                let e = v.MessageDisplayCompact.useSetting(),
                    t = v.InlineEmbedMedia.useSetting(),
                    s = v.RenderEmbeds.useSetting(),
                    l = v.ClientThemeSettings.useSetting();
                n.useEffect(() => {
                    (0, g.markDismissibleContentAsDismissed)(o.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE, {
                        dismissAction: j.ContentDismissActionType.AUTO,
                        forceTrack: !0
                    }), (0, g.markDismissibleContentAsDismissed)(o.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE, {
                        dismissAction: j.ContentDismissActionType.AUTO,
                        forceTrack: !0
                    }), (0, g.markDismissibleContentAsDismissed)(o.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_COACHMARK, {
                        dismissAction: j.ContentDismissActionType.AUTO,
                        forceTrack: !0
                    })
                }, []);
                let i = (0, r.useStateFromStoresObject)([R.default, M.default, T.default, C.default, _.default], () => {
                    var e, t;
                    return {
                        theme: R.default.theme,
                        useForcedColors: T.default.useForcedColors,
                        useSystemTheme: M.default.useSystemTheme,
                        darkSidebar: R.default.darkSidebar,
                        fontSize: T.default.fontSize,
                        zoom: T.default.zoom,
                        messageGroupSpacing: T.default.messageGroupSpacing,
                        displayCompactAvatars: M.default.displayCompactAvatars,
                        isStaff: null !== (t = null === (e = C.default.getCurrentUser()) || void 0 === e ? void 0 : e.isStaff) && void 0 !== t && t,
                        gradientPreset: _.default.gradientPreset
                    }
                });
                return (0, a.jsx)(Y, {
                    messageDisplayCompact: e,
                    hideSimpleEmbedContent: t && s,
                    clientTheme: l,
                    ...i
                })
            }
        },
        403338: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                UserSettingsAppearanceClientThemes: function() {
                    return M
                },
                ClientThemesSidebarButton: function() {
                    return v
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("151426"),
                r = s("77078"),
                o = s("54239"),
                d = s("812204"),
                u = s("685665"),
                c = s("32531"),
                S = s("714657"),
                E = s("648114"),
                f = s("10641"),
                T = s("154889"),
                m = s("917247"),
                _ = s("956597"),
                g = s("635956"),
                h = s("632892"),
                I = s("599110"),
                N = s("49111"),
                p = s("994428"),
                C = s("646718"),
                A = s("782340"),
                O = s("415341"),
                x = s("926622");
            let R = () => {
                    (0, f.markDismissibleContentAsDismissed)(i.DismissibleContent.CLIENT_THEMES_SPARKLE_PREVIEW, {
                        dismissAction: p.ContentDismissActionType.PRIMARY,
                        forceTrack: !0
                    }), (0, c.openEditor)(), (0, o.popLayer)()
                },
                M = () => {
                    var e, t;
                    let {
                        analyticsLocations: s
                    } = (0, u.default)(d.default.USER_SETTINGS), i = (0, l.useStateFromStores)([S.default], () => S.default.isPreview), o = (null === (t = (0, m.usePremiumTrialOffer)()) || void 0 === t ? void 0 : null === (e = t.subscription_trial) || void 0 === e ? void 0 : e.sku_id) === C.PremiumSubscriptionSKUs.TIER_2, c = (0, T.usePremiumDiscountOffer)(), f = (0, T.discountOfferHasTier)(c, C.PremiumSubscriptionSKUs.TIER_2);
                    return n.useEffect(() => {
                        i && I.default.track(N.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                            type: C.PremiumUpsellTypes.PREMIUM_CLIENT_THEME_TRY_IT_OUT,
                            location_stack: s
                        })
                    }, [i, s]), (0, a.jsxs)("div", {
                        children: [(0, a.jsxs)(E.default, {
                            type: E.ThemeSelectionGroupType.SETTINGS,
                            children: [(0, a.jsx)(E.default.Basic, {
                                className: O.basicThemeSelectors
                            }), (0, a.jsxs)(h.default, {
                                className: O.featureBorder,
                                isShown: i,
                                type: h.FeatureBorderTypes.PREMIUM,
                                children: [(0, a.jsx)(E.default.Gradient, {
                                    disabled: i,
                                    renderCTAButtons: () => !i || o ? null : (0, a.jsxs)("div", {
                                        className: O.tryItOutButtons,
                                        children: [(0, a.jsx)(r.Button, {
                                            color: r.Button.Colors.PRIMARY,
                                            onClick: () => R(),
                                            children: A.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_THEME_TITLE
                                        }), (0, a.jsx)(g.default, {
                                            subscriptionTier: C.PremiumSubscriptionSKUs.TIER_2,
                                            buttonText: f ? A.default.Messages.PREMIUM_DISCOUNT_CTA.format({
                                                percent: null == c ? void 0 : c.discount.amount
                                            }) : A.default.Messages.USER_SETTINGS_CUSTOMIZATION_UPSELL,
                                            className: O.premiumCta
                                        })]
                                    })
                                }), o && i && (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(r.Button, {
                                        className: O.previewThemeButtonWide,
                                        color: r.Button.Colors.PRIMARY,
                                        onClick: () => R(),
                                        children: A.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_THEME_TITLE
                                    }), (0, a.jsx)("div", {
                                        className: O.premiumTier2Divider
                                    }), (0, a.jsx)(_.default, {
                                        type: C.PremiumUpsellTypes.PREMIUM_CLIENT_THEME_SETTINGS_UPSELL,
                                        subscriptionTier: C.PremiumSubscriptionSKUs.TIER_2
                                    })]
                                })]
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: x.marginTop20
                        })]
                    })
                },
                v = () => {
                    let e = (0, l.useStateFromStores)([S.default], () => S.default.isPreview);
                    return e ? null : (0, a.jsx)(r.Button, {
                        size: r.ButtonSizes.SMALL,
                        onClick: () => R(),
                        children: A.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_THEMES_TITLE
                    })
                }
        },
        449550: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                UserSettingsAppearanceInAppIcon: function() {
                    return N
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("913144"),
                o = s("54239"),
                d = s("812204"),
                u = s("685665"),
                c = s("805199"),
                S = s("433724"),
                E = s("635956"),
                f = s("599110"),
                T = s("49111"),
                m = s("646718"),
                _ = s("782340"),
                g = s("393842"),
                h = s("926622");
            let I = () => {
                    r.default.dispatch({
                        type: "APP_ICON_EDITOR_OPEN"
                    }), (0, o.popLayer)()
                },
                N = () => {
                    let {
                        analyticsLocations: e
                    } = (0, u.default)(d.default.USER_SETTINGS), t = (0, l.useStateFromStores)([c.default], () => c.default.isUpsellPreview);
                    return n.useEffect(() => {
                        t && f.default.track(T.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                            type: m.PremiumUpsellTypes.APP_ICON_UPSELL,
                            location_stack: e
                        })
                    }, []), (0, a.jsxs)("div", {
                        className: g.selectionGroup,
                        children: [(0, a.jsx)(S.default, {
                            disabled: t,
                            renderCTAButtons: () => (0, a.jsxs)("div", {
                                className: g.tryItOutButtons,
                                children: [(0, a.jsx)(i.Button, {
                                    color: t ? i.Button.Colors.PRIMARY : i.Button.Colors.BRAND,
                                    onClick: () => I(),
                                    children: _.default.Messages.APP_ICON_PREVIEW_TITLE
                                }), t ? (0, a.jsx)(E.default, {
                                    subscriptionTier: m.PremiumSubscriptionSKUs.TIER_2,
                                    buttonText: _.default.Messages.USER_SETTINGS_CUSTOMIZATION_UPSELL
                                }) : null]
                            })
                        }), (0, a.jsx)(i.FormDivider, {
                            className: h.marginTop20
                        })]
                    })
                }
        },
        602806: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return P
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("776466"),
                u = s("79112"),
                c = s("642950"),
                S = s("135230"),
                E = s("550766"),
                f = s("191225"),
                T = s("29479"),
                m = s("250404"),
                _ = s("102985"),
                g = s("941886"),
                h = s("145131"),
                I = s("266926"),
                N = s("315102"),
                p = s("161778"),
                C = s("101787"),
                A = s("216503"),
                O = s("49111"),
                x = s("782340"),
                R = s("799068"),
                M = s("926622");
            let v = r.default.connectStores([p.default], () => ({
                theme: p.default.theme
            }))(g.default);

            function D(e) {
                let {
                    application: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: R.twoWayWarning,
                    children: [(0, a.jsx)(I.default, {
                        className: R.twoWayWarningIcon
                    }), (0, a.jsx)(o.Text, {
                        color: "text-normal",
                        variant: "text-sm/medium",
                        children: x.default.Messages.AUTHORIZED_APP_IS_CONNECTED_ACCOUNT.format({
                            applicationName: t.name,
                            onConnectionPress: () => u.default.setSection(O.AnalyticsSections.SETTINGS_CONNECTIONS)
                        })
                    })]
                })
            }
            let L = e => {
                let {
                    scopes: t,
                    application: s,
                    onDelete: n
                } = e, l = () => {
                    let e = x.default.Messages.DELETE_APP_CONFIRM_MSG;
                    return (0, C.default)(s.id) && (e = (0, a.jsxs)(a.Fragment, {
                        children: [e, (0, a.jsx)(A.default, {
                            className: R.infoBox,
                            children: x.default.Messages.AUTHORIZED_APP_IS_CONNECTED_ACCOUNT_DISCONNECT_WARNING.format({
                                applicationName: s.name
                            })
                        })]
                    })), (0, o.openModal)(t => (0, a.jsx)(S.default, {
                        title: x.default.Messages.DEAUTHORIZE_APP,
                        body: e,
                        confirmText: x.default.Messages.DEAUTHORIZE,
                        cancelText: x.default.Messages.CANCEL,
                        onConfirm: n,
                        ...t
                    }))
                }, r = (0, C.useShouldWarnAuthorizedAppTwoWay)(s.id);
                return (0, a.jsx)(o.Card, {
                    className: i(R.authedApp, M.marginBottom8),
                    outline: !0,
                    children: (0, a.jsxs)(o.HeadingLevel, {
                        component: (() => {
                            let e = N.default.getApplicationIconURL({
                                    id: s.id,
                                    icon: s.icon
                                }),
                                t = null != e ? (0, a.jsx)(h.default.Child, {
                                    className: R.appAvatar,
                                    grow: 0,
                                    children: (0, a.jsx)("img", {
                                        src: e,
                                        alt: ""
                                    })
                                }) : null;
                            return (0, a.jsxs)(h.default, {
                                className: i(R.header, M.marginBottom20),
                                children: [(0, a.jsxs)(h.default, {
                                    className: R.headerInfo,
                                    children: [t, (0, a.jsx)(h.default.Child, {
                                        children: (0, a.jsx)(o.Heading, {
                                            variant: "text-sm/semibold",
                                            children: s.name
                                        })
                                    })]
                                }), (0, a.jsx)(h.default.Child, {
                                    wrap: !0,
                                    grow: 0,
                                    children: (0, a.jsx)(o.Button, {
                                        className: R.deleteApp,
                                        color: o.ButtonColors.RED,
                                        look: o.ButtonLooks.OUTLINED,
                                        size: o.ButtonSizes.SMALL,
                                        onClick: l,
                                        children: x.default.Messages.DEAUTHORIZE
                                    })
                                })]
                            })
                        })(),
                        children: [(() => {
                            if (null != s.description && "" !== s.description) return (0, a.jsx)(o.FormItem, {
                                faded: !0,
                                title: x.default.Messages.ABOUT_THIS_APP,
                                children: (0, a.jsx)(o.FormText, {
                                    children: s.description
                                })
                            })
                        })(), (() => {
                            let e = t.map(e => (0, a.jsxs)("li", {
                                className: i(R.permission, M.marginTop8),
                                children: [(0, a.jsx)("i", {
                                    className: R.permissionCheckmark
                                }), (0, a.jsx)(o.FormText, {
                                    children: (0, T.getScopeName)(e, t)
                                })]
                            }, e));
                            if (e.length > 0) return (0, a.jsx)(o.FormItem, {
                                faded: !0,
                                title: x.default.Messages.PERMISSIONS,
                                className: M.marginTop20,
                                children: (0, a.jsx)("ul", {
                                    children: e
                                })
                            })
                        })(), r && (0, a.jsx)(D, {
                            application: s
                        })]
                    })
                })
            };
            var P = () => {
                let e = (0, r.useStateFromStores)([_.default], () => _.default.hidePersonalInformation),
                    t = (0, r.useStateFromStores)([m.default], () => m.default.getApps()),
                    l = (0, r.useStateFromStores)([f.default], () => f.default.getSelfEmbeddedActivities());
                n.useEffect(() => {
                    d.default.fetch()
                }, []);
                let i = e => {
                        let {
                            id: t,
                            application: s
                        } = e;
                        d.default.delete(t);
                        let a = l.get(s.id);
                        null != a && (0, E.stopEmbeddedActivity)({
                            channelId: a.channelId,
                            applicationId: s.id
                        })
                    },
                    u = () => (0, a.jsxs)(v, {
                        className: R.marginTop20,
                        children: [(0, a.jsx)(g.EmptyStateImage, {
                            darkSrc: s("541956"),
                            lightSrc: s("301037"),
                            width: 380,
                            height: 282
                        }), (0, a.jsx)(g.EmptyStateText, {
                            note: x.default.Messages.NO_AUTHORIZED_APPS_NOTE,
                            children: x.default.Messages.NO_AUTHORIZED_APPS
                        })]
                    });
                return e ? (0, a.jsx)(c.default, {}) : (0, a.jsx)(o.FormSection, {
                    tag: o.FormTitleTags.H1,
                    title: x.default.Messages.AUTHORIZED_APPS,
                    children: (0, a.jsx)(o.HeadingLevel, {
                        component: (0, a.jsx)(o.FormNotice, {
                            className: M.marginBottom40,
                            type: o.CardTypes.PRIMARY,
                            title: x.default.Messages.APPLICATIONS_AND_CONNECTIONS,
                            body: x.default.Messages.APPLICATIONS_AND_CONNECTIONS_BODY
                        }),
                        children: null == t ? (0, a.jsx)(o.Spinner, {
                            className: M.marginTop20,
                            type: o.Spinner.Type.SPINNING_CIRCLE
                        }) : 0 === t.length ? u() : t.sort((e, t) => e.application.name.localeCompare(t.application.name)).map(e => (0, a.jsx)(L, {
                            onDelete: () => i(e),
                            ...e
                        }, e.id))
                    })
                })
            }
        },
        462506: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return x
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("627445"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("913144"),
                u = s("850068"),
                c = s("79112"),
                S = s("642950"),
                E = s("404515"),
                f = s("87641"),
                T = s("245187"),
                m = s("102985"),
                _ = s("697218"),
                g = s("160299"),
                h = s("357957"),
                I = s("521012"),
                N = s("915639"),
                p = s("49111"),
                C = s("782340"),
                A = s("952984");
            class O extends n.PureComponent {
                componentDidMount() {
                    d.default.wait(() => {
                        u.fetchPaymentSources(), u.fetchSubscriptions()
                    })
                }
                handleRedemptionRedirect() {
                    c.default.setSection(p.UserSettingsSections.INVENTORY)
                }
                render() {
                    let {
                        syncing: e,
                        hide: t,
                        paymentSources: s,
                        defaultPaymentSourceId: n,
                        locale: l,
                        premiumSubscription: i,
                        isRemovingPaymentSource: r,
                        isUpdatingPaymentSource: d
                    } = this.props;
                    return t ? (0, a.jsx)(S.default, {}) : (0, a.jsxs)("div", {
                        className: A.userSettingsBilling,
                        children: [e && 0 === Object.keys(s).length ? (0, a.jsx)("div", {
                            className: A.syncing,
                            children: (0, a.jsx)(o.Spinner, {})
                        }) : (0, a.jsx)(f.default, {
                            paymentSources: s,
                            defaultPaymentSourceId: n,
                            premiumSubscriptionPaymentSourceId: null != i && i.status !== p.SubscriptionStatusTypes.CANCELED ? i.paymentSourceId : null,
                            locale: l,
                            removing: r,
                            submitting: d
                        }), (0, a.jsx)("div", {
                            className: A.paymentHistory,
                            children: (0, a.jsxs)(o.HeadingLevel, {
                                component: (0, a.jsx)(o.FormTitle, {
                                    tag: "h1",
                                    children: C.default.Messages.BILLING_PAYMENT_HISTORY
                                }),
                                children: [(0, a.jsx)(T.BlockedPaymentsWarning, {}), (0, a.jsx)(E.default, {
                                    locale: l
                                })]
                            })
                        }), (0, a.jsx)(o.Card, {
                            className: A.codeRedemptionRedirect,
                            type: o.Card.Types.CUSTOM,
                            children: C.default.Messages.BILLING_CODE_REDEMPTION_REDIRECT.format({
                                onClick: this.handleRedemptionRedirect
                            })
                        })]
                    })
                }
            }

            function x() {
                let e = (0, r.useStateFromStoresObject)([N.default, g.default, h.default, _.default, m.default, I.default], () => {
                    let e = I.default.getPremiumTypeSubscription(),
                        t = _.default.getCurrentUser();
                    return i(null != t, "UserSettingsBilling: currentUser cannot be undefined"), {
                        locale: N.default.locale,
                        hide: m.default.enabled,
                        isClaimed: t.isClaimed(),
                        isVerified: t.verified,
                        premiumSubscription: e,
                        defaultPaymentSourceId: h.default.defaultPaymentSourceId,
                        paymentSources: h.default.paymentSources,
                        syncing: g.default.isSyncing,
                        isRemovingPaymentSource: g.default.isRemovingPaymentSource,
                        isUpdatingPaymentSource: g.default.isUpdatingPaymentSource
                    }
                });
                return (0, a.jsx)(O, {
                    ...e
                })
            }
        },
        500517: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return $
                }
            }), s("222007"), s("424973"), s("506083");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("151426"),
                d = s("669491"),
                u = s("819855"),
                c = s("77078"),
                S = s("913144"),
                E = s("619340"),
                f = s("642950"),
                T = s("264044"),
                m = s("135230"),
                _ = s("841098"),
                g = s("376556"),
                h = s("572943"),
                I = s("535013"),
                N = s("816499"),
                p = s("926994"),
                C = s("10641"),
                A = s("47319"),
                O = s("305961"),
                x = s("677099"),
                R = s("102985"),
                M = s("941886"),
                v = s("931138"),
                D = s("476263"),
                L = s("945330"),
                P = s("772280"),
                j = s("486952"),
                b = s("956089"),
                U = s("599110"),
                B = s("701909"),
                y = s("915639"),
                F = s("333562"),
                G = s("216503"),
                k = s("187451"),
                H = s("470781"),
                w = s("49111"),
                V = s("214509"),
                Y = s("994428"),
                W = s("782340"),
                K = s("521788"),
                z = s("926622");
            let Q = e => {
                var t, s;
                let n, {
                        integration: l
                    } = e,
                    {
                        isJoining: i,
                        joinErrorMessage: o,
                        showJoinErrorMessage: d
                    } = (0, r.useStateFromStoresObject)([A.default], () => ({
                        isJoining: A.default.isJoining(l.id),
                        joinErrorMessage: "" === A.default.joinErrorMessage(l.id) ? W.default.Messages.ERROR : A.default.joinErrorMessage(l.id),
                        showJoinErrorMessage: void 0 !== A.default.joinErrorMessage(l.id)
                    }), [l.id]),
                    u = null != (0, r.useStateFromStores)([O.default], () => O.default.getGuild(l.guild.id), [l.guild.id]);
                return !u && (n = (0, a.jsx)(c.Button, {
                    size: c.ButtonSizes.SMALL,
                    onClick: function() {
                        E.default.joinServer(l.id, () => {})
                    },
                    disabled: i,
                    children: (0, a.jsx)("span", {
                        children: i ? W.default.Messages.JOINING_GUILD : W.default.Messages.JOIN_GUILD
                    })
                })), (0, a.jsxs)("div", {
                    className: K.integrationWrapper,
                    children: [(0, a.jsxs)("div", {
                        className: K.integration,
                        children: [(0, a.jsx)(D.default, {
                            size: D.default.Sizes.SMALL,
                            guild: l.guild,
                            className: K.guildIcon
                        }), (0, a.jsxs)("div", {
                            className: K.integrationInner,
                            children: [(0, a.jsx)(c.Text, {
                                variant: "text-md/semibold",
                                color: "header-primary",
                                children: l.guild.toString()
                            }), (0, a.jsx)(c.Anchor, {
                                href: null === (s = g.default.get(l.type)) || void 0 === s ? void 0 : null === (t = s.getPlatformUserUrl) || void 0 === t ? void 0 : t.call(s, l.account),
                                children: (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    children: l.account.name
                                })
                            })]
                        }), n]
                    }), d && (0, a.jsx)(c.Text, {
                        variant: "text-xs/normal",
                        color: "text-danger",
                        className: K.integrationError,
                        children: o
                    })]
                })
            };

            function q(e) {
                var t, s, l;
                let i, r, o, {
                        onDisconnect: S,
                        account: f,
                        theme: T,
                        locale: _
                    } = e,
                    [C, A] = n.useState(f.friendSync),
                    [O, x] = n.useState(f.visibility),
                    [R, M] = n.useState(f.metadataVisibility),
                    [D, P] = n.useState(f.showActivity),
                    [U, y] = n.useState(null),
                    [Y, z] = n.useState(null),
                    [q, Z] = n.useState(!1),
                    [X, J] = n.useState([]),
                    $ = (0, h.useLegacyPlatformType)(f.type),
                    ee = g.default.get($);
                n.useEffect(() => {
                    A(f.friendSync), x(f.visibility), M(f.metadataVisibility), P(f.showActivity)
                }, [f]), n.useEffect(() => {
                    !1 !== f.verified && (null != U && (x(U), E.default.setVisibility(f.type, f.id, U), y(null)), null != Y && (M(Y), E.default.setMetadataVisibility(f.type, f.id, Y), z(null)))
                }, [f]);

                function et() {
                    (0, p.default)(f.type, "User Settings")
                }

                function es() {
                    let e = g.default.get(f.type),
                        t = W.default.Messages.DISCONNECT_ACCOUNT_BODY;
                    (0, F.default)(f) && (t = (0, a.jsxs)(a.Fragment, {
                        children: [t, (0, a.jsx)(G.default, {
                            className: K.infoBox,
                            children: W.default.Messages.CONNECTED_ACCOUNT_IS_AUTHORIZED_APP_DISCONNECT_WARNING.format({
                                platformName: e.name
                            })
                        })]
                    })), (0, c.openModal)(s => (0, a.jsx)(m.default, {
                        title: W.default.Messages.DISCONNECT_ACCOUNT_TITLE.format({
                            name: e.name
                        }),
                        body: t,
                        confirmText: W.default.Messages.DISCONNECT_ACCOUNT,
                        cancelText: W.default.Messages.CANCEL,
                        onConfirm: S,
                        ...s
                    }))
                }

                function ea(e) {
                    let {
                        verified: t
                    } = f, s = e ? 1 : 0;
                    if (e && !t) {
                        y(s), (0, p.default)(f.type, "User Settings");
                        return
                    }
                    x(s), E.default.setVisibility(f.type, f.id, s)
                }

                function en(e) {
                    let {
                        verified: t
                    } = f, s = e ? 1 : 0;
                    if (e && !t) {
                        z(s), (0, p.default)(f.type, "User Settings");
                        return
                    }
                    M(s), E.default.setMetadataVisibility(f.type, f.id, s)
                }

                function el(e) {
                    A(e), E.default.setFriendSync(f.type, f.id, e)
                }

                function ei(e) {
                    P(e), E.default.setShowActivity(f.type, f.id, e)
                }
                return (0, a.jsxs)("div", {
                    className: K.connection,
                    children: [function(e) {
                        var t;
                        let s = g.default.get(e.type),
                            n = g.default.get($),
                            l = null !== (t = e.metadata) && void 0 !== t ? t : {},
                            i = "1" === l[V.MetadataFields.TWITTER_VERIFIED],
                            r = null;
                        return s.type === w.PlatformTypes.TWITTER && i && (r = (0, a.jsx)(c.Tooltip, {
                            text: W.default.Messages.CONNECTION_VERIFIED_ON_TWITTER,
                            children: e => (0, a.jsx)(v.default, {
                                ...e,
                                className: K.connectionAccountLabelVerified,
                                color: d.default.unsafe_rawColors.TWITTER.css,
                                children: (0, a.jsx)(j.default, {
                                    color: d.default.unsafe_rawColors.WHITE_500.css
                                })
                            })
                        })), (0, a.jsxs)("div", {
                            className: K.connectionHeader,
                            children: [(0, a.jsx)("img", {
                                alt: n.name,
                                className: K.connectionIcon,
                                src: (0, u.isThemeDark)(T) ? n.icon.darkSVG : n.icon.lightSVG
                            }), (0, a.jsxs)("div", {
                                children: [(0, a.jsx)(c.Text, {
                                    color: "header-primary",
                                    variant: "text-md/semibold",
                                    className: K.connectionAccountValue,
                                    children: (0, a.jsxs)("div", {
                                        className: K.connectionAccountLabelContainer,
                                        children: [e.name, r]
                                    })
                                }), (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    className: K.connectionAccountLabel,
                                    children: n.name
                                })]
                            }), (0, a.jsx)(c.Clickable, {
                                className: K.connectionDelete,
                                onClick: es,
                                "aria-label": W.default.Messages.SERVICE_CONNECTIONS_DISCONNECT,
                                focusProps: {
                                    offset: {
                                        top: -4,
                                        left: -4,
                                        right: -4
                                    }
                                },
                                children: (0, a.jsx)(L.default, {
                                    width: 16,
                                    height: 16
                                })
                            })]
                        })
                    }(f), (t = f).twoWayLink ? null : t.type === w.PlatformTypes.XBOX ? (0, a.jsx)("div", {
                        className: K.upsellWrapper,
                        children: (0, a.jsx)(H.XboxTwoWayLinkUpsell, {})
                    }) : t.type === w.PlatformTypes.PLAYSTATION ? (0, a.jsx)("div", {
                        className: K.upsellWrapper,
                        children: (0, a.jsx)(k.PlayStationTwoWayLinkUpsell, {})
                    }) : null, function(e) {
                        var t;
                        let s = null !== (t = e.metadata) && void 0 !== t ? t : {},
                            n = null,
                            l = (0, I.getCreatedAtDate)(s[V.MetadataFields.CREATED_AT], _);
                        switch (e.type) {
                            case w.PlatformTypes.REDDIT:
                                n = (0, N.generateRedditMetadataItems)(s, K.metadataItem);
                                break;
                            case w.PlatformTypes.STEAM:
                                n = (0, N.generateSteamMetadataItems)(s, K.metadataItem);
                                break;
                            case w.PlatformTypes.TWITTER:
                                n = (0, N.generateTwitterMetadataItems)(s, K.metadataItem);
                                break;
                            case w.PlatformTypes.EBAY:
                                n = (0, N.generateEbayMetadataItems)(s, K.metadataItem);
                                break;
                            case w.PlatformTypes.PAYPAL:
                                n = (0, N.generatePaypalMetadataItems)(s, K.metadataItem);
                                break;
                            case w.PlatformTypes.TIKTOK:
                                n = (0, N.generateTikTokMetadataItems)(s, K.metadataItem)
                        }
                        null !== l && (null == n && (n = []), null == n || n.push((0, a.jsx)(c.Text, {
                            variant: "text-xs/normal",
                            color: "interactive-active",
                            className: K.connectedAccountVanityMetadataCreatedAt,
                            children: W.default.Messages.CONNECTIONS_PROFILE_MEMBER_SINCE.format({
                                date: l
                            })
                        }, "member-since")));
                        let i = X.includes(e.id),
                            r = W.default.Messages.REFRESH;
                        if (null == n || 0 === n.length) {
                            if (!0 !== g.default.get(e.type).hasMetadata) return null;
                            n = [(0, a.jsx)(b.TextBadge, {
                                className: K.connectionMetadataUpsellTag,
                                text: W.default.Messages.NEW
                            }, "badge"), (0, a.jsx)(c.Text, {
                                variant: "text-xs/normal",
                                className: K.connectionMetadataUpsellDescription,
                                children: W.default.Messages.CONNECTED_ACCOUNT_ADD_DETAILS_DESCRIPTION.format({
                                    helpdeskUrl: B.default.getArticleURL(w.HelpdeskArticles.CONNECTION_DETAILS)
                                })
                            }, "label")], r = W.default.Messages.CONNECTED_ACCOUNT_ADD_DETAILS
                        }
                        return i && (r = W.default.Messages.DONE), n.push((0, a.jsx)(c.Button, {
                            className: K.metadataRefreshButton,
                            color: i ? c.Button.Colors.GREEN : c.Button.Colors.BRAND,
                            size: c.Button.Sizes.SMALL,
                            submitting: q,
                            disabled: i,
                            onClick: i ? void 0 : () => {
                                Z(!0), E.default.refresh(e.type, e.id).finally(() => {
                                    setTimeout(() => {
                                        X.push(e.id), J(X), Z(!1)
                                    }, 2e3)
                                })
                            },
                            children: r
                        }, "refresh-button")), (0, a.jsx)("div", {
                            className: K.metadataContainer,
                            children: n
                        })
                    }(f), (s = ee, w.FRIEND_SYNC_PLATFORM_TYPES.has(f.type) && (i = (0, a.jsx)(c.FormSwitch, {
                        className: K.connectionOptionSwitch,
                        hideBorder: !0,
                        value: C,
                        onChange: el,
                        children: (0, a.jsx)(c.Text, {
                            variant: "text-sm/semibold",
                            children: W.default.Messages.SYNC_FRIENDS
                        })
                    })), w.ACTIVITY_PLATFORM_TYPES.has(f.type) && (r = (0, a.jsx)(c.FormSwitch, {
                        className: K.connectionOptionSwitch,
                        hideBorder: !0,
                        value: D,
                        onChange: ei,
                        children: (0, a.jsx)(c.Text, {
                            variant: "text-sm/semibold",
                            children: W.default.Messages.DISPLAY_ACTIVITY.format({
                                platform: s.name
                            })
                        })
                    })), (null === (l = g.default.get(f.type)) || void 0 === l ? void 0 : l.hasMetadata) === !0 && (o = (0, a.jsx)(c.FormSwitch, {
                        className: K.connectionOptionSwitch,
                        hideBorder: !0,
                        value: 1 === R,
                        onChange: en,
                        disabled: 1 !== O || null == f.metadata,
                        children: (0, a.jsx)(c.Text, {
                            variant: "text-sm/semibold",
                            children: W.default.Messages.DISPLAY_DETAILS_ON_PROFILE
                        })
                    })), (0, a.jsx)("div", {
                        className: K.connectionOptionsWrapper,
                        children: (0, a.jsxs)("div", {
                            className: K.connectionOptions,
                            children: [(0, a.jsx)(c.FormSwitch, {
                                className: K.connectionOptionSwitch,
                                hideBorder: !0,
                                value: 1 === O,
                                onChange: ea,
                                children: (0, a.jsx)(c.Text, {
                                    variant: "text-sm/semibold",
                                    children: W.default.Messages.DISPLAY_ON_PROFILE
                                })
                            }), o, r, i]
                        })
                    })), function() {
                        if (f.revoked || f.integrations.length > 0) return (0, a.jsx)(c.FormDivider, {
                            className: K.connectedAccountSeparator
                        })
                    }(), f.revoked ? (0, a.jsx)(c.FormItem, {
                        className: K.integrationsWrapper,
                        children: (0, a.jsx)(c.FormText, {
                            className: K.integrationRevoked,
                            children: W.default.Messages.CONNECTED_ACCOUNT_REVOKED.format({
                                onReconnect: et
                            })
                        })
                    }) : f.integrations.length > 0 ? (0, a.jsxs)(c.FormItem, {
                        className: K.integrationsWrapper,
                        children: [(0, a.jsx)(c.FormTitle, {
                            tag: c.FormTitleTags.H5,
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-xs/semibold",
                                children: W.default.Messages.SUB_ENABLED_SERVERS
                            })
                        }), (0, a.jsx)("div", {
                            children: f.integrations.map(e => (0, a.jsx)(Q, {
                                integration: e
                            }, e.id))
                        })]
                    }) : void 0]
                })
            }

            function Z() {
                return n.useEffect(() => () => {
                    (0, C.markDismissibleContentAsDismissed)(o.DismissibleContent.NEW_CRUNCHYROLL_CONNECTION, {
                        dismissAction: Y.ContentDismissActionType.AUTO
                    })
                }, []), (0, a.jsxs)("div", {
                    className: K.connectContainer,
                    children: [(0, a.jsx)(c.Heading, {
                        variant: "heading-md/bold",
                        color: "interactive-active",
                        className: K.connectHeader,
                        children: W.default.Messages.CONNECTIONS_USER_SETTINGS_CONNECT_ACCOUNTS_HEADER
                    }), (0, a.jsx)(c.Text, {
                        variant: "text-xs/normal",
                        color: "header-secondary",
                        children: W.default.Messages.CONNECTIONS_USER_SETTINGS_CONNECT_ACCOUNTS_DESCRIPTION.format({
                            privacyPolicyUrl: w.MarketingURLs.PRIVACY
                        })
                    }), (0, a.jsx)(X, {})]
                })
            }

            function X() {
                function e(e) {
                    let t = g.default.get(e);
                    (0, p.default)(t.type), U.default.track(w.AnalyticEvents.ACCOUNT_LINK_STEP, {
                        previous_step: "desktop connections",
                        current_step: "desktop oauth",
                        platform_type: t.type
                    })
                }

                function t() {
                    S.default.dispatch({
                        type: "CONNECTIONS_GRID_MODAL_SHOW",
                        onComplete: e
                    })
                }
                let s = (0, h.usePlatforms)(),
                    n = (0, c.useRedesignIconContext)().enabled,
                    l = n ? 24 : 18;
                return (0, a.jsxs)("div", {
                    className: K.connectionsContainer,
                    children: [s.slice(0, 10).map(e => (0, a.jsx)(T.default, {
                        type: e.type,
                        className: K.accountButton,
                        innerClassName: K.accountButtonInner
                    }, e.type)), (0, a.jsx)(c.Tooltip, {
                        text: W.default.Messages.CONNECTIONS_VIEW_MORE,
                        children: e => {
                            let {
                                onMouseEnter: s,
                                onMouseLeave: n
                            } = e;
                            return (0, a.jsx)("div", {
                                className: i(K.accountAddWrapper, K.accountButton),
                                children: (0, a.jsx)(c.FocusRing, {
                                    children: (0, a.jsx)("button", {
                                        onMouseEnter: s,
                                        onMouseLeave: n,
                                        className: i(K.accountAddInner, K.accountButtonInner),
                                        type: "button",
                                        onClick: t,
                                        "aria-label": W.default.Messages.ADD_NEW_CONNECTION,
                                        children: (0, a.jsx)(P.default, {
                                            height: l,
                                            width: l,
                                            "aria-label": W.default.Messages.CONNECTIONS_VIEW_MORE
                                        })
                                    })
                                })
                            })
                        }
                    })]
                })
            }

            function J(e) {
                let t, {
                    fetching: n,
                    accounts: l,
                    theme: i,
                    locale: r
                } = e;
                return t = n ? (0, a.jsx)(c.Spinner, {
                    className: z.marginTop20,
                    type: c.Spinner.Type.SPINNING_CIRCLE
                }) : 0 === l.length ? (0, a.jsxs)(M.default, {
                    className: z.marginTop40,
                    theme: i,
                    children: [(0, a.jsx)(M.EmptyStateImage, {
                        darkSrc: s("137718"),
                        lightSrc: s("631399"),
                        width: 230,
                        height: 220
                    }), (0, a.jsx)(M.EmptyStateText, {
                        note: W.default.Messages.CONNECTED_ACCOUNTS_NONE,
                        children: W.default.Messages.CONNECTED_ACCOUNTS_NONE_TITLE
                    })]
                }) : l.filter(e => g.default.isSupported(e.type)).map((e, t) => (0, a.jsx)(q, {
                    theme: i,
                    account: e,
                    locale: r,
                    onDisconnect: () => (function(e) {
                        let {
                            type: t,
                            id: s
                        } = e;
                        E.default.disconnect(t, s)
                    })(e)
                }, t)), (0, a.jsx)(c.FormItem, {
                    className: K.connectionList,
                    children: t
                })
            }
            var $ = () => {
                let e = (0, r.useStateFromStores)([R.default], () => R.default.hidePersonalInformation),
                    t = (0, r.useStateFromStores)([A.default], () => A.default.isFetching()),
                    s = (0, r.useStateFromStores)([A.default], () => A.default.getAccounts()),
                    l = (0, _.default)();
                (0, r.useStateFromStores)([x.default], () => x.default.getFlattenedGuildIds());
                let i = (0, r.useStateFromStores)([y.default], () => y.default.locale);
                return (n.useEffect(() => {
                    E.default.fetch()
                }, []), e) ? (0, a.jsx)(f.default, {}) : (0, a.jsxs)(c.FormSection, {
                    className: K.connections,
                    tag: c.FormTitleTags.H1,
                    title: W.default.Messages.CONNECTIONS,
                    children: [(0, a.jsx)(Z, {}), (0, a.jsx)(J, {
                        fetching: t,
                        accounts: s,
                        theme: l,
                        locale: i
                    })]
                })
            }
        },
        814953: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return ei
                }
            }), s("222007"), s("70102");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("917351"),
                o = s.n(r),
                d = s("771281"),
                u = s("446674"),
                c = s("669491"),
                S = s("77078"),
                E = s("913144"),
                f = s("776156"),
                T = s("527015"),
                m = s("518888"),
                _ = s("133403"),
                g = s("913801"),
                h = s("485328"),
                I = s("960460"),
                N = s("355025"),
                p = s("809310"),
                C = s("34966"),
                A = s("269936"),
                O = s("370492"),
                x = s("584369"),
                R = s("619443"),
                M = s("32128"),
                v = s("368694"),
                D = s("313915"),
                L = s("381684"),
                P = s("697218"),
                j = s("860957"),
                b = s("941886"),
                U = s("145131"),
                B = s("258078"),
                y = s("50885"),
                F = s("161778"),
                G = s("484894"),
                k = s("49111"),
                H = s("180855"),
                w = s("6791"),
                V = s("716731"),
                Y = s("405879"),
                W = s("926622"),
                K = s("862839");
            let z = ["discord_web", "discord_marketing", "discord_ios", "discord_android"],
                Q = [{
                    value: "branch",
                    label: "Branch Name"
                }, {
                    value: "id",
                    label: "Build ID"
                }];

            function q(e) {
                return "discord_ios" in e || "discord_android" in e
            }
            class Z extends n.Component {
                render() {
                    let {
                        project: e,
                        overrideType: t,
                        overrideId: s,
                        disabled: n,
                        error: l
                    } = this.props;
                    return (0, a.jsxs)(U.default, {
                        direction: U.default.Direction.VERTICAL,
                        className: i(V.buildOverrideGroup, W.marginBottom20, Y.card, V.row),
                        children: [(0, a.jsx)(_.default, {
                            className: i(V.removeBuildOverride, {
                                [V.removeBuildOverrideDisabled]: n
                            }),
                            onClick: n ? void 0 : this.handleRemoveBuildOverride
                        }), (0, a.jsxs)(U.default, {
                            className: W.marginBottom8,
                            children: [(0, a.jsx)(U.default.Child, {
                                basis: "50%",
                                children: (0, a.jsx)(S.FormItem, {
                                    title: "Override Type",
                                    className: V.item,
                                    children: (0, a.jsx)(S.SingleSelect, {
                                        options: Q,
                                        onChange: this.handleOverrideTypeChanged,
                                        value: t,
                                        isDisabled: n
                                    })
                                })
                            }), (0, a.jsx)(U.default.Child, {
                                basis: "50%",
                                children: (0, a.jsx)(S.FormItem, {
                                    title: "branch" === t ? "Branch Name" : "Build ID",
                                    className: V.item,
                                    children: (0, a.jsx)(S.TextInput, {
                                        value: s,
                                        onChange: this.handleOverrideIdChanged,
                                        disabled: n
                                    })
                                })
                            })]
                        }), (0, a.jsxs)(U.default.Child, {
                            children: [null != l && "" !== l && (0, a.jsx)(S.FormText, {
                                className: V.item,
                                style: {
                                    color: c.default.unsafe_rawColors.RED_400.css
                                },
                                type: S.FormText.Types.DESCRIPTION,
                                children: l
                            }), (0, a.jsxs)(S.FormText, {
                                className: V.item,
                                type: S.FormText.Types.DESCRIPTION,
                                children: ["This controls the build that will be served for the ", (0, a.jsx)("code", {
                                    children: e
                                }), " project."]
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleRemoveBuildOverride = () => {
                        this.props.onBuildOverrideRemoved(this.props.project)
                    }, this.handleOverrideIdChanged = e => {
                        this.props.onBuildOverrideUpdated(this.props.project, {
                            id: e
                        })
                    }, this.handleOverrideTypeChanged = e => {
                        this.props.onBuildOverrideUpdated(this.props.project, {
                            type: e,
                            id: ""
                        })
                    }
                }
            }
            class X extends n.Component {
                async refreshBuildOverrides() {
                    this.setState({
                        loading: !0
                    });
                    let e = await (0, N.getBuildOverride)();
                    this.setState({
                        loading: !1,
                        buildOverrides: e,
                        loadedBuildOverrides: o.cloneDeep(e),
                        errors: {}
                    })
                }
                isDirty() {
                    let {
                        buildOverrides: e,
                        loadedBuildOverrides: t
                    } = this.state;
                    return !o.isEqual(e, t)
                }
                componentDidMount() {
                    this.refreshBuildOverrides()
                }
                getAvailableProjects() {
                    let {
                        buildOverrides: e
                    } = this.state;
                    if (null == e) return [];
                    let t = Object.keys(e);
                    return o.without(z, ...t)
                }
                renderEmpty() {
                    return (0, a.jsxs)(b.default, {
                        theme: F.default.theme,
                        className: i(W.marginTop40, W.marginBottom20),
                        children: [(0, a.jsx)(b.EmptyStateImage, {
                            darkSrc: s("522025"),
                            lightSrc: s("471737"),
                            width: 294,
                            height: 192
                        }), (0, a.jsx)(b.EmptyStateText, {
                            children: "You have no build overrides configured."
                        })]
                    })
                }
                renderItems() {
                    let {
                        buildOverrides: e,
                        saving: t,
                        errors: s
                    } = this.state;
                    return null == e ? null : o.map(e, (e, n) => (0, a.jsx)(Z, {
                        project: n,
                        overrideType: e.type,
                        overrideId: e.id,
                        disabled: t,
                        error: s[n],
                        onBuildOverrideUpdated: this.handleBuildOverrideUpdated,
                        onBuildOverrideRemoved: this.handleBuildOverrideRemoved
                    }, n))
                }
                renderRefreshButton() {
                    return !this.state.didSave || this.isDirty() ? null : (0, a.jsx)(U.default, {
                        grow: 0,
                        direction: U.default.Direction.HORIZONTAL_REVERSE,
                        children: (0, a.jsx)(U.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                onClick: () => location.reload(),
                                color: S.Button.Colors.PRIMARY,
                                children: "Reload App"
                            })
                        })
                    })
                }
                renderLinkButton() {
                    let {
                        buildOverrides: e
                    } = this.state;
                    return null == e || 0 === Object.keys(e).length ? null : (0, a.jsx)(U.default, {
                        grow: 0,
                        direction: U.default.Direction.HORIZONTAL_REVERSE,
                        children: (0, a.jsx)(U.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                onClick: this.handleLinkGeneration,
                                color: S.Button.Colors.BRAND,
                                children: "Generate Public Link"
                            })
                        })
                    })
                }
                renderSaveButton() {
                    if (!this.isDirty()) return null;
                    let {
                        saving: e,
                        buildOverrides: t
                    } = this.state;
                    return (0, a.jsxs)(U.default, {
                        grow: 0,
                        direction: U.default.Direction.HORIZONTAL_REVERSE,
                        children: [(0, a.jsx)(U.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                disabled: q(null != t ? t : {}),
                                onClick: this.handleSaveChanges,
                                submitting: e,
                                color: S.Button.Colors.GREEN,
                                children: "Save Build Overrides"
                            })
                        }), (0, a.jsx)(U.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                onClick: this.handleDiscardChanges,
                                disabled: e,
                                color: S.Button.Colors.RED,
                                children: "Discard Changes"
                            })
                        })]
                    })
                }
                render() {
                    let e;
                    let {
                        loading: t,
                        saving: s,
                        buildOverrides: n
                    } = this.state;
                    e = t ? (0, a.jsx)(S.Spinner, {
                        className: W.marginTop20
                    }) : null != n && 0 === Object.keys(n).length ? this.renderEmpty() : this.renderItems();
                    let l = !s && !t && this.getAvailableProjects().length > 0,
                        i = q(null != n ? n : {}) && "stable" !== window.GLOBAL_ENV.RELEASE_CHANNEL ? (0, a.jsx)(S.Text, {
                            color: "text-danger",
                            variant: "text-md/normal",
                            children: "Mobile build overrides must be generated using the desktop/web stable client for now!"
                        }) : null;
                    return (0, a.jsxs)(S.FormSection, {
                        className: W.marginTop60,
                        children: [(0, a.jsxs)(U.default, {
                            className: W.marginBottom20,
                            children: [(0, a.jsx)(U.default.Child, {
                                children: (0, a.jsx)(S.FormTitle, {
                                    tag: S.FormTitleTags.H1,
                                    children: "Build Overrides"
                                })
                            }), (0, a.jsx)(U.default.Child, {
                                grow: 0,
                                children: (0, a.jsx)(S.Button, {
                                    size: S.ButtonSizes.SMALL,
                                    onClick: this.handleAddBuildOverride,
                                    disabled: !l,
                                    children: "Add Build Override"
                                })
                            })]
                        }), (0, a.jsx)(S.FormDivider, {}), (0, a.jsxs)(U.default, {
                            direction: U.default.Direction.VERTICAL,
                            children: [i, e, (0, a.jsxs)(U.default, {
                                grow: 0,
                                direction: U.default.Direction.HORIZONTAL_REVERSE,
                                children: [this.renderRefreshButton(), this.renderSaveButton(), this.renderLinkButton()]
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        loading: !0,
                        buildOverrides: {},
                        loadedBuildOverrides: {},
                        errors: {},
                        saving: !1,
                        didSave: !1
                    }, this.handleAddBuildOverride = async () => {
                        var e;
                        let t = await (e = this.getAvailableProjects(), new Promise(t => {
                            (0, S.openModal)(s => {
                                let n = e => {
                                    s.onClose(), t(e)
                                };
                                return (0, a.jsxs)(S.ModalRoot, {
                                    ...s,
                                    "aria-label": "Choose A Project to Override",
                                    children: [(0, a.jsx)(S.ModalHeader, {
                                        separator: !1,
                                        children: (0, a.jsx)(S.Heading, {
                                            variant: "heading-lg/semibold",
                                            children: "Choose A Project to Override"
                                        })
                                    }), (0, a.jsx)(S.ModalContent, {
                                        children: (0, a.jsx)("div", {
                                            className: V.buildOverrideList,
                                            children: e.map(e => (0, a.jsx)(S.Button, {
                                                value: e,
                                                color: S.Button.Colors.GREEN,
                                                onClick: () => n(e),
                                                children: e
                                            }, e))
                                        })
                                    }), (0, a.jsx)(S.ModalFooter, {
                                        children: (0, a.jsx)(S.Button, {
                                            color: S.Button.Colors.PRIMARY,
                                            look: S.Button.Looks.LINK,
                                            onClick: () => n(null),
                                            children: "Nevermind"
                                        })
                                    })]
                                })
                            })
                        }));
                        if (null == t) return;
                        let s = {
                            ...this.state.buildOverrides,
                            [t]: {
                                type: "branch",
                                id: ""
                            }
                        };
                        this.setState({
                            buildOverrides: s
                        })
                    }, this.handleBuildOverrideUpdated = (e, t) => {
                        let {
                            buildOverrides: s
                        } = this.state, a = null != s ? s[e] : {}, n = {
                            ...a,
                            ...t
                        }, l = {
                            ...this.state.buildOverrides,
                            [e]: n
                        };
                        this.setState({
                            buildOverrides: l
                        })
                    }, this.handleBuildOverrideRemoved = e => {
                        let t = {
                            ...this.state.buildOverrides
                        };
                        delete t[e], this.setState({
                            buildOverrides: t
                        })
                    }, this.handleDiscardChanges = () => {
                        this.setState({
                            buildOverrides: o.cloneDeep(this.state.loadedBuildOverrides),
                            errors: {},
                            didSave: !1
                        })
                    }, this.handleSaveChanges = async () => {
                        let {
                            buildOverrides: e
                        } = this.state;
                        if (null == e) return;
                        this.setState({
                            saving: !0
                        });
                        let t = await (0, I.applyStaffBuildOverride)(e);
                        if (200 === t.status) {
                            let e = t.body;
                            this.setState({
                                buildOverrides: e,
                                loadedBuildOverrides: o.cloneDeep(e),
                                errors: {},
                                didSave: !0,
                                saving: !1
                            })
                        } else if (400 === t.status) {
                            let e = t.body;
                            this.setState({
                                errors: e,
                                saving: !1,
                                didSave: !1
                            })
                        } else this.setState({
                            saving: !1,
                            didSave: !1
                        })
                    }, this.handleLinkGeneration = () => {
                        let {
                            buildOverrides: e
                        } = this.state;
                        (0, S.openModal)(t => (0, a.jsx)(J, {
                            ...t,
                            buildOverrides: e
                        }))
                    }
                }
            }
            class J extends n.Component {
                isMobile() {
                    var e;
                    return q(null !== (e = this.props.buildOverrides) && void 0 !== e ? e : {})
                }
                renderSettingsForm() {
                    let {
                        ttlSeconds: e,
                        releaseChannel: t,
                        userIdEntry: s,
                        userIdEntryError: n,
                        allowedVersions: l,
                        allowedVersionEntry: i,
                        allowedVersionEntryError: r,
                        allowLoggedOut: o,
                        experiments: d,
                        experimentsError: u
                    } = this.state, c = H.BUILD_OVERRIDE_EXPIRATION_OPTIONS.find(t => t.value === e), E = l.map(e => ({
                        label: e,
                        value: e
                    }));
                    return (0, a.jsxs)(U.default.Child, {
                        basis: "70%",
                        children: [(0, a.jsx)(S.FormItem, {
                            title: "Expire After",
                            className: W.marginBottom20,
                            children: (0, a.jsx)(S.SingleSelect, {
                                value: null != c ? c.value : null,
                                options: H.BUILD_OVERRIDE_EXPIRATION_OPTIONS,
                                onChange: this.handleExpirationChange
                            })
                        }), this.isMobile() ? null : (0, a.jsx)(S.FormItem, {
                            title: "Release Channel",
                            className: W.marginBottom20,
                            children: (0, a.jsx)(S.SingleSelect, {
                                value: t,
                                options: H.BUILD_OVERRIDE_RELEASE_CHANNEL_OPTIONS,
                                onChange: this.handleReleaseChannelChange
                            })
                        }), this.isMobile() ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(S.FormItem, {
                                title: "Add allowed app version (required)",
                                className: W.marginBottom20,
                                children: (0, a.jsxs)(U.default, {
                                    direction: U.default.Direction.HORIZONTAL,
                                    children: [(0, a.jsx)(U.default.Child, {
                                        wrap: !0,
                                        basis: "90%",
                                        children: (0, a.jsx)(S.TextInput, {
                                            autoFocus: !0,
                                            value: i,
                                            onKeyPress: this.handleAllowedVersionEnter,
                                            error: r,
                                            onChange: this.handleAllowedVersionEntry,
                                            placeholder: "Example: 34"
                                        })
                                    }), (0, a.jsx)(S.Button, {
                                        onClick: this.handleAddAllowedVersion,
                                        children: "Add"
                                    })]
                                })
                            }), (0, a.jsx)(S.FormItem, {
                                title: "Remove allowed app version",
                                className: W.marginBottom20,
                                children: (0, a.jsx)(S.SingleSelect, {
                                    value: null,
                                    options: E,
                                    onChange: this.handleRemoveAllowedVersion,
                                    isDisabled: 0 === l.length
                                })
                            })]
                        }) : null, this.isMobile() ? null : (0, a.jsx)(a.Fragment, {
                            children: (0, a.jsxs)(S.FormItem, {
                                title: "Limit to User IDs (optional)",
                                className: W.marginBottom20,
                                children: [(0, a.jsx)(U.default, {
                                    direction: U.default.Direction.HORIZONTAL,
                                    children: (0, a.jsx)(U.default.Child, {
                                        wrap: !0,
                                        basis: "90%",
                                        children: (0, a.jsx)(S.TextArea, {
                                            value: s,
                                            error: n,
                                            onBlur: () => this.setUserEntryError(""),
                                            onChange: this.handleUserIDEntry
                                        })
                                    })
                                }), (0, a.jsx)(S.Text, {
                                    variant: "text-sm/normal",
                                    color: "text-muted",
                                    className: W.marginTop8,
                                    children: "User IDs can be separated by whitespace or commas."
                                })]
                            })
                        }), (0, a.jsxs)(S.FormItem, {
                            title: "Client Experiment Override",
                            className: W.marginBottom20,
                            children: [(0, a.jsx)(U.default, {
                                direction: U.default.Direction.HORIZONTAL,
                                children: (0, a.jsx)(U.default.Child, {
                                    wrap: !0,
                                    basis: "90%",
                                    children: (0, a.jsx)(S.TextArea, {
                                        value: d,
                                        error: u,
                                        onChange: this.handleExperiments,
                                        placeholder: '{"2022-01_threads":1}'
                                    })
                                })
                            }), (0, a.jsx)(S.Text, {
                                variant: "text-sm/normal",
                                color: "text-muted",
                                className: W.marginTop8,
                                children: "Locally override the given experiments to the given bucket. This ONLY applies locally and WILL NOT affect the server. When the user clears build override, the experiment override is removed as well."
                            })]
                        }), (0, a.jsx)(S.FormSwitch, {
                            onChange: this.handleAllowLoggedOut,
                            value: o,
                            children: "Allow logged out users"
                        })]
                    })
                }
                renderPayloadBlock() {
                    let e = JSON.stringify(this.generatePayload(), null, 2),
                        t = () => e,
                        n = (0, a.jsx)(A.LazyLibrary, {
                            createPromise: () => s.el("86256").then(s.bind(s, "86256")),
                            webpackId: "86256",
                            renderFallback: t,
                            render: s => {
                                let n = s.highlight("json", e, !0);
                                return null == n ? t() : (0, a.jsx)("code", {
                                    className: "hljs scroller ".concat(n.language, " ").concat(K.scrollbarGhost, " ").concat(V.codebox),
                                    dangerouslySetInnerHTML: {
                                        __html: n.value
                                    }
                                })
                            }
                        });
                    return (0, a.jsx)(U.default.Child, {
                        children: (0, a.jsx)(S.Card, {
                            children: (0, a.jsx)("pre", {
                                children: n
                            })
                        })
                    })
                }
                renderLinkForm() {
                    let {
                        statusTextColor: e,
                        statusText: t,
                        publicLink: s
                    } = this.state;
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(S.FormItem, {
                            title: "Signed Link",
                            children: (0, a.jsxs)(U.default, {
                                children: [(0, a.jsx)(U.default.Child, {
                                    wrap: !0,
                                    basis: "75%",
                                    children: (0, a.jsx)(g.default, {
                                        value: s
                                    })
                                }), (0, a.jsx)(S.Button, {
                                    onClick: this.handleGenerateLink,
                                    children: "Generate Link"
                                })]
                            })
                        }), (0, a.jsx)(B.default, {
                            color: e,
                            className: "".concat(W.marginBottom8, " ").concat(W.marginTop8),
                            children: t
                        })]
                    })
                }
                render() {
                    let {
                        onClose: e,
                        transitionState: t
                    } = this.props;
                    return (0, a.jsxs)(S.ModalRoot, {
                        size: S.ModalSize.LARGE,
                        transitionState: t,
                        "aria-label": "Generate Public Build Override Link",
                        children: [(0, a.jsxs)(S.ModalHeader, {
                            justify: U.default.Justify.BETWEEN,
                            separator: !1,
                            children: [(0, a.jsx)(S.Heading, {
                                variant: "heading-lg/semibold",
                                children: "Generate Public Build Override Link"
                            }), (0, a.jsx)(S.ModalCloseButton, {
                                onClick: e
                            })]
                        }), (0, a.jsxs)(S.ModalContent, {
                            children: [(0, a.jsxs)(U.default, {
                                children: [this.renderSettingsForm(), this.renderPayloadBlock()]
                            }), this.renderLinkForm()]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        ttlSeconds: 3600,
                        releaseChannel: "all",
                        userIds: new Set,
                        userIdEntry: "",
                        userIdEntryError: null,
                        allowedVersions: [],
                        allowedVersionEntry: "",
                        allowedVersionEntryError: null,
                        publicLink: " ",
                        statusText: null,
                        statusTextColor: B.default.Colors.STATUS_RED,
                        allowLoggedOut: !1
                    }, this.setUserEntryError = e => {
                        this.setState({
                            userIdEntryError: e
                        })
                    }, this.setStatusMessage = (e, t) => {
                        this.setState({
                            statusText: e,
                            statusTextColor: null != t ? t : B.default.Colors.STATUS_RED
                        })
                    }, this.handleUserIDEntry = e => {
                        if (!/^[\d\s,]*$/.test(e)) return this.setUserEntryError("User IDs are numbers!");
                        let t = new Set(e.split(/[,\s]+/).filter(Boolean));
                        this.setState({
                            userIdEntry: e,
                            userIds: t
                        })
                    }, this.setAllowedVersionError = e => {
                        this.setState({
                            allowedVersionEntryError: e
                        })
                    }, this.handleAllowedVersionEntry = e => {
                        this.setState({
                            allowedVersionEntry: e
                        })
                    }, this.handleAllowedVersionEnter = e => {
                        e.charCode === k.KeyboardKeys.ENTER && this.handleAddAllowedVersion()
                    }, this.handleAddAllowedVersion = () => {
                        let {
                            allowedVersions: e,
                            allowedVersionEntry: t
                        } = this.state;
                        return 0 === (t = t.trim()).length ? this.setAllowedVersionError("Enter a valid version number!") : e.indexOf(t) >= 0 ? this.setAllowedVersionError("You already added that version!") : void this.setState({
                            allowedVersions: [...e, t],
                            allowedVersionEntry: "",
                            allowedVersionEntryError: ""
                        })
                    }, this.handleRemoveAllowedVersion = e => {
                        let {
                            allowedVersions: t
                        } = this.state;
                        t = t.filter(t => t !== e), this.setState({
                            allowedVersions: t
                        })
                    }, this.handleAllowLoggedOut = e => {
                        this.setState({
                            allowLoggedOut: e
                        })
                    }, this.handleExpirationChange = e => {
                        this.setState({
                            ttlSeconds: e
                        })
                    }, this.handleReleaseChannelChange = e => {
                        this.setState({
                            releaseChannel: e
                        })
                    }, this.handleExperiments = e => {
                        if (0 === e.trim().length) {
                            this.setState({
                                experimentsError: void 0
                            });
                            return
                        }
                        try {
                            let t = JSON.parse(e);
                            for (let e in t) {
                                if (null == e.match(/^[0-9]{4}\-[0-9]{2}_[a-z0-9_]+$/)) {
                                    this.setState({
                                        experimentsError: "".concat(e, " is an invalid experiment name")
                                    });
                                    return
                                }
                                if ("number" != typeof t[e]) {
                                    this.setState({
                                        experimentsError: "".concat(e, " has an invalid bucket override")
                                    });
                                    return
                                }
                            }
                        } catch (e) {
                            this.setState({
                                experimentsError: "Unable to parse experiments ".concat(e.message)
                            });
                            return
                        }
                        this.setState({
                            experiments: e,
                            experimentsError: void 0
                        })
                    }, this.generatePayload = () => ({
                        overrides: this.props.buildOverrides,
                        meta: {
                            release_channel: "all" === this.state.releaseChannel ? null : this.state.releaseChannel,
                            ttl_seconds: this.state.ttlSeconds,
                            user_ids: Array.from(this.state.userIds),
                            allowed_versions: this.isMobile() ? this.state.allowedVersions : void 0,
                            allow_logged_out: this.state.allowLoggedOut,
                            experiments: null == this.state.experiments ? null : JSON.parse(this.state.experiments)
                        }
                    }), this.handleGenerateLink = async () => {
                        if (this.isMobile() && 0 === this.state.allowedVersions.length) {
                            this.setAllowedVersionError("You must add at least one allowed version for iOS");
                            return
                        }
                        this.setStatusMessage(null);
                        let e = this.generatePayload(),
                            t = await (0, I.getPublicBuildOverrideLink)(e);
                        !1 !== t.error ? this.setStatusMessage(JSON.stringify(t.error), B.default.Colors.STATUS_RED) : (this.setState({
                            publicLink: t.url.toString()
                        }), 0 === e.meta.user_ids.length && this.setStatusMessage("Warning! No users added to the whitelist! This link could be used by anyone to override their build.", B.default.Colors.STATUS_YELLOW))
                    }
                }
            }

            function $() {
                throw Error("Send help")
            }

            function ee() {
                let [e, t] = n.useState(!1), [s, l] = n.useState("");
                return (n.useEffect(() => {
                    (async () => {
                        let e = await (0, j.getOverlayURL)();
                        l(e)
                    })()
                }, []), e) ? {} : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: [V.buttonsContainer, W.marginBottom20].join(" "),
                        children: [(0, a.jsx)(S.Button, {
                            onClick: () => window.open(s, "_blank"),
                            disabled: "" === s,
                            children: "Open Overlay"
                        }), (0, a.jsx)(S.Button, {
                            onClick: () => {
                                R.default.getSocket().close(), R.default.getSocket().connect()
                            },
                            children: "Reset Socket"
                        }), p.ENABLE_CACHE_STORE && (0, a.jsx)(S.Button, {
                            onClick: () => {
                                E.default.dispatch({
                                    type: "CLEAR_CACHES"
                                })
                            },
                            children: "Clear Caches"
                        })]
                    }), (0, a.jsx)(S.FormSection, {
                        title: "Crashes",
                        tag: S.FormTitleTags.H1,
                        children: (0, a.jsxs)("div", {
                            className: V.buttonsContainer,
                            children: [(0, a.jsx)(S.SingleSelect, {
                                value: void 0,
                                options: [{
                                    value: void 0,
                                    label: "Native libdiscord crash"
                                }, {
                                    value: 0,
                                    label: "Abort()"
                                }, {
                                    value: 1,
                                    label: "SIGSEGV()"
                                }, {
                                    value: 2,
                                    label: "EXCEPTION_ACCESS_VIOLATION"
                                }, {
                                    value: 3,
                                    label: "RaiseFailFastException"
                                }, {
                                    value: 4,
                                    label: "Out of Memory"
                                }],
                                onChange: e => null != e && y.default.crash(e)
                            }), (0, a.jsx)(S.SingleSelect, {
                                value: void 0,
                                options: [{
                                    value: void 0,
                                    label: "Native JS crash"
                                }, {
                                    value: d.JSExceptionLocation.RendererProcessDelayed,
                                    label: "Delayed exception in renderer process"
                                }, {
                                    value: d.JSExceptionLocation.RendererProcess,
                                    label: "Exception in renderer process"
                                }, {
                                    value: d.JSExceptionLocation.MainProcess,
                                    label: "Exception in main process"
                                }],
                                onChange: e => {
                                    var t;
                                    return null != e ? (t = e, void y.default.triggerJSException(t)) : void 0
                                }
                            }), (0, a.jsx)(S.Button, {
                                onClick: () => t(!0),
                                children: "React Crash"
                            }), (0, a.jsx)(S.Button, {
                                onClick: $,
                                children: "onClick Throw"
                            })]
                        })
                    })]
                })
            }
            let et = u.default.connectStores([D.default, x.default], () => ({
                isTracingRequests: D.default.isTracingRequests,
                isForcedCanary: D.default.isForcedCanary,
                isLoggingGatewayEvents: D.default.isLoggingGatewayEvents,
                isLoggingOverlayEvents: D.default.isLoggingOverlayEvents,
                isLoggingAnalyticsEvents: D.default.isLoggingAnalyticsEvents,
                isAxeEnabled: D.default.isAxeEnabled,
                isSourceMapsEnabled: D.default.sourceMapsEnabled,
                isAnalyticsDebuggerEnabled: D.default.isAnalyticsDebuggerEnabled,
                isIdleStatusIndicatorEnabled: D.default.isIdleStatusIndicatorEnabled,
                appDirectoryIncludesInactiveCollections: D.default.appDirectoryIncludesInactiveCollections,
                isDevToolsEnabled: x.default.devToolsEnabled
            }))(e => {
                let {
                    isTracingRequests: t,
                    isForcedCanary: s,
                    isLoggingGatewayEvents: n,
                    isLoggingOverlayEvents: l,
                    isLoggingAnalyticsEvents: i,
                    isAxeEnabled: r,
                    isSourceMapsEnabled: o,
                    isAnalyticsDebuggerEnabled: d,
                    isIdleStatusIndicatorEnabled: c,
                    appDirectoryIncludesInactiveCollections: E,
                    isDevToolsEnabled: f
                } = e, m = (0, u.useStateFromStores)([P.default], () => P.default.getCurrentUser());
                return (0, a.jsxs)(S.FormSection, {
                    title: "Developer Flags",
                    tag: S.FormTitleTags.H1,
                    children: [v.default.isDeveloper && (0, a.jsx)(S.FormSwitch, {
                        value: f,
                        note: (0, a.jsxs)(a.Fragment, {
                            children: ["Enable client DevTools (open via Help menu in top right or with", " ", (0, a.jsx)("kbd", {
                                className: V.key,
                                children: h.default.modKey
                            }), " + ", (0, a.jsx)("kbd", {
                                className: V.key,
                                children: h.default.altKey
                            }), " ", "+ ", (0, a.jsx)("kbd", {
                                className: V.key,
                                children: "O"
                            }), ")."]
                        }),
                        onChange: e => (0, O.updateDevToolsSettings)({
                            devToolsEnabled: e
                        }),
                        children: "Enable DevTools"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: t,
                        note: "Force trace all client requests with APM",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            trace: e
                        }),
                        children: "Enable Tracing Requests"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: s,
                        note: "Force all API requests to canary instances",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            canary: e
                        }),
                        children: "Enable Forced Canary"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: n,
                        note: "Logs all incoming and outgoing gateway events to the developer console, enable verbose logging in the developer console to see!",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            logGatewayEvents: e
                        }),
                        children: "Enable Logging of Gateway Events to Console"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: l,
                        note: "Logs all overlay related RPC events. Super noisy if an overlay is connected",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            logOverlayEvents: e
                        }),
                        children: "Enable Logging of Overlay RPC Events & Commands"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: i,
                        note: "Logs all analytics events to the developer console",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            logAnalyticsEvents: e
                        }),
                        children: "Enable Logging of Analytics Events"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: o,
                        note: "Only enable on devices you trust.",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            sourceMapsEnabled: e
                        }),
                        children: "Enable source maps to be loaded on this client"
                    }), (0, a.jsx)(S.FormSwitch, {
                        value: d,
                        note: "Displays a floating debugger with viewed impressions",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            analyticsDebuggerEnabled: e
                        }),
                        children: "Enable standard analytics debugger view"
                    }), (null == m ? void 0 : m.isStaff()) ? (0, a.jsx)(S.FormSwitch, {
                        value: c,
                        note: "Displays a floating idle status indicator",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            idleStatusIndicatorEnabled: e
                        }),
                        children: "Enable idle status indicator"
                    }) : null, null, (null == m ? void 0 : m.isStaff()) ? (0, a.jsx)(S.FormSwitch, {
                        value: E,
                        note: "In App Directory, include inactive collections on the homepage. Use this to preview changes to collections before publishing them.",
                        onChange: e => (0, T.setDeveloperOptionSettings)({
                            appDirectoryIncludesInactiveCollections: e
                        }),
                        children: "Preview Unpublished Collections on App Directory Homepage"
                    }) : null, v.default.isDeveloper ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: [V.buttonsContainer, W.marginBottom20].join(" "),
                            children: (0, a.jsx)(G.OverridePremiumTypeDropDown, {})
                        }), (0, a.jsx)(S.FormDivider, {
                            className: V.divider
                        })]
                    }) : null]
                })
            });

            function es() {
                let e = (0, u.useStateFromStores)([L.default], () => L.default.getSurveyOverride()),
                    [t, s] = n.useState(null != e ? e : "");
                return (0, a.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: "Survey Override",
                    className: W.marginTop60,
                    children: [(0, a.jsx)(S.FormTitle, {
                        children: "Copy the ID of the Survey you want to test:"
                    }), (0, a.jsxs)("form", {
                        className: V.surveyOverride,
                        onSubmit: e => {
                            e.preventDefault(), t.length > 0 ? m.overrideSurvey(t) : m.overrideSurvey(null)
                        },
                        children: [(0, a.jsx)(S.TextInput, {
                            className: V.surveyOverrideInput,
                            value: t,
                            onChange: s
                        }), (0, a.jsx)(S.Button, {
                            type: "submit",
                            children: "Save Override"
                        })]
                    })]
                })
            }

            function ea() {
                let e = M.OverlayStoredSettings.methodOverride,
                    [t, s] = n.useState(e);
                return (0, a.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: "In-Game Overlay Method Override",
                    className: W.marginTop60,
                    children: [(0, a.jsx)(S.FormTitle, {
                        children: "Force all overlay enabled games to use a specific overlay method:"
                    }), (0, a.jsx)(S.SingleSelect, {
                        value: t,
                        options: [{
                            value: void 0,
                            label: "No override"
                        }, {
                            value: w.OverlayMethod.OutOfProcess,
                            label: "Out of process"
                        }, {
                            value: w.OverlayMethod.Hook,
                            label: "In-process hook"
                        }],
                        onChange: e => {
                            M.OverlayStoredSettings.update({
                                methodOverride: e
                            }), s(e)
                        }
                    })]
                })
            }

            function en() {
                var e;
                let t = (0, u.useStateFromStores)([C.default], () => C.default.overrideId()),
                    [s, l] = n.useState(null !== (e = C.default.overrideId()) && void 0 !== e ? e : "");
                return (0, a.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: "Changelog Override",
                    className: W.marginTop60,
                    children: [(0, a.jsx)(S.FormTitle, {
                        children: "Enter the ID of the changelog you want to test"
                    }), (0, a.jsxs)("div", {
                        className: V.surveyOverride,
                        children: [(0, a.jsx)(S.TextInput, {
                            className: V.surveyOverrideInput,
                            value: s,
                            onChange: l
                        }), (0, a.jsx)(S.Button, {
                            onClick: () => {
                                "" === s ? f.default.setChangelogOverride(null) : f.default.setChangelogOverride(s)
                            },
                            disabled: t === s,
                            children: "Update Changelog"
                        })]
                    })]
                })
            }
            class el extends n.PureComponent {
                render() {
                    return (0, a.jsxs)(n.Fragment, {
                        children: [(0, a.jsx)(et, {}), (0, a.jsx)(ee, {}), (0, a.jsx)(es, {}), (0, a.jsx)(ea, {}), (0, a.jsx)(en, {}), (0, a.jsx)(X, {})]
                    })
                }
            }
            var ei = el
        },
        409862: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("153935");

            function l() {
                return (0, a.jsx)(n.UserSettingsFamilyCenterPage, {})
            }
        },
        803163: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                showMFASuccessModal: function() {
                    return E
                },
                default: function() {
                    return f
                }
            }), s("70102"), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("627929"),
                i = s("77078"),
                r = s("430713"),
                o = s("663657"),
                d = s("49111"),
                u = s("782340");

            function c(e) {
                let {
                    onError: t,
                    onSuccess: s,
                    PasswordConfirm: i,
                    ...o
                } = e, [c, S] = n.useState("");
                return (0, a.jsx)(i, {
                    ...o,
                    handleSubmit: e => r.default.enableMFAStart(e),
                    onError: e => {
                        var a;
                        if (("object" == typeof(a = e) && null != a && (0, l.hasOwnProperty)(a, "code") && "number" == typeof a.code ? a.code : 0) === d.AbortCodes.MFA_INVALID_SECRET) s(c), o.onClose();
                        else t(e)
                    },
                    onPasswordChange: S,
                    title: u.default.Messages.TWO_FA_ENABLE,
                    actionText: u.default.Messages.CONTINUE,
                    skipErrorMsgAbortCode: d.AbortCodes.MFA_INVALID_SECRET
                })
            }

            function S(e, t) {
                return new Promise(n => {
                    (0, i.openModalLazy)(async () => {
                        let {
                            default: l
                        } = await s.el("936380").then(s.bind(s, "936380"));
                        return s => (0, a.jsx)(l, {
                            ...s,
                            password: e,
                            emailToken: t,
                            handleEnableMFASuccess: n
                        })
                    })
                })
            }

            function E() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                return new Promise(t => {
                    (0, i.openModalLazy)(async () => {
                        let {
                            default: t
                        } = await s.el("184504").then(s.bind(s, "184504"));
                        return s => (0, a.jsx)(t, {
                            ...s,
                            isTotp: e
                        })
                    }, {
                        onCloseCallback: t,
                        onCloseRequest: d.NOOP_NULL
                    })
                })
            }
            var f = {
                enableMFA: async function e() {
                    let e = await new Promise((e, t) => {
                        (0, i.openModalLazy)(async () => {
                            let {
                                default: n
                            } = await s.el("583227").then(s.bind(s, "583227"));
                            return s => (0, a.jsx)(c, {
                                ...s,
                                onSuccess: e,
                                onError: t,
                                PasswordConfirm: n
                            })
                        })
                    });
                    if ((0, o.isMfaEmailVerificationEnabled)()) {
                        var t;
                        let n = await (t = e, new Promise(e => {
                            (0, i.openModalLazy)(async () => {
                                let {
                                    default: n
                                } = await s.el("644512").then(s.bind(s, "644512"));
                                return s => (0, a.jsx)(n, {
                                    ...s,
                                    onFormSubmit: async e => await r.default.verifyEmailCode(e),
                                    onResend: async () => {
                                        await r.default.resendEmailCode(t)
                                    },
                                    onSuccess: e,
                                    headerText: u.default.Messages.USER_SETTINGS_ACCOUNT_CHANGE_EMAIL_CONFIRM_TITLE_DESKTOP,
                                    confirmButtonText: u.default.Messages.NEXT
                                })
                            })
                        }));
                        await S(e, null == n ? void 0 : n.token)
                    } else await S(e);
                    await E()
                }
            }
        },
        175077: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("77078"),
                o = s("568734"),
                d = s("241088"),
                u = s("845579"),
                c = s("49111"),
                S = s("782340"),
                E = s("926622");

            function f() {
                let e = u.FriendSourceFlagsSetting.useSetting(),
                    t = n.useMemo(() => (0, d.computeFlags)(e), [e]);
                return (0, a.jsx)(r.FormSection, {
                    tag: r.FormTitleTags.H1,
                    title: S.default.Messages.FRIEND_REQUESTS,
                    children: (0, a.jsxs)(r.FormSection, {
                        title: S.default.Messages.FRIEND_PERMITTED_SOURCE,
                        className: E.marginBottom40,
                        children: [(0, a.jsx)(r.FormSwitch, {
                            className: i(E.marginTop8, E.marginBottom20),
                            value: t.all,
                            onChange: e => u.FriendSourceFlagsSetting.updateSetting(e ? c.AllFriendSourceFlags : c.AllFriendSourceFlags & ~c.FriendSourceFlags.NO_RELATION),
                            children: S.default.Messages.FRIEND_PERMITTED_SOURCE_ALL
                        }), (0, a.jsx)(r.FormSwitch, {
                            value: t.all || t.mutualFriends,
                            onChange: t => u.FriendSourceFlagsSetting.updateSetting(t ? o.addFlag(e, c.FriendSourceFlags.MUTUAL_FRIENDS) : o.removeFlags(e, c.FriendSourceFlags.MUTUAL_FRIENDS, c.FriendSourceFlags.NO_RELATION)),
                            children: S.default.Messages.FRIEND_PERMITTED_SOURCE_MUTUAL_FRIENDS
                        }), (0, a.jsx)(r.FormSwitch, {
                            value: t.all || t.mutualGuilds,
                            onChange: t => u.FriendSourceFlagsSetting.updateSetting(t ? o.addFlag(e, c.FriendSourceFlags.MUTUAL_GUILDS) : o.removeFlags(e, c.FriendSourceFlags.MUTUAL_GUILDS, c.FriendSourceFlags.NO_RELATION)),
                            children: S.default.Messages.FRIEND_PERMITTED_SOURCE_MUTUAL_GUILDS
                        })]
                    })
                })
            }
        },
        688413: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return V
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("669491"),
                d = s("77078"),
                u = s("823411"),
                c = s("133403"),
                S = s("810549"),
                E = s("546463"),
                f = s("686470"),
                T = s("568307"),
                m = s("941886"),
                _ = s("931138"),
                g = s("398288"),
                h = s("462579"),
                I = s("867544"),
                N = s("907566"),
                p = s("267675"),
                C = s("688342"),
                A = s("486952"),
                O = s("599110"),
                x = s("117362"),
                R = s("773336"),
                M = s("161778"),
                v = s("49111"),
                D = s("782340"),
                L = s("547193"),
                P = s("212029"),
                j = s("173791"),
                b = s("405879"),
                U = s("926622");
            let B = r.default.connectStores([M.default], () => ({
                    theme: M.default.theme
                }))(m.default),
                y = (0, R.isWindows)();

            function F(e) {
                let {
                    onClose: t
                } = e, s = (0, r.useStateFromStores)([T.default], () => T.default.getCandidateGames()), [l, o] = n.useState(null), c = s.map(e => ({
                    value: e.pid,
                    label: null != e.name ? e.name : ""
                }));
                return (0, a.jsxs)(d.Dialog, {
                    className: i(L.addGamePopout, P.elevationBorderHigh),
                    "aria-label": D.default.Messages.SETTINGS_GAMES_ADD_NEW_GAME,
                    children: [(0, a.jsx)(d.SearchableSelect, {
                        placeholder: D.default.Messages.SELECT,
                        value: l,
                        options: c,
                        onChange: function(e) {
                            o(e)
                        }
                    }), (0, a.jsx)(d.FormDivider, {
                        className: i(U.marginTop8, U.marginBottom8)
                    }), (0, a.jsxs)("div", {
                        className: i(L.actions, j.horizontal),
                        children: [(0, a.jsx)(d.Button, {
                            className: L.cancelButton,
                            look: d.ButtonLooks.LINK,
                            color: d.ButtonColors.PRIMARY,
                            onClick: t,
                            children: D.default.Messages.CANCEL
                        }), (0, a.jsx)(d.Button, {
                            disabled: null == l,
                            onClick: function() {
                                null != l && (u.default.addGame(l), t())
                            },
                            children: D.default.Messages.SETTINGS_GAMES_ADD_NEW_GAME
                        })]
                    })]
                })
            }

            function G(e) {
                var t;
                let {
                    rawGame: s,
                    nowPlaying: l = !1,
                    isOverride: S
                } = e, m = (0, r.useStateFromStoresObject)([E.default, T.default, f.default], () => (0, T.transformForGameSettings)(s)), [x, R] = n.useState(!1), [M, P] = n.useState(null !== (t = m.name) && void 0 !== t ? t : "???"), U = i(j.flexCenter, {
                    [L.game]: !l,
                    [L.activeGame]: l,
                    [b.card]: !l,
                    [L.nowPlaying]: null != m && l
                });

                function B() {
                    u.default.deleteEntry(m)
                }

                function F() {
                    m.name !== M && u.default.editName(m, M)
                }

                function G(e) {
                    13 === e.keyCode && (e.currentTarget.blur(), e.preventDefault())
                }

                function k() {
                    u.default.toggleDetection(m)
                }

                function H() {
                    if (x) return;
                    let e = null != m.id ? E.default.getDetectableGame(m.id) : null;
                    O.default.track(v.AnalyticEvents.USER_SETTINGS_REPORT_INCORRECT_GAME_DETECTION, {
                        application_id: null == e ? void 0 : e.id,
                        game_name: m.name
                    }), (0, d.showToast)((0, d.createToast)(D.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION_CONFIRMATION.format({
                        gameName: m.name
                    }), d.ToastType.SUCCESS)), R(!0)
                }
                return (0, a.jsxs)("div", {
                    className: U,
                    children: [(0, a.jsxs)("div", {
                        className: i(L.gameNameLastPlayed, j.vertical),
                        children: [m.verified && !S ? (0, a.jsxs)("div", {
                            className: L.detectedApplication,
                            children: [(0, a.jsx)("div", {
                                className: L.gameName,
                                children: m.name
                            }), (0, a.jsx)(d.Tooltip, {
                                text: D.default.Messages.SETTINGS_GAMES_VERIFIED_ICON,
                                children: e => (0, a.jsx)(_.default, {
                                    className: L.gameVerifiedIcon,
                                    size: 18,
                                    color: o.default.unsafe_rawColors.BRAND_500.css,
                                    ...e,
                                    children: (0, a.jsx)(A.default, {
                                        width: 18,
                                        height: 18,
                                        color: o.default.unsafe_rawColors.WHITE_500.css
                                    })
                                })
                            })]
                        }) : (0, a.jsx)("input", {
                            className: i(L.gameName, L.gameNameInput),
                            type: "text",
                            maxLength: 128,
                            value: M,
                            onBlur: F,
                            onKeyDown: G,
                            onChange: e => P(e.target.value)
                        }), function() {
                            let e;
                            let {
                                played: t,
                                exePath: s
                            } = m;
                            return l ? e = D.default.Messages.SETTINGS_GAMES_NOW_PLAYING_STATE : null != t && "" !== t && (e = D.default.Messages.SETTINGS_GAMES_LAST_PLAYED.format({
                                when: t
                            })), (0, a.jsx)("div", {
                                className: L.lastPlayed,
                                children: (0, a.jsx)(g.default, {
                                    hoverText: null != s && "" !== s ? s.toUpperCase() : "",
                                    children: e
                                })
                            })
                        }()]
                    }), S ? null : x ? null : (0, a.jsx)("div", {
                        className: i(j.flexCenter, j.noWrap, j.justifyBetween, L.toggleContainer),
                        children: (0, a.jsx)(d.Tooltip, {
                            text: D.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION,
                            children: e => {
                                let {
                                    onMouseEnter: t,
                                    onMouseLeave: s
                                } = e;
                                return (0, a.jsx)(d.Clickable, {
                                    "aria-label": D.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION,
                                    className: L.toggleIcon,
                                    onClick: H,
                                    onMouseEnter: t,
                                    onMouseLeave: s,
                                    children: (0, a.jsx)(N.default, {
                                        className: L.toggleIconOn,
                                        foreground: L.fill,
                                        width: 24,
                                        height: 24
                                    })
                                })
                            }
                        })
                    }), function() {
                        let {
                            detectable: e
                        } = m, t = e ? (0, a.jsx)(h.default, {
                            className: L.toggleIconOn,
                            foreground: L.fill,
                            width: 24,
                            height: 24
                        }) : (0, a.jsx)(I.default, {
                            className: L.toggleIconOff,
                            background: L.fill,
                            foreground: L.fill,
                            width: 24,
                            height: 24
                        });
                        return (0, a.jsx)("div", {
                            className: i(j.flexCenter, j.noWrap, j.justifyBetween, L.toggleContainer),
                            children: (0, a.jsx)(d.Tooltip, {
                                text: D.default.Messages.SETTINGS_GAMES_TOGGLE_DETECTION,
                                children: e => {
                                    let {
                                        onMouseEnter: s,
                                        onMouseLeave: n
                                    } = e;
                                    return (0, a.jsx)(d.Clickable, {
                                        "aria-label": D.default.Messages.SETTINGS_GAMES_TOGGLE_DETECTION,
                                        className: L.toggleIcon,
                                        onClick: k,
                                        onMouseEnter: s,
                                        onMouseLeave: n,
                                        children: t
                                    })
                                }
                            })
                        })
                    }(), function() {
                        if (!y) return null;
                        let {
                            overlay: e,
                            overlayWarn: t
                        } = m, s = e ? (0, a.jsx)(p.default, {
                            className: L.toggleIconOn,
                            foreground: L.fill
                        }) : (0, a.jsx)(C.default, {
                            className: L.toggleIconOff,
                            foreground: L.fill
                        }), n = t ? (0, a.jsx)(d.Tooltip, {
                            text: D.default.Messages.SETTINGS_GAMES_OVERLAY_WARNING,
                            children: e => (0, a.jsx)("i", {
                                className: L.overlayWarningIcon,
                                ...e
                            })
                        }) : null;
                        return (0, a.jsxs)("div", {
                            className: i(j.flexCenter, j.noWrap, j.justifyBetween, L.toggleContainer),
                            children: [n, (0, a.jsx)(d.Tooltip, {
                                text: D.default.Messages.SETTINGS_GAMES_TOGGLE_OVERLAY,
                                children: t => {
                                    let {
                                        onMouseEnter: n,
                                        onMouseLeave: l
                                    } = t;
                                    return (0, a.jsx)(d.Clickable, {
                                        "aria-label": D.default.Messages.SETTINGS_GAMES_TOGGLE_OVERLAY,
                                        className: L.toggleIcon,
                                        onClick: () => {
                                            var t;
                                            return t = !e, void u.default.toggleOverlay(m, t)
                                        },
                                        onMouseEnter: n,
                                        onMouseLeave: l,
                                        children: s
                                    })
                                }
                            })]
                        })
                    }(), !l || S ? (0, a.jsx)(c.default, {
                        className: L.removeGame,
                        onClick: B
                    }) : null]
                })
            }

            function k() {
                return (0, a.jsx)("div", {
                    className: i(j.flexCenter, L.notDetected, L.activeGame),
                    children: (0, a.jsxs)("div", {
                        className: i(L.gameNameLastPlayed, j.vertical),
                        children: [(0, a.jsx)("div", {
                            className: L.gameName,
                            children: D.default.Messages.SETTINGS_GAMES_NO_GAME_DETECTED
                        }), (0, a.jsx)("div", {
                            className: L.lastPlayed,
                            children: D.default.Messages.SETTINGS_GAMES_NOT_PLAYING
                        })]
                    })
                })
            }

            function H(e) {
                let {
                    children: t
                } = e;
                return (0, a.jsxs)(B, {
                    className: U.marginTop40,
                    children: [(0, a.jsx)(m.EmptyStateImage, {
                        darkSrc: s("867369"),
                        lightSrc: s("200324"),
                        width: 430,
                        height: 250
                    }), t]
                })
            }
            let w = (0, x.cachedFunction)(function() {
                for (var e = arguments.length, t = Array(e), s = 0; s < e; s++) t[s] = arguments[s];
                return new Set(t.map(e => e.exePath))
            });
            var V = function() {
                let e = (0, r.useStateFromStoresArray)([T.default], () => T.default.getGamesSeen(!0)),
                    {
                        runningGame: t,
                        overrideExePaths: s
                    } = (0, r.useStateFromStoresObject)([T.default], () => ({
                        runningGame: T.default.getVisibleGame(),
                        overrideExePaths: w(...T.default.getOverrides())
                    }));
                return n.useEffect(() => ((0, S.watchCandidateGames)(), S.stopWatchingCandidateGames), []), (0, a.jsxs)(d.FormSection, {
                    tag: "h1",
                    title: D.default.Messages.REGISTERED_GAMES,
                    children: [null != t ? (0, a.jsx)(G, {
                        rawGame: t,
                        isOverride: s.has(t.exePath),
                        nowPlaying: !0
                    }, t.exePath) : (0, a.jsx)(k, {}), (0, a.jsxs)("div", {
                        className: i(L.nowPlayingAdd, U.marginReset, U.marginTop8, U.marginBottom20),
                        children: [(0, a.jsx)("span", {
                            children: D.default.Messages.SETTINGS_GAMES_NOT_SEEING_GAME
                        }), (0, a.jsx)(d.Popout, {
                            renderPopout: e => {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(F, {
                                    onClose: t
                                })
                            },
                            align: "center",
                            position: "bottom",
                            children: e => (0, a.jsx)(d.Button, {
                                ...e,
                                look: d.ButtonLooks.LINK,
                                size: d.ButtonSizes.MIN,
                                color: d.ButtonColors.LINK,
                                children: D.default.Messages.SETTINGS_GAMES_ADD_GAME
                            })
                        })]
                    }), 0 === e.length ? (0, a.jsx)(H, {
                        children: (0, a.jsx)(m.EmptyStateText, {
                            children: D.default.Messages.SETTINGS_GAMES_NO_GAMES_HEADER
                        })
                    }) : (0, a.jsxs)(d.FormSection, {
                        className: U.marginTop40,
                        children: [(0, a.jsx)(d.FormTitle, {
                            className: U.marginBottom4,
                            children: D.default.Messages.SETTINGS_GAMES_ADDED_GAMES_LABEL
                        }), e.map(e => (0, a.jsx)(G, {
                            rawGame: e,
                            isOverride: s.has(e.exePath)
                        }, e.exePath))]
                    })]
                })
            }
        },
        477596: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("627445"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("433426"),
                u = s("240760"),
                c = s("12013"),
                S = s("353802"),
                E = s("697218"),
                f = s("701909"),
                T = s("392409"),
                m = s("49111"),
                _ = s("782340"),
                g = s("231771");
            class h extends n.PureComponent {
                renderIntroHeader() {
                    let {
                        houseMembership: e
                    } = this.props;
                    return null == e ? _.default.Messages.HYPESQUAD_HEADING : _.default.Messages.HYPESQUAD_HEADING_EXISTING_MEMBER
                }
                render() {
                    let {
                        houseMembership: e,
                        isClaimed: t,
                        isVerified: s
                    } = this.props;
                    return (0, a.jsxs)(o.HeadingLevel, {
                        component: (0, a.jsxs)("div", {
                            className: g.intro,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-xxl/semibold",
                                className: g.introHeader,
                                children: this.renderIntroHeader()
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-lg/normal",
                                children: _.default.Messages.HYPESQUAD_SUBHEADING
                            })]
                        }),
                        children: [(0, a.jsx)(T.default, {
                            className: g.verificationNotice,
                            unclaimedNotice: _.default.Messages.HYPESQUAD_UNCLAIMED_ACCOUNT_NOTICE,
                            unverifiedNotice: _.default.Messages.HYPESQUAD_UNVERIFIED_EMAIL_NOTICE
                        }), (0, a.jsx)(u.default, {
                            houseMembership: e,
                            isClaimed: t,
                            isVerified: s
                        }), (0, a.jsx)(d.default, {}), (0, a.jsx)(c.default, {
                            isHypeSquadOnlineMember: null != e
                        }), (0, a.jsx)(o.Card, {
                            className: g.attendeeCTA,
                            children: _.default.Messages.HYPESQUAD_ATTENDEE_CTA.format({
                                url: f.default.getArticleURL(m.HelpdeskArticles.PROFILE_BADGES)
                            })
                        })]
                    })
                }
            }
            var I = r.default.connectStores([E.default, S.default], () => {
                let e = E.default.getCurrentUser();
                return i(null != e, "UserSettingsHypeSquad: currentUser cannot be undefined"), {
                    houseMembership: S.default.getHouseMembership(),
                    isClaimed: e.isClaimed(),
                    isVerified: e.verified
                }
            })(h)
        },
        9047: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("901582"),
                i = s("619935"),
                r = s("245187"),
                o = s("374023"),
                d = s("566126"),
                u = s("832837"),
                c = s("526995"),
                S = s("49111"),
                E = s("188338");

            function f() {
                let {
                    enabled: e
                } = o.default.useExperiment({
                    location: "UserSettingsInventory"
                }), t = (0, i.useBlockedPaymentsConfig)();
                return t ? (0, a.jsx)(r.BlockedPaymentsContentSettings, {}) : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(l.default, {
                        section: S.AnalyticsSections.LIBRARY_INVENTORY_CODE_REDEMPTION,
                        children: (0, a.jsx)(d.default, {})
                    }), e && (0, a.jsx)(l.default, {
                        section: S.AnalyticsSections.QUESTS,
                        children: (0, a.jsx)(c.default, {})
                    }), (0, a.jsx)(n.FormDivider, {
                        className: E.divider
                    }), (0, a.jsx)(l.default, {
                        section: S.AnalyticsSections.LIBRARY_INVENTORY_GIFTS_LIST,
                        children: (0, a.jsx)(u.default, {})
                    })]
                })
            }
        },
        656395: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return w
                }
            }), s("222007"), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("917351"),
                o = s.n(r),
                d = s("446674"),
                u = s("669491"),
                c = s("77078"),
                S = s("913139"),
                E = s("133403"),
                f = s("278108"),
                T = s("347445"),
                m = s("493765"),
                _ = s("485328"),
                g = s("56947"),
                h = s("479788"),
                I = s("42887"),
                N = s("227602"),
                p = s("860957"),
                C = s("941886"),
                A = s("145131"),
                O = s("555158"),
                x = s("701909"),
                R = s("773336"),
                M = s("13798"),
                v = s("161778"),
                D = s("264278"),
                L = s("49111"),
                P = s("894282"),
                j = s("782340"),
                b = s("371742"),
                U = s("405879"),
                B = s("926622");

            function y(e) {
                let {
                    children: t
                } = e, s = [m.KeybindGroup.MESSAGE, m.KeybindGroup.NAVIGATION, m.KeybindGroup.DND, m.KeybindGroup.CHAT, m.KeybindGroup.VOICE_AND_VIDEO, m.KeybindGroup.MISCELLANEOUS];
                return t(s)
            }
            let F = o((0, m.getDefaultLayoutContent)()).filter(e => e.description !== j.default.Messages.KEYBIND_DESCRIPTION_MODAL_EASTER_EGG).groupBy(e => e.group).value(),
                G = d.default.connectStores([v.default], () => ({
                    theme: v.default.theme
                }))(C.default);
            class k extends n.PureComponent {
                renderMessage() {
                    let {
                        keybind: e
                    } = this.props, t = M.toString(e.shortcut);
                    return _.default.hasBind(t) ? (0, a.jsx)(c.FormText, {
                        className: b.keybindMessage,
                        type: c.FormTextTypes.DESCRIPTION,
                        style: {
                            color: u.default.unsafe_rawColors.RED_400.css
                        },
                        children: j.default.Messages.KEYBIND_CONFLICT
                    }) : P.NavigationShortcuts.has(t) ? (0, a.jsx)(c.FormText, {
                        className: b.keybindMessage,
                        type: c.FormTextTypes.DESCRIPTION,
                        style: {
                            color: u.default.unsafe_rawColors.RED_400.css
                        },
                        children: j.default.Messages.KEYBIND_NAVIGATION_CONFLICT.format({
                            keyboardNavArticle: x.default.getArticleURL(L.HelpdeskArticles.KEYBOARD_NAVIGATION)
                        })
                    }) : (0, a.jsx)(c.FormText, {
                        className: b.keybindMessage,
                        type: c.FormTextTypes.DESCRIPTION,
                        children: this.props.keybindDescriptions[e.action]
                    })
                }
                render() {
                    let {
                        managed: e,
                        enabled: t
                    } = this.props.keybind;
                    return (0, a.jsxs)(A.default, {
                        direction: A.default.Direction.VERTICAL,
                        className: i(b.keybindGroup, U.card),
                        children: [!e && (0, a.jsx)(E.default, {
                            "aria-label": j.default.Messages.REMOVE_KEYBIND,
                            className: b.removeKeybind,
                            onClick: this.handleDeleteKeybind,
                            look: E.default.Looks.FILLED
                        }), (0, a.jsxs)(A.default, {
                            className: B.marginBottom8,
                            children: [(0, a.jsx)(A.default.Child, {
                                basis: "45%",
                                children: (0, a.jsx)(c.FormItem, {
                                    title: j.default.Messages.USER_SETTINGS_KEYBINDS_ACTION,
                                    className: b.item,
                                    children: (0, a.jsx)(c.SingleSelect, {
                                        value: this.props.keybind.action,
                                        options: this.props.keybindActionTypes,
                                        onChange: this.handleActionChanged,
                                        isDisabled: e
                                    })
                                })
                            }), (0, a.jsx)(A.default.Child, {
                                basis: "45%",
                                children: (0, a.jsx)(c.FormItem, {
                                    title: j.default.Messages.USER_SETTINGS_KEYBINDS_KEYBIND,
                                    className: b.item,
                                    children: (0, a.jsx)(f.default, {
                                        defaultValue: this.props.keybind.shortcut,
                                        onChange: this.handleShortcutChange
                                    })
                                })
                            }), (0, a.jsx)(A.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(c.FormItem, {
                                    className: b.switch,
                                    children: (0, a.jsx)(c.Tooltip, {
                                        text: j.default.Messages.USER_SETTINGS_KEYBIND_ENABLE_DISABLE,
                                        children: e => (0, a.jsx)("div", {
                                            ...e,
                                            children: (0, a.jsx)(c.Switch, {
                                                checked: t,
                                                onChange: this.handleEnableDisable
                                            })
                                        })
                                    })
                                })
                            })]
                        }), (0, a.jsx)(A.default.Child, {
                            children: this.renderMessage()
                        }), this.renderExtraSettings()]
                    })
                }
                renderExtraSettings() {
                    let {
                        action: e
                    } = this.props.keybind;
                    if (e === L.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL) return (0, a.jsx)(D.default, {
                        keybind: this.props.keybind
                    })
                }
                constructor(...e) {
                    super(...e), this.handleActionChanged = e => {
                        S.default.setKeybind({
                            ...this.props.keybind,
                            action: e
                        })
                    }, this.handleShortcutChange = e => {
                        S.default.setKeybind({
                            ...this.props.keybind,
                            shortcut: e
                        })
                    }, this.handleDeleteKeybind = () => {
                        S.default.deleteKeybind(this.props.keybind.id)
                    }, this.handleEnableDisable = () => {
                        let {
                            keybind: e
                        } = this.props;
                        S.default.setKeybind({
                            ...this.props.keybind,
                            enabled: !e.enabled
                        })
                    }
                }
            }
            class H extends n.PureComponent {
                componentDidMount() {
                    S.default.enableAll(!1)
                }
                componentWillUnmount() {
                    S.default.enableAll(!0)
                }
                get keybindActionTypes() {
                    let {
                        overlaySupported: e,
                        canGoLive: t,
                        allowSoundboard: s,
                        enableClips: a
                    } = this.props, n = [{
                        value: L.GlobalKeybindActions.UNASSIGNED,
                        label: j.default.Messages.KEYBIND_UNASSIGNED
                    }, {
                        value: L.GlobalKeybindActions.PUSH_TO_TALK,
                        label: j.default.Messages.KEYBIND_PUSH_TO_TALK
                    }, {
                        value: L.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY,
                        label: j.default.Messages.KEYBIND_PUSH_TO_TALK_PRIORITY
                    }, {
                        value: L.GlobalKeybindActions.PUSH_TO_MUTE,
                        label: j.default.Messages.KEYBIND_PUSH_TO_MUTE
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_MUTE,
                        label: j.default.Messages.KEYBIND_TOGGLE_MUTE
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_DEAFEN,
                        label: j.default.Messages.KEYBIND_TOGGLE_DEAFEN
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_VOICE_MODE,
                        label: j.default.Messages.KEYBIND_TOGGLE_VOICE_MODE
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_STREAMER_MODE,
                        label: j.default.Messages.KEYBIND_TOGGLE_STREAM_MODE
                    }];
                    return e && (n.push({
                        value: L.GlobalKeybindActions.TOGGLE_OVERLAY,
                        label: j.default.Messages.KEYBIND_TOGGLE_OVERLAY
                    }), n.push({
                        value: L.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK,
                        label: j.default.Messages.KEYBIND_TOGGLE_OVERLAY_INPUT_LOCK
                    }), n.push({
                        value: L.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET,
                        label: j.default.Messages.KEYBIND_ACTIVATE_OVERLAY_CHAT
                    })), t && (0, R.isWindows)() && n.push({
                        value: L.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING,
                        label: j.default.Messages.KEYBIND_TOGGLE_GO_LIVE_STREAMING
                    }), (0, R.isDesktop)() && (n.push({
                        value: L.GlobalKeybindActions.NAVIGATE_BACK,
                        label: j.default.Messages.KEYBIND_NAVIGATE_BACK
                    }, {
                        value: L.GlobalKeybindActions.NAVIGATE_FORWARD,
                        label: j.default.Messages.KEYBIND_NAVIGATE_FORWARD
                    }, {
                        value: L.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL,
                        label: j.default.Messages.USER_SETTINGS_KEYBINDS_SWITCH_TO_VOICE_CHANNEL_LABEL
                    }, {
                        value: L.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL,
                        label: j.default.Messages.USER_SETTINGS_KEYBINDS_VOICE_CHANNEL_DISCONNECT_LABEL
                    }), s && n.push({
                        value: L.GlobalKeybindActions.SOUNDBOARD,
                        label: j.default.Messages.KEYBIND_SOUNDBOARD
                    }, {
                        value: L.GlobalKeybindActions.SOUNDBOARD_HOLD,
                        label: j.default.Messages.KEYBIND_SOUNDBOARD_HOLD
                    }), a && n.push({
                        value: L.GlobalKeybindActions.SAVE_CLIP,
                        label: j.default.Messages.CLIPS_SAVE
                    })), n
                }
                get keybindDescriptions() {
                    let {
                        overlaySupported: e,
                        canGoLive: t,
                        enableClips: s
                    } = this.props, a = {
                        [L.GlobalKeybindActions.UNASSIGNED]: j.default.Messages.KEYBIND_DESCRIPTION_UNASSIGNED,
                        [L.GlobalKeybindActions.PUSH_TO_MUTE]: j.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_MUTE,
                        [L.GlobalKeybindActions.PUSH_TO_TALK]: j.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_TALK,
                        [L.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]: j.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_TALK_PRIORITY,
                        [L.GlobalKeybindActions.TOGGLE_MUTE]: j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_MUTE,
                        [L.GlobalKeybindActions.TOGGLE_DEAFEN]: j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_DEAFEN,
                        [L.GlobalKeybindActions.TOGGLE_VOICE_MODE]: j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_VOICE_MODE,
                        [L.GlobalKeybindActions.TOGGLE_STREAMER_MODE]: j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_STREAMER_MODE
                    };
                    return e && (a[L.GlobalKeybindActions.TOGGLE_OVERLAY] = j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_OVERLAY, a[L.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK] = j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_OVERLAY_INPUT_LOCK), t && (0, R.isWindows)() && (a[L.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING] = j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_GO_LIVE_STREAMING), (0, R.isDesktop)() && (a[L.GlobalKeybindActions.NAVIGATE_BACK] = j.default.Messages.KEYBIND_DESCRIPTION_NAVIGATE_BACK, a[L.GlobalKeybindActions.NAVIGATE_FORWARD] = j.default.Messages.KEYBIND_DESCRIPTION_NAVIGATE_FORWARD, a[L.GlobalKeybindActions.SOUNDBOARD] = (0, R.isWindows)() ? j.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_NO_POPOUT_WHEEL_SUPPORT : j.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD, a[L.GlobalKeybindActions.SOUNDBOARD_HOLD] = (0, R.isWindows)() ? j.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_HOLD_NO_POPOUT_WHEEL_SUPPORT : j.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_HOLD, s && (a[L.GlobalKeybindActions.SAVE_CLIP] = j.default.Messages.CLIPS_KEYBIND_DESCRIPTION)), a
                }
                renderKeybinds(e) {
                    return e.map(e => (0, a.jsx)("div", {
                        className: b.row,
                        children: (0, a.jsx)(k, {
                            keybind: e,
                            keybindDescriptions: this.keybindDescriptions,
                            keybindActionTypes: this.keybindActionTypes
                        }, e.id)
                    }, e.id))
                }
                renderEmpty(e) {
                    if (0 === e.length) return (0, a.jsx)(G, {
                        className: B.marginTop60,
                        children: (0, a.jsx)(C.EmptyStateImage, {
                            darkSrc: s("605149"),
                            lightSrc: s("203017"),
                            width: 320,
                            height: 170
                        })
                    })
                }
                render() {
                    let e = this.props.enableClips,
                        t = o(this.props.keybinds).reject(e => e.managed && ![L.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET, L.GlobalKeybindActions.SAVE_CLIP].includes(e.action)).reject(t => !e && t.action === L.GlobalKeybindActions.SAVE_CLIP).reject(e => !this.props.allowSoundboard && (e.action === L.GlobalKeybindActions.SOUNDBOARD || e.action === L.GlobalKeybindActions.SOUNDBOARD_HOLD)).sortBy(e => e.id).sortBy(e => !0 === e.managed ? -1 : 0).value();
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(c.FormSection, {
                            tag: c.FormTitleTags.H1,
                            title: j.default.Messages.KEYBINDS,
                            children: R.isPlatformEmbedded ? (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsxs)(A.default, {
                                    justify: A.default.Justify.BETWEEN,
                                    className: B.marginBottom20,
                                    children: [(0, a.jsx)(A.default.Child, {
                                        grow: 0,
                                        children: (0, a.jsx)(O.default, {
                                            messageType: O.HelpMessageTypes.WARNING,
                                            children: j.default.Messages.ADD_KEYBIND_WARNING
                                        })
                                    }), (0, a.jsx)(A.default.Child, {
                                        wrap: !0,
                                        grow: 0,
                                        children: (0, a.jsx)(c.Button, {
                                            size: c.ButtonSizes.LARGE,
                                            onClick: this.handleAddKeybind,
                                            children: j.default.Messages.ADD_KEYBIND
                                        })
                                    })]
                                }), (0, a.jsx)(c.FormDivider, {}), (0, a.jsxs)(c.FormSection, {
                                    children: [this.renderKeybinds(t), this.renderEmpty(t)]
                                })]
                            }) : (0, a.jsx)(O.default, {
                                messageType: O.HelpMessageTypes.INFO,
                                textVariant: "text-lg/medium",
                                className: b.browserNotice,
                                children: j.default.Messages.KEYBIND_IN_BROSWER_NOTICE.format({
                                    downloadLink: L.MarketingURLs.DOWNLOAD
                                })
                            })
                        }), (0, a.jsx)(c.FormDivider, {}), (0, a.jsxs)(c.FormSection, {
                            tag: c.FormTitleTags.H1,
                            title: j.default.Messages.USER_SETTINGS_KEYBINDS_DEFAULT_KEYBINDS_TITLE,
                            className: B.marginTop60,
                            children: [(0, a.jsxs)("div", {
                                className: b.defaultKeybind,
                                children: [(0, a.jsx)(c.Text, {
                                    variant: "text-md/normal",
                                    children: j.default.Messages.USER_SETTINGS_KEYBINDS_SHOW_LIST_TITLE
                                }), (0, a.jsx)("div", {
                                    className: b.defaultKeybindShortcutGroup,
                                    children: (0, a.jsx)(c.KeyCombo, {
                                        shortcut: T.TOGGLE_HOTKEYS.binds[0],
                                        className: b.defaultKeybindShortcut
                                    })
                                })]
                            }), (0, a.jsx)(c.FormDivider, {}), (0, a.jsx)(y, {
                                children: e => (0, a.jsx)(a.Fragment, {
                                    children: e.map((e, t) => {
                                        let s = (0, m.getNameForKeybindGroup)(e),
                                            l = (0, m.getDescriptionForKeybindGroup)(e),
                                            r = F[e];
                                        return (0, a.jsxs)("div", {
                                            className: b.defaultKeybindGroup,
                                            children: [(0, a.jsx)(c.Heading, {
                                                variant: "heading-deprecated-12/semibold",
                                                className: i(b.defaultKeybindGroupHeader, {
                                                    [b.defaultKeybindGroupWithDescription]: null != l
                                                }),
                                                children: s
                                            }), null != l && (0, a.jsx)(c.Text, {
                                                color: "header-secondary",
                                                className: b.defaultKeybindGroupDescription,
                                                variant: "text-sm/normal",
                                                children: l
                                            }), (0, a.jsx)(c.FormDivider, {}), r.map(e => (0, a.jsxs)(n.Fragment, {
                                                children: [(0, a.jsxs)("div", {
                                                    className: b.defaultKeybind,
                                                    children: [(0, a.jsx)(c.Text, {
                                                        variant: "text-md/normal",
                                                        children: e.description
                                                    }), (0, a.jsx)("div", {
                                                        className: b.defaultKeybindShortcutGroup,
                                                        children: e.binds.map(e => (0, a.jsx)(c.KeyCombo, {
                                                            shortcut: e
                                                        }, e))
                                                    })]
                                                }), (0, a.jsx)(c.FormDivider, {})]
                                            }, e.description))]
                                        }, t)
                                    })
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleAddKeybind = () => {
                        S.default.addKeybind()
                    }
                }
            }

            function w() {
                let e = (0, d.useStateFromStores)([N.default], () => N.default.getState()),
                    t = (0, d.useStateFromStores)([I.default], () => (0, h.default)(I.default)),
                    s = (0, d.useStateFromStores)([p.default], () => p.default.isSupported()),
                    n = (0, g.useEnableClips)();
                return (0, a.jsx)(H, {
                    keybinds: e,
                    canGoLive: t,
                    overlaySupported: s,
                    allowSoundboard: (0, R.isWindows)(),
                    enableClips: n
                })
            }
        },
        960261: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("452804"),
                o = s("915639"),
                d = s("782340"),
                u = s("982110"),
                c = s("390493"),
                S = l.default.connectStores([o.default], () => ({
                    currentLocale: o.default.locale
                }))(function(e) {
                    let [t, l] = n.useState(e.currentLocale), [o] = n.useState(() => d.default.getAvailableLocales().map(e => {
                        let t;
                        try {
                            t = s("20860")("@discordapp/common/images/flags/".concat(e.value, ".png").replace("@discordapp/common/images/flags/", "./"))
                        } catch (e) {
                            t = s("799987")
                        }
                        return {
                            ...e,
                            name: (0, a.jsxs)("div", {
                                className: u.option,
                                children: [(0, a.jsx)("span", {
                                    className: u.localeName,
                                    children: e.name
                                }), (0, a.jsx)("span", {
                                    className: u.localizedName,
                                    children: e.localizedName
                                }), (0, a.jsx)("div", {
                                    className: u.flag,
                                    "aria-hidden": !0,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: t,
                                        className: u.flagImage
                                    })
                                })]
                            })
                        }
                    })), S = n.useCallback(e => {
                        let {
                            value: t
                        } = e;
                        l(t), c.nextTick(() => r.default.updateLocale(t))
                    }, []);
                    return (0, a.jsx)(i.FormSection, {
                        tag: i.FormTitleTags.H1,
                        title: d.default.Messages.LANGUAGE,
                        children: (0, a.jsx)(i.FormSection, {
                            children: (0, a.jsx)(i.FormItem, {
                                title: d.default.Messages.LANGUAGE_SELECT,
                                children: (0, a.jsx)(i.RadioGroup, {
                                    onChange: S,
                                    options: o,
                                    value: t
                                })
                            })
                        })
                    })
                })
        },
        436112: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return W
                }
            }), s("424973"), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("917351"),
                o = s.n(r),
                d = s("446674"),
                u = s("77078"),
                c = s("404118"),
                S = s("193990");
            s("519705");
            var E = s("533280"),
                f = s("408166"),
                T = s("298878"),
                m = s("54346"),
                _ = s("684581"),
                g = s("488284"),
                h = s("649649"),
                I = s("640497"),
                N = s("699668"),
                p = s("748021"),
                C = s("168067"),
                A = s("820974"),
                O = s("385649"),
                x = s("282109"),
                R = s("368121"),
                M = s("599110"),
                v = s("566673"),
                D = s("773336"),
                L = s("709681"),
                P = s("845579"),
                j = s("872173"),
                b = s("77809"),
                U = s("49111");
            s("76618");
            var B = s("782340"),
                y = s("9162"),
                F = s("926622");

            function G(e) {
                let {
                    label: t,
                    enabled: s,
                    disabled: n,
                    onPreview: l,
                    onChange: i
                } = e;
                return (0, a.jsx)(u.FormSwitch, {
                    className: y.soundRow,
                    value: s,
                    onChange: i,
                    disabled: n,
                    children: (0, a.jsxs)("div", {
                        className: y.notificationSound,
                        children: [(0, a.jsx)("div", {
                            className: y.soundName,
                            children: t
                        }), (0, a.jsx)(u.Clickable, {
                            className: y.soundIcon,
                            onClick: l,
                            "aria-label": B.default.Messages.USER_SETTINGS_NOTIFICATIONS_PREVIEW_SOUND,
                            children: (0, a.jsx)(R.default, {
                                width: 16,
                                height: 16,
                                className: y.icon,
                                "aria-hidden": !0
                            })
                        })]
                    })
                })
            }

            function k(e) {
                let {
                    disabledSounds: t,
                    disableAllSounds: s,
                    notifyMessagesInSelectedChannel: l
                } = e, {
                    allowAprilFoolsSoundpack: r
                } = C.default.useExperiment({
                    location: "791c79_1"
                }, {
                    autoTrackExposure: !1
                }), {
                    enabled: o
                } = f.ActivitiesSoundsExperiment.useExperiment({
                    location: "791c79_2"
                }, {
                    autoTrackExposure: !1
                }), d = g.default.useIsRingtoneEligible();
                n.useEffect(() => {
                    C.default.trackExposure({
                        location: "791c79_3"
                    })
                }, []);
                let c = n.useRef(),
                    E = n.useCallback((e, t) => {
                        t.stopPropagation(), t.preventDefault(), null != c.current && c.current.stop(), c.current = L.playSound(e)
                    }, []),
                    T = n.useCallback((e, s) => {
                        let a = t.filter(t => t !== e);
                        !s && a.push(e), e === _.default.ringtone && M.default.track(U.AnalyticEvents.EVENT_RINGTONE_TOGGLED, {
                            toggled_on: s,
                            sound_name: e
                        }), S.default.setDisabledSounds(a)
                    }, [t]);
                n.useEffect(() => () => {
                    var e;
                    null === (e = c.current) || void 0 === e || e.stop()
                });
                let m = [{
                    label: B.default.Messages.SOUND_MESSAGE,
                    sound: "message1"
                }, {
                    label: B.default.Messages.SOUND_DEAFEN,
                    sound: "deafen"
                }, {
                    label: B.default.Messages.SOUND_UNDEAFEN,
                    sound: "undeafen"
                }, {
                    label: B.default.Messages.MUTE,
                    sound: "mute"
                }, {
                    label: B.default.Messages.UNMUTE,
                    sound: "unmute"
                }, {
                    label: B.default.Messages.SOUND_VOICE_DISCONNECTED,
                    sound: "disconnect"
                }, {
                    label: B.default.Messages.SOUND_PTT_ACTIVATE,
                    sound: "ptt_start"
                }, {
                    label: B.default.Messages.SOUND_PTT_DEACTIVATE,
                    sound: "ptt_stop"
                }, {
                    label: B.default.Messages.SOUND_USER_JOIN,
                    sound: "user_join"
                }, {
                    label: B.default.Messages.SOUND_USER_LEAVE,
                    sound: "user_leave"
                }, {
                    label: B.default.Messages.SOUND_USER_MOVED,
                    sound: "user_moved"
                }, {
                    label: B.default.Messages.SOUND_OUTGOING_RING,
                    sound: "call_calling"
                }, {
                    label: B.default.Messages.SOUND_INCOMING_RING,
                    sound: "call_ringing"
                }, ...d ? [{
                    label: _.default.getRingtoneSettingsLabel(),
                    sound: _.default.ringtone,
                    disabled: t.includes("call_ringing")
                }] : [], {
                    label: B.default.Messages.SOUND_STREAM_STARTED,
                    sound: "stream_started"
                }, {
                    label: B.default.Messages.SOUND_STREAM_STOPPED,
                    sound: "stream_ended"
                }, {
                    label: B.default.Messages.SOUND_VIEWER_JOIN,
                    sound: "stream_user_joined"
                }, {
                    label: B.default.Messages.SOUND_VIEWER_LEAVE,
                    sound: "stream_user_left"
                }, ...o ? [{
                    label: B.default.Messages.SOUND_ACTIVITY_START,
                    sound: "activity_launch"
                }, {
                    label: B.default.Messages.SOUND_ACTIVITY_END,
                    sound: "activity_end"
                }, {
                    label: B.default.Messages.SOUND_ACTIVITY_USER_JOIN,
                    sound: "activity_user_join"
                }, {
                    label: B.default.Messages.SOUND_ACTIVITY_USER_LEAVE,
                    sound: "activity_user_left"
                }] : [], {
                    label: B.default.Messages.SOUND_INVITED_TO_SPEAK,
                    sound: "reconnect"
                }];
                return (0, a.jsxs)(u.FormSection, {
                    tag: u.FormTitleTags.H1,
                    title: B.default.Messages.SOUNDS,
                    children: [r ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(u.FormTitle, {
                            className: F.marginBottom20,
                            children: B.default.Messages.SOUNDPACK_LABEL
                        }), (0, a.jsx)(A.default, {
                            className: i(y.soundpackSelect, F.marginBottom40)
                        })]
                    }) : null, (0, a.jsx)(u.FormSwitch, {
                        note: B.default.Messages.USER_SETTINGS_NOTIFICATIONS_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL_NOTE,
                        value: l,
                        onChange: S.default.setNotifyMessagesInSelectedChannel,
                        children: B.default.Messages.USER_SETTINGS_NOTIFICATIONS_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL_LABEL
                    }), (0, a.jsx)(u.FormSwitch, {
                        note: B.default.Messages.SOUND_DISABLE_ALL_NOTE,
                        value: s,
                        onChange: S.default.toggleDisableAllSounds,
                        children: B.default.Messages.SOUND_DISABLE_ALL
                    }), m.map(e => {
                        let {
                            label: n,
                            sound: l,
                            disabled: i
                        } = e;
                        return (0, a.jsx)(G, {
                            label: n,
                            disabled: s || !0 === i,
                            onChange: e => T(l, e),
                            onPreview: e => E(l, e),
                            enabled: !s && !t.includes(l)
                        }, l)
                    })]
                })
            }

            function H() {
                let e = (0, d.useStateFromStores)([m.default], () => m.default.getGuildAlertSettings()),
                    [t, s] = n.useState(null),
                    l = Object.keys(e).map(t => {
                        let s = e[t];
                        return {
                            label: s.guildName,
                            value: s.guildId
                        }
                    });
                return 0 === Object.keys(e).length ? null : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.Heading, {
                        variant: "heading-lg/semibold",
                        className: i(y.titleWithBeta, F.marginBottom20),
                        children: [B.default.Messages.GUILD_COMMUNITY_ALERTS_HEADER, (0, a.jsx)(T.default, {})]
                    }), (0, a.jsx)(u.FormText, {
                        type: u.FormTextTypes.DESCRIPTION,
                        className: F.marginBottom20,
                        children: B.default.Messages.GUILD_COMMUNITY_ALERTS_DESCRIPTION
                    }), (0, a.jsxs)(u.FormItem, {
                        title: B.default.Messages.GUILD_COMMUNITY_ALERTS_CHOOSE_SERVER,
                        children: [(0, a.jsx)(u.SingleSelect, {
                            value: t,
                            onChange: e => {
                                s(e)
                            },
                            options: l
                        }), null != t ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(u.FormSwitch, {
                                className: i(F.marginBottom20, F.marginTop20),
                                note: B.default.Messages.GUILD_COMMUNITY_ALERTS_NAG_DESCRIPTION,
                                value: !e[t].disableRaidAlertNag,
                                onChange: () => {
                                    (0, j.updateUserGuildSettings)(t, e => {
                                        e.disableRaidAlertNag = !e.disableRaidAlertNag
                                    }, j.UserSettingsDelay.INFREQUENT_USER_ACTION)
                                },
                                children: B.default.Messages.GUILD_COMMUNITY_ALERTS_NAG_HEADER
                            }), (0, a.jsx)(u.FormSwitch, {
                                className: F.marginBottom20,
                                note: B.default.Messages.GUILD_COMMUNITY_ALERTS_PUSH_DESCRIPTION,
                                value: !e[t].disableRaidAlertPush,
                                onChange: () => {
                                    (0, j.updateUserGuildSettings)(t, e => {
                                        e.disableRaidAlertPush = !e.disableRaidAlertPush
                                    }, j.UserSettingsDelay.INFREQUENT_USER_ACTION)
                                },
                                hideBorder: !0,
                                children: B.default.Messages.GUILD_COMMUNITY_ALERTS_PUSH_HEADER
                            })]
                        }) : null]
                    }), (0, a.jsx)(u.FormDivider, {
                        className: i(null != t ? F.marginTop20 : F.marginTop40, F.marginBottom40)
                    })]
                })
            }
            class w extends n.PureComponent {
                handleDesktopChange(e) {
                    let t = e ? U.DesktopNotificationTypes.ALL : U.DesktopNotificationTypes.NEVER;
                    if (t !== U.DesktopNotificationTypes.NEVER) {
                        var s;
                        s = "UserSettingsModal", v.default.requestPermission(e => {
                            let t = e ? U.NotificationPermissionTypes.ENABLED : U.NotificationPermissionTypes.BLOCKED;
                            S.default.setPermissionsState(t, s)
                        })
                    } else S.default.setDesktopType(t)
                }
                handleTTSChange(e) {
                    let t = e.value;
                    S.default.setTTSType(t)
                }
                render() {
                    let {
                        desktopType: e,
                        afkTimeout: t,
                        disableUnreadBadge: s,
                        taskbarFlash: n,
                        disabledSounds: l,
                        disableAllSounds: r,
                        notifyMessagesInSelectedChannel: d
                    } = this.props, c = D.isPlatformEmbedded && (0, D.isWindows)(), S = o.range(1, 11).map(e => ({
                        value: 60 * e,
                        label: B.default.Messages.DURATION_MINUTES.format({
                            minutes: e
                        })
                    }));
                    return (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H1,
                        title: B.default.Messages.NOTIFICATIONS,
                        children: [(0, a.jsx)(u.FormSwitch, {
                            className: F.marginBottom20,
                            value: e !== U.DesktopNotificationTypes.NEVER,
                            onChange: this.handleDesktopChange,
                            note: B.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE_BODY,
                            children: B.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE
                        }), (0, a.jsx)(u.FormSwitch, {
                            className: c ? F.marginBottom20 : F.marginBottom40,
                            value: !s,
                            note: B.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_BODY,
                            onChange: this.handleToggleShowUnreadBadge,
                            children: B.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_LABEL
                        }), c ? (0, a.jsx)(u.FormSwitch, {
                            className: F.marginBottom40,
                            value: n,
                            note: B.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_BODY,
                            onChange: this.handleToggleShowFlash,
                            children: B.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_LABEL
                        }) : null, (0, a.jsx)(V, {}), (0, a.jsxs)(u.FormItem, {
                            title: B.default.Messages.FORM_LABEL_PUSH_AFK_TIMEOUT,
                            children: [(0, a.jsx)(u.SingleSelect, {
                                value: t,
                                onChange: P.AfkTimeout.updateSetting,
                                options: S
                            }), (0, a.jsx)(u.FormText, {
                                type: u.FormTextTypes.DESCRIPTION,
                                className: F.marginTop8,
                                children: B.default.Messages.FORM_DESCRIPTION_PUSH_AFK_TIMEOUT
                            }), (0, a.jsx)(u.FormDivider, {
                                className: i(F.marginTop40, F.marginBottom40)
                            })]
                        }), this.renderTTS(), (0, a.jsx)(u.FormDivider, {
                            className: i(F.marginTop40, F.marginBottom40)
                        }), (0, a.jsx)(H, {}), (0, a.jsx)(u.FormItem, {
                            children: (0, a.jsx)(k, {
                                disabledSounds: l,
                                disableAllSounds: r,
                                notifyMessagesInSelectedChannel: d
                            })
                        }), (0, a.jsx)(b.default, {})]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleToggleShowUnreadBadge = () => {
                        S.default.setDisableUnreadBadge(!this.props.disableUnreadBadge)
                    }, this.handleToggleShowFlash = () => {
                        S.default.setTaskbarFlash(!this.props.taskbarFlash)
                    }, this.renderTTS = () => {
                        if (!E.supported) return null;
                        let e = [{
                            name: B.default.Messages.TTS_ALLS,
                            value: U.TTSNotificationTypes.ALL_CHANNELS
                        }, {
                            name: B.default.Messages.TTS_CURRENT,
                            value: U.TTSNotificationTypes.SELECTED_CHANNEL
                        }, {
                            name: B.default.Messages.TTS_NEVER,
                            value: U.TTSNotificationTypes.NEVER
                        }];
                        return (0, a.jsxs)(u.FormItem, {
                            title: B.default.Messages.FORM_LABEL_TTS_NOTIFICATIONS,
                            children: [(0, a.jsx)(u.FormText, {
                                type: u.FormTextTypes.DESCRIPTION,
                                className: F.marginBottom8,
                                children: B.default.Messages.FORM_DESCRIPTION_TTS
                            }), (0, a.jsx)(u.RadioGroup, {
                                options: e,
                                onChange: this.handleTTSChange,
                                value: this.props.ttsType
                            })]
                        })
                    }
                }
            }

            function V() {
                let e = I.NotificationsExperiment.useExperiment({
                        location: "UserSettingsNotifications"
                    }, {
                        autoTrackExposure: !1
                    }).enabled,
                    {
                        manuallyOpen: t
                    } = I.UnreadsEntryPointExperiment.useExperiment({
                        location: "UserSettingsNotifications"
                    }, {
                        autoTrackExposure: !1
                    }),
                    s = (0, d.useStateFromStores)([x.default], () => x.default.useNewNotifications),
                    [l, i] = n.useState(!1);
                return e && (s || t) ? (0, a.jsxs)(a.Fragment, {
                    children: [s ? (0, a.jsx)(u.FormSwitch, {
                        className: F.marginBottom40,
                        style: {
                            marginTop: -20
                        },
                        value: s,
                        disabled: l || !s,
                        note: B.default.Messages.NOTIF_MIGRATION_SETTINGS_SUBTITLE,
                        onChange: () => Y(i),
                        children: B.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE
                    }) : t ? (0, a.jsx)(u.FormSwitch, {
                        className: F.marginBottom40,
                        style: {
                            marginTop: -20
                        },
                        value: s,
                        disabled: l || s,
                        note: "Turns on the new notification system",
                        onChange: () => (0, p.openMigrationModal)(!0),
                        children: B.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE
                    }) : null, null]
                }) : null
            }
            async function Y(e) {
                e(!0);
                let t = await (0, h.listSnapshots)();
                0 === t.length ? await (0, N.revertToOldSystem)() : c.default.show({
                    title: B.default.Messages.CONFIRM,
                    body: B.default.Messages.NOTIF_MIGRATION_SETTINGS_CONFIRM_BODY.format({
                        date: new Date(t[t.length - 1].recorded_at)
                    }),
                    cancelText: B.default.Messages.CANCEL,
                    confirmText: B.default.Messages.NOTIF_MIGRATION_SETTINGS_CONFIRM_ACTION,
                    onConfirm: N.revertToOldSystem
                }), e(!1)
            }

            function W() {
                let e = (0, d.useStateFromStoresObject)([O.default], () => ({
                    disableUnreadBadge: O.default.getDisableUnreadBadge(),
                    taskbarFlash: O.default.taskbarFlash,
                    disabledSounds: O.default.getDisabledSounds(),
                    disableAllSounds: O.default.getDisableAllSounds(),
                    desktopType: O.default.getDesktopType(),
                    ttsType: O.default.getTTSType(),
                    notifyMessagesInSelectedChannel: O.default.getNotifyMessagesInSelectedChannel()
                }));
                return (0, a.jsx)(w, {
                    ...e,
                    afkTimeout: P.AfkTimeout.useSetting()
                })
            }
        },
        194200: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return R
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("627445"),
                l = s.n(n),
                i = s("917351"),
                r = s.n(i),
                o = s("446674"),
                d = s("77078"),
                u = s("913139"),
                c = s("539405"),
                S = s("278108"),
                E = s("6193"),
                f = s("999819"),
                T = s("227602"),
                m = s("860957"),
                _ = s("901165"),
                g = s("314892"),
                h = s("599110");
            s("701909");
            var I = s("13798"),
                N = s("49111"),
                p = s("782340"),
                C = s("388165");
            let A = O(null);

            function O(e) {
                var t;
                let s = _.default.getNotificationPositionMode(),
                    a = s !== N.OverlayNotificationPositions.DISABLED,
                    n = T.default.getOverlayKeybind(),
                    l = T.default.getOverlayChatKeybind();
                return {
                    enabled: m.default.enabled,
                    notifications_enabled: a,
                    notifications_position: a ? s : null,
                    text_notifications_mode: _.default.getTextChatNotificationMode(),
                    hotkey: null != n ? (0, I.toString)(n.shortcut) : null,
                    text_activation_hotkey: null != l ? (0, I.toString)(l.shortcut) : null,
                    text_opacity_slider: _.default.getTextWidgetOpacity(),
                    old_enabled: null !== (t = null == e ? void 0 : e.enabled) && void 0 !== t ? t : m.default.enabled
                }
            }

            function x(e) {
                let {
                    children: t,
                    title: s
                } = e;
                return (0, a.jsx)(d.FormItem, {
                    title: s,
                    className: C.userSettingsOverlayField,
                    children: t
                })
            }

            function R() {
                let e = (0, o.useStateFromStores)([m.default], () => m.default.enabled),
                    {
                        avatarSizeMode: t,
                        displayNameMode: s,
                        displayUserMode: n,
                        notificationPositionMode: i,
                        textChatNotificationMode: I,
                        shouldShowKeybindIndicators: R
                    } = (0, o.useStateFromStoresObject)([_.default], () => ({
                        avatarSizeMode: _.default.getAvatarSizeMode(),
                        displayNameMode: _.default.getDisplayNameMode(),
                        displayUserMode: _.default.getDisplayUserMode(),
                        notificationPositionMode: _.default.getNotificationPositionMode(),
                        textChatNotificationMode: _.default.getTextChatNotificationMode(),
                        shouldShowKeybindIndicators: _.default.showKeybindIndicators
                    })),
                    M = (0, o.useStateFromStores)([T.default], () => T.default.getOverlayKeybind()),
                    {
                        showKeybindIndicators: v
                    } = f.default.useExperiment({
                        location: "overlay_user_settings"
                    }),
                    D = (0, E.isHookModuleTooOld)();
                return ! function() {
                    let e = O(A);
                    !r.isEqual(e, A) && (h.default.track(N.AnalyticEvents.OVERLAY_SETTINGS_UPDATED, e), A = e)
                }(), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(d.FormSection, {
                        tag: d.FormTitleTags.H1,
                        title: p.default.Messages.OVERLAY,
                        children: [!1, (0, a.jsxs)("div", {
                            className: C.enableOverlaySection,
                            children: [(0, a.jsx)(d.FormItem, {
                                title: p.default.Messages.SETTINGS_GAMES_ENABLE_OVERLAY_LABEL,
                                className: C.enableOverlayItem,
                                children: (0, a.jsx)(d.FormSwitch, {
                                    className: C.enableSwitch,
                                    value: e,
                                    disabled: D,
                                    note: D ? p.default.Messages.OVERLAY_DISABLED_OLD_CLIENT : null,
                                    hideBorder: !0,
                                    onChange: function(e) {
                                        c.default.setEnabled(e), h.default.track(N.AnalyticEvents.OVERLAY_TOGGLED, {
                                            enabled: e,
                                            setting_type: "overlay toggled - global"
                                        })
                                    },
                                    children: p.default.Messages.ENABLE_INGAME_OVERLAY
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                title: p.default.Messages.KEYBIND_TOGGLE_OVERLAY_INPUT_LOCK,
                                className: C.enableOverlayItem,
                                children: (0, a.jsx)(S.default, {
                                    disabled: !e,
                                    defaultValue: null != M ? M.shortcut : [],
                                    onChange: function(e) {
                                        l(null != M, "Keybind should never be undefined"), u.default.setKeybind({
                                            ...M,
                                            shortcut: e
                                        })
                                    }
                                })
                            })]
                        }), (0, a.jsx)(x, {
                            title: p.default.Messages.FORM_LABEL_AVATAR_SIZE,
                            children: (0, a.jsx)(d.RadioGroup, {
                                options: [{
                                    name: p.default.Messages.AVATAR_SIZE_OPTION_LARGE,
                                    value: N.OverlayAvatarSizes.LARGE
                                }, {
                                    name: p.default.Messages.AVATAR_SIZE_OPTION_SMALL,
                                    value: N.OverlayAvatarSizes.SMALL
                                }],
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return c.default.setAvatarSizeMode(t)
                                },
                                value: t
                            })
                        }), (0, a.jsx)(x, {
                            title: p.default.Messages.FORM_LABEL_DISPLAY_NAMES,
                            children: (0, a.jsx)(d.RadioGroup, {
                                options: [{
                                    name: p.default.Messages.DISPLAY_OPTION_ALWAYS,
                                    value: N.OverlayDisplayNames.ALWAYS
                                }, {
                                    name: p.default.Messages.DISPLAY_OPTION_ONLY_WHILE_SPEAKING,
                                    value: N.OverlayDisplayNames.ONLY_WHILE_SPEAKING
                                }, {
                                    name: p.default.Messages.DISPLAY_OPTION_NEVER,
                                    value: N.OverlayDisplayNames.NEVER
                                }],
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return c.default.setDisplayNameMode(t)
                                },
                                value: s
                            })
                        }), (0, a.jsx)(x, {
                            title: p.default.Messages.FORM_LABEL_DISPLAY_USERS,
                            children: (0, a.jsx)(d.RadioGroup, {
                                options: [{
                                    name: p.default.Messages.DISPLAY_OPTION_ALWAYS,
                                    value: N.OverlayDisplayUsers.ALWAYS
                                }, {
                                    name: p.default.Messages.DISPLAY_OPTION_ONLY_WHILE_SPEAKING,
                                    value: N.OverlayDisplayUsers.ONLY_WHILE_SPEAKING
                                }],
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return c.default.setDisplayUserMode(t)
                                },
                                value: n
                            })
                        }), v && (0, a.jsx)(x, {
                            children: (0, a.jsx)(d.FormSwitch, {
                                value: R,
                                onChange: e => c.default.setShowKeybindIndicators(e),
                                hideBorder: !0,
                                children: p.default.Messages.FORM_LABEL_OVERLAY_SHOW_MUTE_DEAFEN_KEYBINDS
                            })
                        })]
                    }), (0, a.jsxs)(d.FormSection, {
                        tag: d.FormTitleTags.H1,
                        title: p.default.Messages.OVERLAY_NOTIFICATIONS_SETTINGS,
                        className: C.notificationSection,
                        children: [(0, a.jsx)(x, {
                            title: p.default.Messages.FORM_LABEL_NOTIFICATION_POSITION,
                            children: (0, a.jsx)("div", {
                                className: C.notificationSettings,
                                children: (0, a.jsx)(g.default, {
                                    position: i,
                                    onChange: (e, t) => c.default.setNotificationPositionMode(t)
                                })
                            })
                        }), (0, a.jsx)(x, {
                            children: (0, a.jsx)(d.FormSwitch, {
                                value: i !== N.OverlayNotificationPositions.DISABLED && I === N.OverlayNotificationTextChatTypes.ENABLED,
                                disabled: i === N.OverlayNotificationPositions.DISABLED,
                                onChange: function() {
                                    let {
                                        ENABLED: e,
                                        DISABLED: t
                                    } = N.OverlayNotificationTextChatTypes;
                                    c.default.setTextChatNotificationMode(I === e ? t : e)
                                },
                                hideBorder: !0,
                                children: p.default.Messages.FORM_LABEL_OVERLAY_TEXT_CHAT_NOTIFICATIONS
                            })
                        })]
                    })]
                })
            }
        },
        974926: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Z
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("913144"),
                u = s("850068"),
                c = s("583367"),
                S = s("54239"),
                E = s("775433"),
                f = s("308592"),
                T = s("245187"),
                m = s("866561"),
                _ = s("656142"),
                g = s("93731"),
                h = s("556738"),
                I = s("239380"),
                N = s("305961"),
                p = s("677099"),
                C = s("625634"),
                A = s("357957"),
                O = s("521012"),
                x = s("476263"),
                R = s("628398"),
                M = s("163466"),
                v = s("46829"),
                D = s("118503"),
                L = s("273293"),
                P = s("272339"),
                j = s("682344"),
                b = s("290581"),
                U = s("893596"),
                B = s("959097"),
                y = s("698015"),
                F = s("599110"),
                G = s("449008"),
                k = s("701909"),
                H = s("889285"),
                w = s("334811"),
                V = s("49111"),
                Y = s("782340"),
                W = s("368862");
            let K = () => [{
                    description: Y.default.Messages.PREMIUM_GUILD_USER_FEATURE_MEMBER_BADGE,
                    icon: D.default,
                    iconClass: W.memberBadgeIcon
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_USER_FEATURE_PROFILE_BADGE,
                    overrideIcon: e => (0, a.jsx)("div", {
                        className: i(e, W.profileBadgeIcon)
                    })
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_USER_FEATURE_ROLE,
                    icon: j.default,
                    iconClass: W.roleIcon
                }],
                z = () => [{
                    description: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURE_EMOJI,
                    icon: (0, v.default),
                    iconClass: W.emojiIcon
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURE_STICKERS,
                    icon: (0, U.default),
                    iconClass: W.stickerIcon
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURE_AUDIO_QUALITY,
                    icon: (0, P.default),
                    iconClass: W.audioQualityIcon
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURE_UPLOAD_SIZE,
                    icon: (0, y.default),
                    iconClass: W.uploadSizeIcon
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURE_CUSTOMIZATION,
                    icon: (0, b.default),
                    iconClass: W.customizationIcon
                }, {
                    description: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURE_THREADS,
                    icon: (0, B.default),
                    iconClass: W.threadIcon
                }].filter(G.isNotNullish);

            function Q(e) {
                let {
                    guildId: t
                } = e, s = (0, r.useStateFromStores)([N.default], () => N.default.getGuild(t));
                return null == s ? null : (0, a.jsx)(o.Clickable, {
                    onClick: function() {
                        (0, I.transitionToGuild)(t, {
                            state: {
                                shouldShowSubscribeTooltip: !0
                            }
                        }), (0, S.popLayer)()
                    },
                    className: W.cardWrapper,
                    children: (0, a.jsxs)(M.default, {
                        className: W.card,
                        children: [(0, a.jsx)(x.default, {
                            guild: s,
                            size: x.default.Sizes.LARGE,
                            "aria-hidden": !0
                        }), (0, a.jsxs)("div", {
                            className: W.guildInfo,
                            children: [(0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: W.guildName,
                                children: s.name
                            }), (0, a.jsxs)("div", {
                                className: W.subscriptionInfo,
                                children: [(0, a.jsx)(D.default, {
                                    className: W.guildBoostingIcon
                                }), (0, a.jsx)(o.Text, {
                                    className: W.subscriberCount,
                                    variant: "text-sm/normal",
                                    children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SUBSCRIBER_COUNT_TOOLTIP.format({
                                        subscriberCount: s.premiumSubscriberCount
                                    })
                                })]
                            })]
                        }), (0, a.jsx)(R.default, {
                            guildId: s.id,
                            subscriberCount: s.premiumSubscriberCount
                        })]
                    })
                })
            }

            function q() {
                let e = (0, r.useStateFromStores)([p.default], () => p.default.getFlattenedGuildIds()),
                    t = e.slice(0, V.NUMBER_OF_GUILDS_TO_RECOMMEND_BOOSTING),
                    s = (0, f.useSubscriptionPlansLoaded)();
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        className: W.divider
                    }), (0, a.jsxs)("div", {
                        className: W.marketingLogo,
                        children: [(0, a.jsx)(L.default, {
                            className: W.marketingLogoIcon
                        }), (0, a.jsx)("div", {
                            className: W.marketingLogoImage
                        })]
                    }), (0, a.jsx)(o.Text, {
                        tag: "p",
                        className: W.marketingHeader,
                        variant: "heading-lg/semibold",
                        children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_MARKETING_HEADER
                    }), (0, a.jsx)(o.Text, {
                        variant: "text-md/normal",
                        children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_MARKETING_BLURB
                    }), (0, a.jsx)(o.Heading, {
                        className: W.featureHeaderTop,
                        variant: "heading-lg/semibold",
                        color: "header-secondary",
                        children: Y.default.Messages.PREMIUM_GUILD_USER_FEATURES_HEADER
                    }), (0, a.jsx)(h.default, {
                        features: K(),
                        columns: 3
                    }), (0, a.jsx)(o.Heading, {
                        className: W.featureHeader,
                        variant: "heading-lg/semibold",
                        color: "header-secondary",
                        children: Y.default.Messages.PREMIUM_GUILD_GUILD_FEATURES_HEADER
                    }), (0, a.jsx)(h.default, {
                        features: z(),
                        columns: 3
                    }), (0, a.jsx)(o.Text, {
                        className: W.guildFullFeatures,
                        variant: "text-md/normal",
                        children: Y.default.Messages.PREMIUM_GUILD_FULL_FEATURE_LIST.format({
                            helpdeskArticle: k.default.getArticleURL(V.HelpdeskArticles.GUILD_SUBSCRIPTIONS)
                        })
                    }), (0, a.jsxs)("section", {
                        className: W.guildsSection,
                        children: [s ? (0, a.jsx)(_.default, {
                            className: W.guildSubscriptionHeading
                        }) : null, 0 === t.length ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)("div", {
                                className: W.emptyGuilds
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-lg/bold",
                                className: W.emptyGuildsTitle,
                                children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_MARKETING_GUILDS_EMPTY_DESCRIPTION_TITLE
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: W.emptyGuildsText,
                                children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_MARKETING_GUILDS_EMPTY_DESCRIPTION_TEXT
                            })]
                        }) : (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: W.guildsBlurb,
                                children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_MARKETING_GUILDS_BLURB
                            }), (0, a.jsx)("div", {
                                className: W.guilds,
                                children: t.map(e => (0, a.jsx)(Q, {
                                    guildId: e
                                }, e))
                            })]
                        })]
                    }), (0, a.jsx)(m.default, {
                        onOpenPremiumClick: () => void F.default.track(V.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                            location: {
                                page: V.AnalyticsPages.USER_SETTINGS,
                                section: V.AnalyticsSections.NITRO_CROSS_PROMO_FROM_BOOSTING,
                                object: V.AnalyticsObjects.BUTTON_CTA
                            }
                        })
                    })]
                })
            }

            function Z() {
                n.useEffect(() => {
                    d.default.wait(() => {
                        u.fetchSubscriptions(), u.fetchPaymentSources(), (0, c.fetchGuildBoostSlots)(), (0, E.fetchPremiumSubscriptionPlans)(null, null, V.RevenueSurfaces.DISCOVERY)
                    })
                }, []);
                let {
                    hasFetchedSubscriptions: e,
                    premiumSubscription: t
                } = (0, r.useStateFromStoresObject)([O.default], () => ({
                    hasFetchedSubscriptions: O.default.hasFetchedSubscriptions(),
                    premiumSubscription: O.default.getPremiumTypeSubscription()
                })), s = (0, f.useSubscriptionPlansLoaded)(), l = (0, r.useStateFromStores)([A.default], () => A.default.hasFetchedPaymentSources), S = (0, r.useStateFromStores)([C.default], () => C.default.boostSlots), m = !e || !s || !l, {
                    enabled: _
                } = w.default.useExperiment({
                    location: "8b5d23_1"
                }, {
                    autoTrackExposure: !m
                });
                return m ? (0, a.jsx)("div", {
                    className: i(W.container, W.loading),
                    children: (0, a.jsx)(o.Spinner, {})
                }) : (0, a.jsxs)("div", {
                    className: W.container,
                    children: [(0, a.jsx)("div", {
                        className: W.background
                    }), (0, a.jsx)("div", {
                        className: W.content,
                        children: _ ? (0, a.jsx)(H.default, {
                            premiumSubscription: t
                        }) : (0, a.jsx)(o.HeadingLevel, {
                            component: Object.keys(S).length > 0 ? (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)(o.FormTitle, {
                                    tag: "h1",
                                    children: Y.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TITLE
                                }), (0, a.jsx)(T.BlockedPaymentsWarning, {}), (0, a.jsx)(g.default, {})]
                            }) : null,
                            children: (0, a.jsx)(q, {})
                        })
                    })]
                })
            }
        },
        905818: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return z
                }
            }), s("843762"), s("506083");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("627445"),
                o = s.n(r),
                d = s("866227"),
                u = s.n(d),
                c = s("446674"),
                S = s("151426"),
                E = s("77078"),
                f = s("404118"),
                T = s("629803"),
                m = s("152584"),
                _ = s("79112"),
                g = s("457971"),
                h = s("447435"),
                I = s("10130"),
                N = s("298878"),
                p = s("916650"),
                C = s("775032"),
                A = s("36978"),
                O = s("646356"),
                x = s("861348"),
                R = s("350522"),
                M = s("305961"),
                v = s("26092"),
                D = s("697218"),
                L = s("145131"),
                P = s("476765"),
                j = s("599110"),
                b = s("701909"),
                U = s("62418"),
                B = s("241088"),
                y = s("845579"),
                F = s("568456"),
                G = s("49111"),
                k = s("170213"),
                H = s("782340"),
                w = s("863341"),
                V = s("926622");

            function Y(e) {
                let {
                    body: t,
                    ...s
                } = e;
                (0, E.openModal)(e => (0, a.jsx)(E.ConfirmModal, {
                    ...e,
                    ...s,
                    children: (0, a.jsx)(E.Text, {
                        variant: "text-md/normal",
                        children: t
                    })
                }))
            }

            function W(e) {
                let {
                    message: t
                } = e;
                Y({
                    header: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                    confirmText: H.default.Messages.OKAY,
                    body: t
                })
            }
            class K extends n.PureComponent {
                componentDidMount() {
                    (0, T.fetchConsents)(), (0, m.getHarvestStatus)().then(e => {
                        let t = {
                            requestingHarvest: !1,
                            currentHarvestRequest: e.body
                        };
                        this.setState(t)
                    }, () => {
                        this.setState({
                            requestingHarvest: !1
                        })
                    })
                }
                componentDidUpdate(e) {
                    e.defaultGuildsRestricted !== this.props.defaultGuildsRestricted && this.setState({
                        defaultGuildsRestricted: this.props.defaultGuildsRestricted
                    })
                }
                showGuildRestrictionModal(e) {
                    Y({
                        header: H.default.Messages.USER_DM_SETTINGS_TITLE,
                        body: H.default.Messages.USER_DM_SETTINGS_DESCRIPTION,
                        confirmText: H.default.Messages.NO_TEXT,
                        cancelText: H.default.Messages.YES_TEXT,
                        confirmButtonColor: E.Button.Colors.BRAND,
                        onConfirm: () => {
                            y.DefaultGuildsRestricted.updateSetting(e), this.trackDefaultDmsUpdated(e, !1)
                        },
                        onCancel: () => {
                            y.DefaultGuildsRestricted.updateSetting(e), y.RestrictedGuildIds.updateSetting(e ? Object.keys(M.default.getGuilds()) : []), this.trackDefaultDmsUpdated(e, !0)
                        }
                    })
                }
                trackDefaultDmsUpdated(e, t) {
                    j.default.track(G.AnalyticEvents.GUILD_DEFAULT_DMS_UPDATED, {
                        default_guilds_restricted: e,
                        applied_to_existing_guilds: t
                    })
                }
                showMessageRequestRestrictionModal(e) {
                    Y({
                        header: H.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_HEADER,
                        body: H.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_DESCRIPTION,
                        confirmText: H.default.Messages.NO_TEXT,
                        cancelText: H.default.Messages.YES_TEXT,
                        confirmButtonColor: E.Button.Colors.BRAND,
                        onConfirm: () => {
                            y.MessageRequestRestrictedDefault.updateSetting(e), this.trackDefaultMessageRequestUpdated(e, !1)
                        },
                        onCancel: () => {
                            y.MessageRequestRestrictedDefault.updateSetting(e), y.MessageRequestRestrictedGuildIds.updateSetting(e ? Object.keys(M.default.getGuilds()) : []), this.trackDefaultMessageRequestUpdated(e, !0)
                        }
                    })
                }
                trackDefaultMessageRequestUpdated(e, t) {
                    j.default.track(G.AnalyticEvents.GUILD_DEFAULT_MESSAGE_REQUEST_UPDATED, {
                        default_guilds_restricted: e,
                        applied_to_existing_guilds: t
                    })
                }
                renderLegacyExplicitContentFilter(e) {
                    return (0, a.jsxs)(E.FormItem, {
                        tag: E.FormTitleTags.H3,
                        className: V.marginBottom20,
                        title: H.default.Messages.USER_EXPLICIT_CONTENT_FILTER_V2,
                        children: [(0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: V.marginBottom8,
                            children: H.default.Messages.USER_EXPLICIT_CONTENT_FILTER_HELP_V3.format({
                                appealLink: b.default.getArticleURL(G.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                            })
                        }), (0, a.jsx)(E.RadioGroup, {
                            value: this.props.explicitContentFilter,
                            options: (0, U.generateExplicitImageOptions)(),
                            onChange: t => {
                                let {
                                    value: s
                                } = t;
                                this.props.dmSpamFilter === S.DmSpamFilterV2.DEFAULT_UNSET ? y.DmSpamFilterV2.updateSetting(e).then(() => {
                                    y.ExplicitContentFilter.updateSetting(s)
                                }) : y.ExplicitContentFilter.updateSetting(s)
                            }
                        })]
                    })
                }
                renderSelfModExplicitContentSettings() {
                    let {
                        explicitContentSettingGuilds: e,
                        explicitContentSettingFriendDm: t,
                        explicitContentSettingNonFriendDm: s,
                        userIsConsideredAdult: n
                    } = this.props, l = [{
                        value: S.ExplicitContentRedaction.BLUR,
                        label: H.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLUR
                    }, {
                        value: S.ExplicitContentRedaction.BLOCK,
                        label: H.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLOCK
                    }], r = [{
                        value: S.ExplicitContentRedaction.BLUR,
                        label: H.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLUR
                    }], o = {
                        value: S.ExplicitContentRedaction.SHOW,
                        label: H.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_SHOW
                    };
                    return n && (l.unshift(o), r.unshift(o)), (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(E.FormTitle, {
                            tag: E.FormTitleTags.H5,
                            faded: !0,
                            className: V.marginBottom8,
                            children: (0, a.jsxs)("div", {
                                className: i(w.betaTagContainer),
                                children: [H.default.Messages.OBSCURED_CONTENT_SETTINGS_HEADER, (0, a.jsx)(N.default, {
                                    className: w.betaTagIcon
                                })]
                            })
                        }), (0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: V.marginBottom8,
                            children: H.default.Messages.OBSCURED_CONTENT_SETTINGS_DESC.format({
                                learnMoreLink: b.default.getArticleURL(G.HelpdeskArticles.EXPLICIT_MEDIA_REDACTION)
                            })
                        }), (0, a.jsx)(E.FormItem, {
                            tag: E.FormTitleTags.H3,
                            className: V.marginBottom20,
                            title: H.default.Messages.OBSCURED_CONTENT_SETTING_FRIENDS,
                            children: (0, a.jsx)(E.SingleSelect, {
                                options: l,
                                value: t,
                                onChange: e => (0, h.updateExplicitContentSetting)({
                                    explicitContentFriendDm: e
                                })
                            })
                        }), (0, a.jsx)(E.FormItem, {
                            tag: E.FormTitleTags.H3,
                            className: V.marginBottom20,
                            title: H.default.Messages.OBSCURED_CONTENT_SETTING_NON_FRIENDS,
                            children: (0, a.jsx)(E.SingleSelect, {
                                options: l,
                                value: s,
                                onChange: e => (0, h.updateExplicitContentSetting)({
                                    explicitContentNonFriendDm: e
                                })
                            })
                        }), n && (0, a.jsx)(E.FormItem, {
                            tag: E.FormTitleTags.H3,
                            className: V.marginBottom20,
                            title: H.default.Messages.OBSCURED_CONTENT_SETTING_GUILDS,
                            children: (0, a.jsx)(E.SingleSelect, {
                                options: r,
                                value: e,
                                onChange: e => (0, h.updateExplicitContentSetting)({
                                    explicitContentGuilds: e
                                })
                            })
                        })]
                    })
                }
                renderDMSafety() {
                    var e;
                    let t = this.props.dmSpamFilter !== S.DmSpamFilterV2.DEFAULT_UNSET ? this.props.dmSpamFilter : null !== (e = F.ExplicitContentFilterToDmSpamFilterV2.get(this.props.explicitContentFilter)) && void 0 !== e ? e : S.DmSpamFilterV2.NON_FRIENDS;
                    return this.props.mediaRedactionIsEnabled ? (0, a.jsxs)(E.FormSection, {
                        tag: E.FormTitleTags.H3,
                        className: V.marginBottom20,
                        children: [this.renderSelfModExplicitContentSettings(), (0, a.jsxs)(E.FormItem, {
                            tag: E.FormTitleTags.H5,
                            className: V.marginBottom4,
                            title: H.default.Messages.USER_DM_SPAM_FILTER,
                            children: [(0, a.jsx)(E.FormText, {
                                type: E.FormTextTypes.DESCRIPTION,
                                className: V.marginBottom8,
                                children: H.default.Messages.USER_DM_SPAM_FILTER_HELP.format({
                                    appealLink: b.default.getArticleURL(G.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                                })
                            }), (0, a.jsx)(E.RadioGroup, {
                                value: t,
                                options: (0, U.generateDmSpamOptions)(),
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return y.DmSpamFilterV2.updateSetting(t)
                                }
                            })]
                        })]
                    }) : (0, a.jsxs)(E.FormSection, {
                        tag: E.FormTitleTags.H5,
                        className: V.marginBottom40,
                        title: H.default.Messages.USER_DIRECT_MESSAGE_FILTERS,
                        children: [this.renderLegacyExplicitContentFilter(t), (0, a.jsxs)(E.FormItem, {
                            tag: E.FormTitleTags.H3,
                            className: V.marginBottom4,
                            title: H.default.Messages.USER_DM_SPAM_FILTER,
                            children: [(0, a.jsx)(E.FormText, {
                                type: E.FormTextTypes.DESCRIPTION,
                                className: V.marginBottom8,
                                children: H.default.Messages.USER_DM_SPAM_FILTER_HELP.format({
                                    appealLink: b.default.getArticleURL(G.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                                })
                            }), (0, a.jsx)(E.RadioGroup, {
                                value: t,
                                options: (0, U.generateDmSpamOptions)(),
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return y.DmSpamFilterV2.updateSetting(t)
                                }
                            })]
                        })]
                    })
                }
                renderServerPrivacy() {
                    let {
                        viewNsfwGuilds: e,
                        currentUser: t,
                        isStricterMessageRequests: s,
                        viewNsfwCommands: n
                    } = this.props, {
                        defaultGuildsRestricted: l,
                        defaultMessageRequestRestricted: i
                    } = this.state, r = !0 === t.nsfwAllowed;
                    return (0, a.jsxs)(E.FormSection, {
                        className: V.marginBottom40,
                        children: [(0, a.jsx)(E.FormTitle, {
                            tag: E.FormTitleTags.H5,
                            className: V.marginBottom8,
                            children: H.default.Messages.USER_DM_SETTINGS
                        }), (0, a.jsx)(E.FormSwitch, {
                            value: !l,
                            note: H.default.Messages.USER_DM_SETTINGS_HELP,
                            onChange: this.handleChangeDefaultGuildsRestricted,
                            children: H.default.Messages.NEW_GUILDS_DM_ALLOWED
                        }), (0, a.jsx)(E.FormSwitch, {
                            value: !!r && e,
                            note: H.default.Messages.NSFW_GUILDS_TOGGLE_CAPTION,
                            disabled: !r,
                            onChange: y.ViewNsfwGuilds.updateSetting,
                            children: H.default.Messages.NSFW_GUILDS_TOGGLE_HEADER
                        }), !s && (0, a.jsx)(E.FormSwitch, {
                            value: !i,
                            note: H.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_CAPTION.format({
                                helpdeskArticle: b.default.getArticleURL(G.HelpdeskArticles.MESSAGE_REQUESTS)
                            }),
                            disabled: l,
                            onChange: this.handleChangeDefaultMessageRequestRestricted,
                            children: H.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_HEADER
                        }), (0, a.jsx)(E.FormSwitch, {
                            value: !!r && n,
                            note: H.default.Messages.NSFW_DM_COMMANDS_CAPTION,
                            disabled: !r,
                            onChange: y.ViewNsfwCommands.updateSetting,
                            children: H.default.Messages.NSFW_DM_COMMANDS_HEADER
                        })]
                    })
                }
                renderDataPrivacy() {
                    let {
                        usageStatistics: e,
                        personalization: t,
                        dropsOptedOut: s
                    } = this.props;
                    return (0, a.jsxs)(E.FormSection, {
                        className: V.marginBottom40,
                        children: [(0, a.jsx)(E.FormTitle, {
                            tag: E.FormTitleTags.H5,
                            className: V.marginBottom8,
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS
                        }), (0, a.jsx)(E.FormSwitch, {
                            value: e,
                            note: H.default.Messages.DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_NOTE.format({
                                helpdeskArticle: b.default.getArticleURL(G.HelpdeskArticles.DATA_PRIVACY_CONTROLS)
                            }),
                            onChange: this.handleUsageStatisticsChange,
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_TITLE
                        }), (0, a.jsx)(E.FormSwitch, {
                            value: t,
                            note: H.default.Messages.DATA_PRIVACY_CONTROLS_PERSONALIZATION_NOTE_LEARN_MORE.format({
                                helpdeskArticle: b.default.getArticleURL(G.HelpdeskArticles.DATA_PRIVACY_CONTROLS)
                            }),
                            hideBorder: !0,
                            onChange: this.handlePersonalizationChange,
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS_PERSONALIZATION_TITLE
                        }), (0, a.jsx)(E.FormSwitch, {
                            value: !s && t,
                            note: (0, a.jsxs)("div", {
                                className: w.dependentSetting,
                                children: [H.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT_NOTE, s ? (0, a.jsx)("div", {
                                    className: i(V.marginTop8, w.feedback),
                                    children: H.default.Messages.DROPS_REQUEST_FEEDBACK_OPT_OUT.format({
                                        feedbackURL: "https://survey.alchemer.com/s3/7043738/Discord-Drops-Opt-Out-Survey?user_id=".concat(this.props.currentUser.id)
                                    })
                                }) : null]
                            }),
                            disabled: !t,
                            onChange: this.handleChangeDropsOptedOut,
                            children: (0, a.jsxs)("div", {
                                className: i(w.betaTagContainer, w.dependentSetting),
                                children: [H.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT, (0, a.jsx)(N.default, {
                                    className: w.betaTagIcon
                                })]
                            })
                        }), (0, a.jsx)(E.FormTitle, {
                            tag: E.FormTitleTags.H3,
                            className: i(V.marginTop20, V.marginBottom8),
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS_BASIC_SERVICE_TITLE
                        }), (0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: V.marginBottom20,
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS_BASIC_SERVICE_NOTE.format({
                                onClick: () => {
                                    _.default.setSection(G.UserSettingsSections.ACCOUNT)
                                }
                            })
                        }), this.renderHarvestRequest()]
                    })
                }
                renderHarvestRequest() {
                    let e;
                    let {
                        currentUser: t
                    } = this.props, {
                        requestingHarvest: s,
                        currentHarvestRequest: l
                    } = this.state, i = (0, B.harvestDisabled)(l, t), r = (0, a.jsx)(E.Tooltip, {
                        text: t.verified ? null : H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_TOOLTIP,
                        children: e => {
                            let {
                                onMouseEnter: t,
                                onMouseLeave: n
                            } = e;
                            return (0, a.jsx)(E.Button, {
                                disabled: i,
                                onClick: this.handleDataDownloadRequest,
                                onMouseEnter: t,
                                onMouseLeave: n,
                                look: E.Button.Looks.OUTLINED,
                                color: E.Button.Colors.BRAND,
                                submitting: s,
                                children: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_DOWNLOAD
                            })
                        }
                    });
                    return i && null != l && (e = (0, a.jsx)(E.Card, {
                        className: w.card,
                        children: (0, a.jsx)(E.Text, {
                            variant: "text-md/normal",
                            children: H.default.Messages.DATA_DOWNLOAD_REQUESTED_STATUS_NOTE.format({
                                date: u(l.created_at).add(G.REQUEST_DATA_LIMIT_DAYS, "days").format("MMMM Do YYYY")
                            })
                        })
                    }), r = null), null != r && (r = (0, a.jsx)(L.default, {
                        children: r
                    })), (0, a.jsxs)(n.Fragment, {
                        children: [(0, a.jsx)(E.FormDivider, {
                            className: V.marginBottom20
                        }), (0, a.jsx)(E.FormTitle, {
                            tag: E.FormTitleTags.H3,
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS_PERSONAL_DATA_TITLE
                        }), (0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: V.marginBottom20,
                            children: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_NOTE.format({
                                helpdeskArticle: b.default.getArticleURL(G.HelpdeskArticles.GDPR_REQUEST_DATA)
                            })
                        }), e, r]
                    })
                }
                renderPrivacyAndTermsNote() {
                    return (0, a.jsx)(E.FormSection, {
                        className: V.marginBottom40,
                        children: (0, a.jsx)(E.FormNotice, {
                            type: E.FormNotice.Types.PRIMARY,
                            body: H.default.Messages.USER_SETTINGS_PRIVACY_TERMS.format({
                                termsLink: G.MarketingURLs.TERMS,
                                privacyLink: G.MarketingURLs.PRIVACY
                            })
                        })
                    })
                }
                renderStaffOnlySettings() {
                    let {
                        currentUser: e,
                        nonSpamRetrainingOptIn: t
                    } = this.props;
                    return e.isStaff() ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(E.FormDivider, {
                            className: V.marginBottom20
                        }), (0, a.jsxs)(E.FormSection, {
                            className: V.marginBottom40,
                            children: [(0, a.jsx)(E.FormTitle, {
                                tag: E.FormTitleTags.H5,
                                className: V.marginBottom8,
                                children: H.default.Messages.PRIVACY_SETTINGS_STAFF_ONLY_HEADER
                            }), (0, a.jsxs)(E.FormItem, {
                                tag: E.FormTitleTags.H5,
                                className: V.marginBottom4,
                                children: [(0, a.jsx)(E.FormText, {
                                    type: E.FormTextTypes.DESCRIPTION,
                                    className: V.marginBottom8,
                                    children: H.default.Messages.PRIVACY_SETTINGS_STAFF_ONLY_DESC
                                }), (0, a.jsx)(E.RadioGroup, {
                                    options: (0, B.generateNonSpamRetrainingOptInSettingOptions)(),
                                    value: null == t ? B.NonSpamRetrainingOptInOptions.UNDECIDED : t ? B.NonSpamRetrainingOptInOptions.OPTIN : B.NonSpamRetrainingOptInOptions.OPTOUT,
                                    onChange: e => {
                                        let {
                                            value: t
                                        } = e;
                                        return y.NonSpamRetrainingOptIn.updateSetting(B.NonSpamRetrainingOptInOptionsToValue[t])
                                    }
                                })]
                            })]
                        })]
                    }) : null
                }
                renderSettingsBody() {
                    let {
                        fetchedConsents: e
                    } = this.props;
                    return (0, a.jsxs)(E.FormSection, {
                        tag: E.FormTitleTags.H1,
                        title: H.default.Messages.PRIVACY_AND_SAFETY,
                        children: [this.renderDMSafety(), this.renderServerPrivacy(), e ? this.renderDataPrivacy() : null, this.renderPrivacyAndTermsNote(), this.renderStaffOnlySettings()]
                    })
                }
                render() {
                    let {
                        safetyHubIsEnabled: e,
                        safetyHubFetchError: t,
                        subsection: s
                    } = this.props, {
                        selectedTab: n
                    } = this.state;
                    if (e) {
                        null != s && this.setState({
                            selectedTab: s
                        });
                        let e = n === k.SafetyHubView.ACCOUNT_STANDING && null != t;
                        return (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsxs)(E.TabBar, {
                                className: w.settingsTabBar,
                                "aria-label": H.default.Messages.SAFETY_HUB_PAGE_TITLE,
                                selectedItem: n,
                                type: "top",
                                look: "brand",
                                onItemSelect: this.handleTabSelect,
                                children: [(0, a.jsx)(E.TabBar.Item, {
                                    className: w.settingsTabBarItem,
                                    id: k.SafetyHubView.SETTINGS,
                                    "aria-label": H.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SETTINGS,
                                    children: H.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SETTINGS
                                }), (0, a.jsx)(E.TabBar.Item, {
                                    className: w.settingsTabBarItem,
                                    id: k.SafetyHubView.ACCOUNT_STANDING,
                                    "aria-label": H.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT,
                                    children: H.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT
                                })]
                            }), (0, a.jsx)(E.TabBar.Panel, {
                                id: n,
                                "aria-labelledby": (0, P.uid)(),
                                className: [e ? w.contentPanelNagbar : "", w.contentPanel].join(" "),
                                children: (0, a.jsx)("div", {
                                    children: this.SETTINGS_TABS[n]()
                                })
                            })]
                        })
                    }
                    return this.renderSettingsBody()
                }
                constructor(e) {
                    super(e), this.SETTINGS_TABS = {
                        [k.SafetyHubView.SETTINGS]: () => this.renderSettingsBody(),
                        [k.SafetyHubView.ACCOUNT_STANDING]: () => (0, a.jsx)(x.default, {})
                    }, this.handleChangeDefaultGuildsRestricted = e => {
                        this.setState({
                            defaultGuildsRestricted: !e
                        }, () => this.showGuildRestrictionModal(!e))
                    }, this.handleChangeDropsOptedOut = () => {
                        this.props.personalization && y.DropsOptedOut.updateSetting(!this.props.dropsOptedOut)
                    }, this.handleChangeDefaultMessageRequestRestricted = e => {
                        this.setState({
                            defaultMessageRequestRestricted: !e
                        }, () => this.showMessageRequestRestrictionModal(!e))
                    }, this.handleUsageStatisticsChange = () => {
                        let e = !this.props.usageStatistics;
                        e ? (0, T.setConsents)([G.Consents.USAGE_STATISTICS], []).catch(W) : Y({
                            header: H.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_TITLE,
                            body: H.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_BODY,
                            confirmText: H.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_CONFIRM,
                            cancelText: H.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_CANCEL,
                            onConfirm: () => (0, T.setConsents)([], [G.Consents.USAGE_STATISTICS]).catch(W)
                        })
                    }, this.handlePersonalizationChange = () => {
                        let e = !this.props.personalization;
                        e ? (0, T.setConsents)([G.Consents.PERSONALIZATION], []).catch(W) : Y({
                            header: H.default.Messages.PERSONALIZATION_DISABLE_MODAL_TITLE,
                            confirmText: H.default.Messages.PERSONALIZATION_DISABLE_MODAL_CONFIRM,
                            cancelText: H.default.Messages.PERSONALIZATION_DISABLE_MODAL_CANCEL,
                            onConfirm: () => {
                                (0, T.setConsents)([], [G.Consents.PERSONALIZATION]).catch(W), y.DropsOptedOut.updateSetting(!0)
                            },
                            body: H.default.Messages.PERSONALIZATION_DISABLE_MODAL_BODY
                        })
                    }, this.handleDataDownloadRequest = () => {
                        Y({
                            header: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_TITLE,
                            body: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_NOTE,
                            confirmText: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_CONFIRM,
                            cancelText: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_CANCEL,
                            onConfirm: () => {
                                this.setState({
                                    requestingHarvest: !0
                                }, () => {
                                    (0, m.requestHarvest)().then(e => {
                                        null != e && null != e.body ? (this.setState({
                                            currentHarvestRequest: e.body
                                        }), f.default.show({
                                            body: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_SUCCESS
                                        })) : f.default.show({
                                            title: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                                            body: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_BODY
                                        })
                                    }, () => f.default.show({
                                        title: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                                        body: H.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_BODY
                                    })).finally(() => this.setState({
                                        requestingHarvest: !1
                                    }))
                                })
                            }
                        })
                    }, this.handleTabSelect = e => {
                        this.setState({
                            selectedTab: e
                        })
                    };
                    let {
                        defaultGuildsRestricted: t,
                        defaultMessageRequestRestricted: s
                    } = e;
                    this.state = {
                        defaultGuildsRestricted: t,
                        defaultMessageRequestRestricted: s,
                        currentHarvestRequest: null,
                        requestingHarvest: !0,
                        selectedTab: k.SafetyHubView.SETTINGS
                    }
                }
            }

            function z() {
                let e = (0, c.useStateFromStores)([D.default], () => {
                        let e = D.default.getCurrentUser();
                        return o(null != e, "ConnectedUserSettingsPrivacySafety: currentUser cannot be undefined"), e
                    }),
                    t = (0, c.useStateFromStoresObject)([R.default], () => ({
                        fetchedConsents: R.default.fetchedConsents,
                        usageStatistics: R.default.hasConsented(G.Consents.USAGE_STATISTICS),
                        personalization: R.default.hasConsented(G.Consents.PERSONALIZATION)
                    })),
                    s = (0, A.useIsSafetyHubEnabled)(),
                    n = (0, c.useStateFromStores)([O.default], () => O.default.getFetchError()),
                    l = (0, c.useStateFromStores)([v.default], () => v.default.getSubsection()),
                    i = (0, g.useIsEligibleForExplicitMediaRedaction)(),
                    r = (0, I.useExplicitContentSettingOrDefault)(),
                    d = (0, C.default)();
                return (0, a.jsx)(K, {
                    currentUser: e,
                    defaultGuildsRestricted: y.DefaultGuildsRestricted.useSetting(),
                    defaultMessageRequestRestricted: y.MessageRequestRestrictedDefault.useSetting(),
                    nonSpamRetrainingOptIn: y.NonSpamRetrainingOptIn.useSetting(),
                    isStricterMessageRequests: (0, p.default)(),
                    viewNsfwGuilds: y.ViewNsfwGuilds.useSetting(),
                    viewNsfwCommands: y.ViewNsfwCommands.useSetting(),
                    explicitContentFilter: y.ExplicitContentFilter.useSetting(),
                    dmSpamFilter: y.DmSpamFilterV2.useSetting(),
                    showCurrentGame: y.ShowCurrentGame.useSetting(),
                    dropsOptedOut: y.DropsOptedOut.useSetting(),
                    safetyHubIsEnabled: s,
                    safetyHubFetchError: n,
                    mediaRedactionIsEnabled: i,
                    explicitContentSettingGuilds: r.explicitContentGuilds,
                    explicitContentSettingFriendDm: r.explicitContentFriendDm,
                    explicitContentSettingNonFriendDm: r.explicitContentNonFriendDm,
                    userIsConsideredAdult: null == d || d,
                    subsection: l,
                    ...t
                })
            }
        },
        819638: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return R
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("872717"),
                d = s("151426"),
                u = s("77078"),
                c = s("79112"),
                S = s("642950"),
                E = s("158645"),
                f = s("917454"),
                T = s("10641"),
                m = s("102985"),
                _ = s("697218"),
                g = s("104359"),
                h = s("945330"),
                I = s("216947"),
                N = s("267675"),
                p = s("449008"),
                C = s("49111"),
                A = s("994428"),
                O = s("782340"),
                x = s("738318");

            function R() {
                let e;
                let {
                    currentSession: t,
                    otherSessions: s
                } = (0, f.useAuthSessions)(), l = (0, r.useStateFromStores)([m.default], () => m.default.hidePersonalInformation), i = (0, r.useStateFromStores)([_.default], () => _.default.getCurrentUser()), [c, g] = n.useState(!1);
                n.useEffect(() => {
                    (0, T.markDismissibleContentAsDismissed)(d.DismissibleContent.AUTH_SESSIONS_NEW, {
                        dismissAction: A.ContentDismissActionType.AUTO
                    }), (0, E.fetchAuthSessions)();
                    let e = setTimeout(() => g(!0), 500);
                    return () => {
                        clearTimeout(e), (0, E.clearAuthSessions)()
                    }
                }, []);
                let h = () => {
                        o.default.post({
                            url: C.Endpoints.AUTH_SESSION_NOTIFICATIONS_DEBUG
                        })
                    },
                    [I, N] = n.useState(new Set);
                return l ? (0, a.jsx)(S.default, {}) : (e = null == t && 0 === s.length ? c ? (0, a.jsx)("div", {
                    className: x.loading,
                    children: (0, a.jsx)(u.Spinner, {})
                }) : null : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: x.sessions,
                        children: [(0, a.jsx)(u.FormSection, {
                            tag: u.FormTitleTags.H5,
                            title: O.default.Messages.AUTH_SESSIONS_CURRENT,
                            titleClassName: x.groupTitle,
                            children: null != t ? (0, a.jsx)(M, {
                                session: t,
                                current: !0
                            }) : null
                        }), !(s.length > 0) && (null == i ? void 0 : i.mfaEnabled) ? null : (0, a.jsxs)(u.FormSection, {
                            tag: u.FormTitleTags.H5,
                            title: O.default.Messages.AUTH_SESSIONS_OTHERS,
                            titleClassName: x.groupTitle,
                            className: x.otherSessions,
                            children: [s.map(e => (0, a.jsx)(M, {
                                session: e,
                                useChecks: I.size > 0,
                                checked: I.has(e.id_hash),
                                setChecked: t => {
                                    let s = new Set(I);
                                    t ? s.add(e.id_hash) : s.delete(e.id_hash), N(s)
                                }
                            }, e.id_hash)), (null == i ? void 0 : i.mfaEnabled) ? null : (0, a.jsx)(v, {})]
                        })]
                    }), s.length > 0 ? (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H5,
                        title: I.size > 0 ? O.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_SELECTED_TITLE : O.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_TITLE,
                        children: [(0, a.jsx)(u.FormText, {
                            type: u.FormTextTypes.DESCRIPTION,
                            children: O.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_DESCRIPTION
                        }), (0, a.jsx)(u.Button, {
                            look: u.Button.Looks.OUTLINED,
                            color: u.Button.Colors.RED,
                            size: u.Button.Sizes.SMALL,
                            className: x.logOutAllButton,
                            onClick: () => {
                                I.size > 0 ? (0, E.logOutSessions)(Array.from(I)) : (0, E.logOutSessions)(s.map(e => e.id_hash))
                            },
                            children: I.size > 0 ? O.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_SELECTED_ACTION.format({
                                count: I.size
                            }) : O.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_ACTION
                        })]
                    }) : null]
                }), (0, a.jsxs)(u.FormSection, {
                    tag: u.FormTitleTags.H1,
                    title: O.default.Messages.AUTH_SESSIONS,
                    children: [(0, a.jsx)(u.FormText, {
                        type: u.FormTextTypes.DESCRIPTION,
                        className: x.description,
                        children: O.default.Messages.AUTH_SESSIONS_DESCRIPTION
                    }), (null == i ? void 0 : i.isStaff()) ? (0, a.jsxs)("div", {
                        className: x.tools,
                        children: [(0, a.jsx)(u.Text, {
                            className: x.toolsTitle,
                            variant: "text-md/bold",
                            children: "DEV TOOLS"
                        }), (0, a.jsx)(u.Text, {
                            className: x.toolsTitle,
                            variant: "text-sm/normal",
                            color: "text-danger",
                            children: "These tools are only shown to staff users."
                        }), (0, a.jsx)(u.Tooltip, {
                            text: "Triggers mobile and email suspicious session notifications for the current user",
                            children: e => {
                                let {
                                    onMouseEnter: t,
                                    onMouseLeave: s
                                } = e;
                                return (0, a.jsx)(u.Button, {
                                    size: u.Button.Sizes.SMALL,
                                    color: u.Button.Colors.PRIMARY,
                                    onClick: h,
                                    onMouseEnter: t,
                                    onMouseLeave: s,
                                    children: "Trigger Suspicious Sessions Notification"
                                })
                            }
                        })]
                    }) : null, e]
                }))
            }

            function M(e) {
                var t, s, n, l, r;
                let {
                    session: o,
                    current: d,
                    setChecked: c,
                    checked: S,
                    useChecks: T
                } = e, m = null !== (r = null === (t = o.client_info) || void 0 === t ? void 0 : t.location) && void 0 !== r ? r : null === (s = o.client_info) || void 0 === s ? void 0 : s.ip, _ = null === (n = o.client_info) || void 0 === n ? void 0 : n.platform, {
                    text: g,
                    icon: C
                } = function(e) {
                    switch (null == e ? void 0 : e.toLowerCase().trim()) {
                        case null:
                        case void 0:
                        case "":
                            return {
                                text: O.default.Messages.AUTH_SESSIONS_OS_UNKNOWN, icon: N.default
                            };
                        case "ios":
                        case "android":
                            return {
                                text: e, icon: I.default
                            };
                        default:
                            return {
                                text: e, icon: N.default
                            }
                    }
                }(null === (l = o.client_info) || void 0 === l ? void 0 : l.os), A = d ? null : (0, f.formatDate)(o.approx_last_used_time), R = [g, _].filter(p.isNotNullish), M = [m, A].filter(p.isNotNullish), v = (0, u.useRedesignIconContext)().enabled, D = v ? 24 : 32;
                return (0, a.jsxs)("div", {
                    className: i(x.session, d ? x.currentSession : null),
                    children: [(0, a.jsx)("div", {
                        className: x.sessionIcon,
                        children: (0, a.jsx)(C, {
                            width: D,
                            height: D
                        })
                    }), (0, a.jsxs)("div", {
                        className: x.sessionInfo,
                        children: [(0, a.jsxs)(u.Text, {
                            variant: "eyebrow",
                            className: x.sessionInfoRow,
                            children: [(0, a.jsx)("span", {
                                children: R[0]
                            }), R.length > 1 && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)("span", {
                                    children: "\xb7"
                                }), (0, a.jsx)("span", {
                                    children: R[1]
                                })]
                            })]
                        }), (0, a.jsxs)(u.Text, {
                            variant: "text-sm/medium",
                            className: x.sessionInfoRow,
                            children: [(0, a.jsx)("span", {
                                children: M[0]
                            }), M.length > 1 && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)("span", {
                                    children: "\xb7"
                                }), (0, a.jsx)("span", {
                                    children: M[1]
                                })]
                            })]
                        })]
                    }), d ? null : T ? (0, a.jsx)("div", {
                        className: x.sessionCheckbox,
                        children: (0, a.jsx)(u.Checkbox, {
                            onChange: (e, t) => {
                                null == c || c(t)
                            },
                            value: S
                        })
                    }) : (0, a.jsx)(u.Clickable, {
                        className: x.sessionMoreButton,
                        onClick: e => {
                            e.shiftKey ? null == c || c(!0) : (0, E.logOutSessions)(o.id_hash)
                        },
                        "aria-label": O.default.Messages.AUTH_SESSIONS_SESSION_LOG_OUT,
                        children: (0, a.jsx)(h.default, {})
                    })]
                }, o.id_hash)
            }

            function v() {
                return (0, a.jsxs)("div", {
                    className: i(x.session, x.legacySession),
                    children: [(0, a.jsx)("div", {
                        className: x.sessionIcon,
                        children: (0, a.jsx)(g.default, {
                            width: "32",
                            height: "32"
                        })
                    }), (0, a.jsxs)("div", {
                        className: x.sessionInfo,
                        children: [(0, a.jsx)(u.Text, {
                            variant: "eyebrow",
                            className: x.sessionInfoRow,
                            color: "text-muted",
                            children: (0, a.jsx)("span", {
                                children: O.default.Messages.AUTH_SESSIONS_UNKNOWN_LEGACY
                            })
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-sm/medium",
                            className: x.sessionInfoRow,
                            color: "text-muted",
                            children: (0, a.jsx)("span", {
                                children: O.default.Messages.AUTH_SESSIONS_UNKNOWN_LEGACY_LOG_OUT.format({
                                    onClick: () => c.default.setSection(C.UserSettingsSections.ACCOUNT)
                                })
                            })
                        })]
                    })]
                })
            }
        },
        114582: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("446674"),
                r = s("77078"),
                o = s("52289"),
                d = s("79112"),
                u = s("49671"),
                c = s("102985"),
                S = s("773336"),
                E = s("49111"),
                f = s("782340"),
                T = s("117592"),
                m = s("926622");

            function _() {
                var e, t, n;
                let {
                    enabled: _,
                    autoToggle: g,
                    hideInstantInvites: h,
                    hidePersonalInformation: I,
                    disableSounds: N,
                    disableNotifications: p,
                    enableContentProtection: C
                } = (0, i.useStateFromStoresObject)([c.default], () => ({
                    ...c.default.getSettings()
                })), A = (e, t) => {
                    o.default.update({
                        [e]: t
                    })
                }, O = null !== (n = null === u.default || void 0 === u.default ? void 0 : null === (t = u.default.window) || void 0 === t ? void 0 : null === (e = t.supportsContentProtection) || void 0 === e ? void 0 : e.call(t)) && void 0 !== n && n;
                return (0, a.jsxs)(r.FormSection, {
                    className: T.container,
                    tag: r.FormTitleTags.H1,
                    title: f.default.Messages.STREAMER_MODE,
                    children: [(0, a.jsx)(r.FormNotice, {
                        className: m.marginBottom40,
                        iconClassName: T.noticeIcon,
                        type: r.FormNoticeTypes.PRIMARY,
                        imageData: {
                            src: s("471208"),
                            width: 184,
                            height: 110,
                            position: r.FormNoticeImagePositions.RIGHT
                        },
                        title: f.default.Messages.USER_SETTINGS_STREAMER_NOTICE_TITLE,
                        body: f.default.Messages.USER_SETTINGS_STREAMER_NOTICE_BODY.format({
                            streamkitURL: E.MarketingURLs.STREAMKIT
                        })
                    }), (0, a.jsx)(r.FormSwitch, {
                        value: _,
                        onChange: e => A("enabled", e),
                        note: f.default.Messages.ENABLE_STREAMER_MODE_DESCRIPTION.format({
                            onClick: () => {
                                d.default.setSection(E.UserSettingsSections.KEYBINDS)
                            }
                        }),
                        children: f.default.Messages.ENABLE_STREAMER_MODE_LABEL
                    }), (() => {
                        if (S.isPlatformEmbedded) return (0, a.jsx)(r.FormSwitch, {
                            value: g,
                            onChange: e => A("autoToggle", e),
                            note: f.default.Messages.AUTO_TOGGLE_STREAMER_MODE_DESCRIPTION,
                            children: f.default.Messages.AUTO_TOGGLE_STREAMER_MODE_LABEL
                        })
                    })(), (0, a.jsx)(r.FormTitle, {
                        className: l(m.marginTop40, m.marginBottom8),
                        children: f.default.Messages.OPTIONS
                    }), (0, a.jsx)(r.FormSwitch, {
                        value: I,
                        onChange: e => A("hidePersonalInformation", e),
                        note: f.default.Messages.HIDE_PERSONAL_INFORMATION_DESCRIPTION,
                        children: f.default.Messages.HIDE_PERSONAL_INFORMATION_LABEL
                    }), (0, a.jsx)(r.FormSwitch, {
                        value: h,
                        onChange: e => A("hideInstantInvites", e),
                        note: f.default.Messages.HIDE_INSTANT_INVITES_DESCRIPTION,
                        children: f.default.Messages.HIDE_INSTANT_INVITES_LABEL
                    }), (0, a.jsx)(r.FormSwitch, {
                        value: N,
                        onChange: e => A("disableSounds", e),
                        note: f.default.Messages.DISABLE_SOUNDS_DESCRIPTION,
                        children: f.default.Messages.DISABLE_SOUNDS_LABEL
                    }), (0, a.jsx)(r.FormSwitch, {
                        value: p,
                        onChange: e => A("disableNotifications", e),
                        note: f.default.Messages.DISABLE_NOTIFICATIONS_DESCRIPTION,
                        children: f.default.Messages.DISABLE_NOTIFICATIONS_LABEL
                    }), O && (0, a.jsx)(r.FormSwitch, {
                        value: C,
                        onChange: e => A("enableContentProtection", e),
                        note: f.default.Messages.HIDE_WINDOW_FROM_STREAM_DESCRIPTION,
                        children: f.default.Messages.HIDE_WINDOW_FROM_STREAM_LABEL
                    })]
                })
            }
        },
        995350: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("812204"),
                o = s("685665"),
                d = s("367376"),
                u = s("599110"),
                c = s("845579"),
                S = s("49111"),
                E = s("782340"),
                f = s("926622");

            function T() {
                let e = c.ExpressionSuggestionsEnabled.useSetting(),
                    t = c.IncludeStickersInAutocomplete.useSetting(),
                    s = c.UseRichChatInput.useSetting(),
                    n = c.RenderSpoilers.useSetting(),
                    T = c.UseThreadSidebar.useSetting(),
                    m = c.ViewImageDescriptions.useSetting(),
                    _ = c.ConvertEmoticons.useSetting(),
                    g = c.InlineAttachmentMedia.useSetting(),
                    h = c.InlineEmbedMedia.useSetting(),
                    I = c.RenderEmbeds.useSetting(),
                    N = c.RenderReactions.useSetting(),
                    {
                        analyticsLocations: p
                    } = (0, o.default)(r.default.TEXT_AND_IMAGES);
                return (0, a.jsxs)(i.FormSection, {
                    tag: i.FormTitleTags.H1,
                    title: E.default.Messages.TEXT_AND_IMAGES,
                    children: [(0, a.jsx)(i.FormTitle, {
                        className: f.marginBottom8,
                        children: E.default.Messages.INLINE_MEDIA_LABEL
                    }), (0, a.jsx)(i.FormSwitch, {
                        className: l(f.marginTop8, f.marginBottom20),
                        value: h,
                        onChange: c.InlineEmbedMedia.updateSetting,
                        children: E.default.Messages.INLINE_EMBED_MEDIA
                    }), (0, a.jsx)(i.FormSwitch, {
                        className: l(f.marginTop8, f.marginBottom20),
                        value: g,
                        note: E.default.Messages.INLINE_ATTACHMENT_MEDIA_HELP.format({
                            maxSize: 10
                        }),
                        onChange: c.InlineAttachmentMedia.updateSetting,
                        children: E.default.Messages.INLINE_ATTACHMENT_MEDIA
                    }), (0, a.jsx)(i.FormSwitch, {
                        className: l(f.marginTop8, f.marginBottom20),
                        value: m,
                        note: E.default.Messages.IMAGE_DESCRIPTION_HELP,
                        onChange: c.ViewImageDescriptions.updateSetting,
                        children: E.default.Messages.USER_SETTINGS_WITH_IMAGE_DESCRIPTIONS
                    }), (0, a.jsx)(i.FormTitle, {
                        className: f.marginBottom8,
                        children: E.default.Messages.RENDER_EMBEDS_LABEL
                    }), (0, a.jsx)(i.FormSwitch, {
                        className: l(f.marginTop8, f.marginBottom40),
                        value: I,
                        onChange: c.RenderEmbeds.updateSetting,
                        children: E.default.Messages.RENDER_EMBEDS
                    }), (0, a.jsx)(i.FormTitle, {
                        className: f.marginBottom8,
                        children: E.default.Messages.EMOJI
                    }), (0, a.jsx)(i.FormSwitch, {
                        className: l(f.marginTop8, f.marginBottom20),
                        value: N,
                        onChange: c.RenderReactions.updateSetting,
                        children: E.default.Messages.RENDER_REACTIONS
                    }), (0, a.jsx)(i.FormSwitch, {
                        className: f.marginBottom40,
                        value: _,
                        note: d.default.parse(E.default.Messages.CONVERT_EMOTICONS_HELP),
                        onChange: c.ConvertEmoticons.updateSetting,
                        children: E.default.Messages.CONVERT_EMOTICONS
                    }), (0, a.jsxs)(i.FormSection, {
                        className: f.marginBottom8,
                        children: [(0, a.jsx)(i.FormTitle, {
                            className: f.marginBottom8,
                            children: E.default.Messages.STICKERS_AUTO_PLAY_HEADING
                        }), (0, a.jsx)(i.FormSwitch, {
                            className: l(f.marginTop8, f.marginBottom20),
                            value: e,
                            note: E.default.Messages.AUTO_SUGGEST_STICKERS_DESCRIPTION,
                            onChange: t => {
                                u.default.track(S.AnalyticEvents.STICKER_SUGGESTIONS_ENABLED_TOGGLED, {
                                    enabled: !e,
                                    location: {
                                        section: S.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES
                                    },
                                    location_stack: p
                                }), c.ExpressionSuggestionsEnabled.updateSetting(!e)
                            },
                            children: E.default.Messages.AUTO_SUGGEST_STICKERS
                        }), (0, a.jsx)(i.FormSwitch, {
                            className: f.marginBottom40,
                            value: t,
                            note: E.default.Messages.INCLUDE_STICKER_RESULTS_IN_AUTOCOMPLETE,
                            onChange: e => {
                                u.default.track(S.AnalyticEvents.STICKERS_IN_AUTOCOMPLETE_TOGGLED, {
                                    enabled: e,
                                    location: {
                                        section: S.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES
                                    },
                                    location_stack: p
                                }), c.IncludeStickersInAutocomplete.updateSetting(e)
                            },
                            children: E.default.Messages.STICKERS_IN_AUTOCOMPLETE
                        })]
                    }), (0, a.jsxs)(i.FormSection, {
                        className: f.marginBottom8,
                        children: [(0, a.jsx)(i.FormTitle, {
                            className: f.marginBottom8,
                            children: E.default.Messages.FORM_LABEL_USE_RICH_CHAT_BOX
                        }), (0, a.jsx)(i.FormSwitch, {
                            className: f.marginTop8,
                            value: s,
                            onChange: e => {
                                u.default.track(S.AnalyticEvents.PREVIEW_MARKDOWN_TOGGLED, {
                                    enabled: e,
                                    location: {
                                        section: S.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES
                                    }
                                }), c.UseRichChatInput.updateSetting(e)
                            },
                            children: E.default.Messages.PREVIEW_MARKDOWN_DESCRIPTION
                        })]
                    }), (0, a.jsxs)(i.FormSection, {
                        className: f.marginBottom40,
                        children: [(0, a.jsx)(i.FormTitle, {
                            className: f.marginBottom8,
                            children: E.default.Messages.THREADS
                        }), (0, a.jsx)(i.FormSwitch, {
                            className: f.marginTop8,
                            value: T,
                            onChange: c.UseThreadSidebar.updateSetting,
                            children: E.default.Messages.USE_THREADS_SIDEBAR_DESCRIPTION
                        })]
                    }), (0, a.jsxs)(i.FormItem, {
                        title: E.default.Messages.SHOW_SPOILER_CONTENT,
                        children: [(0, a.jsx)(i.FormText, {
                            type: i.FormText.Types.DESCRIPTION,
                            className: f.marginBottom8,
                            children: E.default.Messages.SHOW_SPOILER_CONTENT_HELP
                        }), (0, a.jsx)(i.RadioGroup, {
                            options: [{
                                name: E.default.Messages.SHOW_SPOILER_ON_CLICK,
                                value: S.SpoilerRenderSetting.ON_CLICK
                            }, {
                                name: E.default.Messages.SHOW_SPOILER_ON_SERVERS_I_MOD,
                                value: S.SpoilerRenderSetting.IF_MODERATOR
                            }, {
                                name: E.default.Messages.SHOW_SPOILER_ALWAYS,
                                value: S.SpoilerRenderSetting.ALWAYS
                            }],
                            onChange: e => c.RenderSpoilers.updateSetting(e.value),
                            value: n
                        })]
                    })]
                })
            }
        },
        409462: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("95410"),
                d = s("77078"),
                u = s("54239"),
                c = s("452804"),
                S = s("304580"),
                E = s("206230"),
                f = s("489740"),
                T = s("355025"),
                m = s("773336"),
                _ = s("161778"),
                g = s("49111"),
                h = s("782340"),
                I = s("840280");
            let N = [{
                label: "Latin alphabet",
                value: "aBcDeFgHiJkLmNoPqRsTuVwXyZ"
            }, {
                label: "Latin pangram",
                value: "The quick brown fox jumps over the lazy dog"
            }, {
                label: "Greek alphabet",
                value: "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΆΈΉΊΌΎΏ"
            }, {
                label: "Greek pangram",
                value: "ΤΑΧΊΣΤΗ ΑΛΏΠΗΞ ΒΑΦΉΣ ΨΗΜΈΝΗ ΓΗ, ΔΡΑΣΚΕΛΊΖΕΙ ΥΠΈΡ ΝΩΘΡΟΎ ΚΥΝΌΣ"
            }, {
                label: "Cyrillic alphabet",
                value: "АБВГЃҐДЕЀЁЖЗИЙЍКЌЛМНОПРСТУЎФХЧЦШЩЏЬЪЫЉЊЅЄЭІЇЈЋЮЯЂѢѲѴ"
            }, {
                label: "Cyrillic pangram",
                value: "В ЧАЩАХ ЮГА ЖИЛ БЫ ЦИТРУС? ДА, НО ФАЛЬШИВЫЙ ЭКЗЕМПЛЯР!"
            }, {
                label: "Custom",
                value: "custom"
            }];

            function p(e, t) {
                let [s, a] = n.useState(() => {
                    let s = o.default.get(e);
                    return null != s ? s : t
                });
                return n.useEffect(() => {
                    o.default.set(e, s)
                }, [e, s]), [s, a]
            }

            function C() {
                let [e, t] = n.useState(Math.round(window.outerWidth / window.innerWidth * 100)), {
                    platformZoom: s,
                    theme: l
                } = (0, r.useStateFromStoresObject)([_.default, E.default], () => ({
                    theme: _.default.theme,
                    platformZoom: E.default.zoom
                })), [o, C] = n.useState(""), A = ["normal", "medium", "semibold", "bold", "extrabold"], O = new Map([
                    ["normal", 400],
                    ["medium", 500],
                    ["semibold", 600],
                    ["bold", 700],
                    ["extrabold", 800]
                ]);
                n.useEffect(() => {
                    !m.isPlatformEmbedded && window.addEventListener("resize", () => {
                        t(Math.round(window.outerWidth / window.innerWidth * 100))
                    })
                }, []);
                let x = m.isPlatformEmbedded ? s : e,
                    R = (0, r.useStateFromStores)([f.default], () => {
                        var e, t;
                        return (0, T.probablyHasBuildOverride)() ? null === (t = f.default.getCurrentBuildOverride()) || void 0 === t ? void 0 : null === (e = t.overrides) || void 0 === e ? void 0 : e.discord_web : null
                    }),
                    [M, v] = p("playground-overrideText", null),
                    [D, L] = p("playground-defaultText", N[0].value),
                    P = n.useCallback(e => {
                        let t = N.find(t => {
                            let {
                                value: s
                            } = t;
                            return s === e
                        });
                        "" === e || null == e ? (L(N[0].value), v(null)) : null != t ? L(t.value) : (L("custom"), v(e))
                    }, [v, L]);
                return (0, a.jsx)("div", {
                    className: I.fullscreen,
                    style: "" !== o ? {
                        "--playground-font-family": o
                    } : {},
                    children: (0, a.jsxs)(d.FormSection, {
                        tag: d.FormTitleTags.H1,
                        children: [(0, a.jsxs)("div", {
                            className: I.toolbar,
                            children: [(0, a.jsxs)("div", {
                                children: [(0, a.jsxs)(d.Text, {
                                    tag: "div",
                                    variant: "heading-lg/bold",
                                    style: {
                                        display: "inline-block"
                                    },
                                    children: ["Zoom: ", x, "%"]
                                }), null != R ? (0, a.jsxs)(d.Text, {
                                    tag: "div",
                                    variant: "heading-lg/bold",
                                    style: {
                                        display: "inline-block",
                                        marginLeft: "1em"
                                    },
                                    color: "header-secondary",
                                    children: ["(", R.id, ")"]
                                }) : null]
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)(d.SingleSelect, {
                                    className: I.select,
                                    options: N,
                                    onChange: e => P(e),
                                    value: D
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)("div", {
                                    className: I.input,
                                    children: (0, a.jsx)(d.TextInput, {
                                        placeholder: "Enter custom input...",
                                        value: null != M ? M : "",
                                        onChange: P
                                    })
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)("div", {
                                    className: I.input,
                                    children: (0, a.jsx)(d.TextInput, {
                                        placeholder: "Font family...",
                                        value: o,
                                        onChange: C
                                    })
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)(d.RadioGroup, {
                                    withTransparentBackground: !0,
                                    className: I.theme,
                                    orientation: "horizontal",
                                    options: [{
                                        name: h.default.Messages.THEME_DARK,
                                        value: g.ThemeTypes.DARK
                                    }, {
                                        name: h.default.Messages.THEME_LIGHT,
                                        value: g.ThemeTypes.LIGHT
                                    }],
                                    onChange: e => {
                                        (0, c.saveClientTheme)({
                                            theme: e.value
                                        })
                                    },
                                    value: l
                                })
                            }), (0, a.jsx)(S.default, {
                                closeAction: u.popLayer,
                                keybind: "ESC"
                            })]
                        }), (0, a.jsxs)("div", {
                            className: I.textGrid,
                            children: [(0, a.jsx)("div", {}), A.map(e => (0, a.jsx)("div", {
                                className: I.columnHeading,
                                children: (0, a.jsx)(d.Heading, {
                                    variant: "eyebrow",
                                    children: e
                                })
                            }, e)), [10, 12, 14, 15, 16, 18, 20, 24].map(e => (0, a.jsxs)(n.Fragment, {
                                children: [(0, a.jsxs)("div", {
                                    className: I.fontSize,
                                    children: [(0, a.jsxs)(d.Heading, {
                                        variant: "eyebrow",
                                        children: [e, "px"]
                                    }), 100 !== x ? (0, a.jsxs)(d.Heading, {
                                        variant: "eyebrow",
                                        color: "text-muted",
                                        children: ["(", e * x / 100, ")"]
                                    }) : null]
                                }, e), A.map(t => {
                                    var s;
                                    let n = null !== (s = "custom" === D ? M : D) && void 0 !== s ? s : "";
                                    return (0, a.jsx)("div", {
                                        children: (0, a.jsxs)("div", {
                                            title: "".concat(e, "px at ").concat(t),
                                            className: i(I.text, {
                                                [I.breakAnywhere]: !n.includes(" ")
                                            }),
                                            style: {
                                                fontSize: e,
                                                fontWeight: O.get(t)
                                            },
                                            children: [(0, a.jsx)("p", {
                                                children: n
                                            }), (0, a.jsx)("p", {
                                                style: {
                                                    textTransform: "lowercase"
                                                },
                                                children: n
                                            }), (0, a.jsx)("p", {
                                                style: {
                                                    textTransform: "uppercase"
                                                },
                                                children: n
                                            })]
                                        })
                                    }, "".concat(e, "-").concat(t))
                                })]
                            }, e))]
                        })]
                    })
                })
            }
        },
        799458: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("77078"),
                o = s("773336"),
                d = s("50885"),
                u = s("782340"),
                c = s("926622");
            class S extends n.PureComponent {
                async componentDidMount() {
                    this.setState({
                        openOnStartup: await d.default.getSetting("OPEN_ON_STARTUP", !0),
                        startMinimized: await d.default.getSetting("START_MINIMIZED", !1),
                        minimizeToTray: await d.default.getSetting("MINIMIZE_TO_TRAY", !0)
                    })
                }
                render() {
                    let {
                        openOnStartup: e,
                        startMinimized: t,
                        minimizeToTray: s
                    } = this.state, n = (0, o.isLinux)() ? u.default.Messages.USER_SETTINGS_LINUX_SETTINGS : u.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS;
                    return (0, a.jsxs)(r.FormSection, {
                        tag: r.FormTitleTags.H1,
                        title: n,
                        children: [(0, a.jsx)(r.FormTitle, {
                            children: u.default.Messages.USER_SETTINGS_STARTUP_BEHAVIOR
                        }), (0, a.jsx)(r.FormSwitch, {
                            className: c.marginBottom20,
                            value: e,
                            note: u.default.Messages.USER_SETTINGS_OPEN_ON_STARTUP_BODY,
                            onChange: this.handleToggleOpenOnStartup,
                            children: u.default.Messages.USER_SETTINGS_OPEN_ON_STARTUP_LABEL
                        }), (0, o.isWindows)() ? (0, a.jsx)(r.FormSwitch, {
                            disabled: !e,
                            className: i(c.marginTop8, c.marginBottom20),
                            value: !!e && t,
                            note: u.default.Messages.USER_SETTINGS_START_MINIMIZED_BODY,
                            onChange: this.handleToggleStartMinimized,
                            children: u.default.Messages.USER_SETTINGS_START_MINIMIZED_LABEL
                        }) : null, (0, a.jsx)(r.FormTitle, {
                            className: i(c.marginTop20, c.marginBottom8),
                            children: u.default.Messages.USER_SETTINGS_CLOSE_BUTTON
                        }), (0, a.jsx)(r.FormSwitch, {
                            className: c.marginBottom20,
                            value: s,
                            note: u.default.Messages.USER_SETTINGS_MINIMIZE_TO_TRAY_BODY,
                            onChange: this.handleToggleMinimizeToTray,
                            children: u.default.Messages.USER_SETTINGS_MINIMIZE_TO_TRAY_LABEL
                        })]
                    })
                }
                constructor(e) {
                    super(e), this.handleToggleOpenOnStartup = () => {
                        let e = !this.state.openOnStartup;
                        this.setState({
                            openOnStartup: e
                        }), d.default.send("TOGGLE_OPEN_ON_STARTUP", e)
                    }, this.handleToggleStartMinimized = () => {
                        let e = !this.state.startMinimized;
                        this.setState({
                            startMinimized: e
                        }), d.default.send("TOGGLE_START_MINIMIZED", e)
                    }, this.handleToggleMinimizeToTray = () => {
                        let e = !this.state.minimizeToTray;
                        this.setState({
                            minimizeToTray: e
                        }), d.default.send("TOGGLE_MINIMIZE_TO_TRAY", e)
                    }, this.state = {
                        openOnStartup: !0,
                        startMinimized: !1,
                        minimizeToTray: !0
                    }
                }
            }
            var E = S
        },
        227473: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("222007"), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("917351"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("211470"),
                u = s("789563"),
                c = s("305961"),
                S = s("810567"),
                E = s("843039"),
                f = s("327350"),
                T = s("565034"),
                m = s("477774");

            function _(e, t) {
                return e.map(e => {
                    let s = "object" == typeof t ? t[e + 1] : E.default.getExperimentBucketName(e);
                    return {
                        label: s,
                        value: e
                    }
                })
            }

            function g() {
                let e = (0, r.useStateFromStoresObject)([u.default], () => u.default.getAllExperimentOverrideDescriptors()),
                    t = (0, r.useStateFromStoresObject)([u.default], () => u.default.getRegisteredExperiments()),
                    [s, l] = n.useState(""),
                    i = (0, f.getBestMatches)((0, f.sortEntries)((0, f.getEntries)(t), e), s);
                return (0, a.jsxs)(o.FormSection, {
                    tag: o.FormTitleTags.H1,
                    title: "Experiments",
                    children: [(0,a.jsx)("div",{
                        className:`warning_card ${window.Happycord.Margins.marginBottom20}`,
                        children:[
                            (0,a.jsx)(window.Happycord.findByProps('Text').Text,{
                                variant: "text-lg/bold",
                                className:window.Happycord.Margins.marginBottom4,
                                children: "WARNING!!"
                            }),
                            (0,a.jsx)(window.Happycord.findByProps('Text').Text,{
                                variant: "text-sm/normal",
                                children: "Experiments are unreleased Discord features. They might not work, or even break your client or get your account disabled."
                            }),
                            (0,a.jsx)(window.Happycord.findByProps('Text').Text,{
                                variant: "text-sm/normal",
                                className:window.Happycord.Margins.marginTop8,
                                children: "Only use experiments if you know what you're doing. HappyCord is not responsible for any damage caused by enabling experiments."
                            }),
                        ]
                    }),(0, a.jsx)(S.default, {
                        size: S.default.Sizes.LARGE,
                        query: s,
                        onChange: l,
                        onClear: () => l("")
                    }), i.length > 0 ? i.map(t => {
                        let s = t.experiment.type === T.ExperimentTypes.GUILD ? I : h;
                        return (0, a.jsx)(s, {
                            experiment: t.experiment,
                            experimentId: t.id,
                            overrideDescriptor: e[t.id]
                        }, t.id)
                    }) : (0, a.jsx)("div", {
                        className: m.emptyState,
                        children: (0, a.jsx)(o.Heading, {
                            variant: "heading-md/semibold",
                            children: "No Experiments Found"
                        })
                    })]
                })
            }

            function h(e) {
                var t;
                let {
                    experiment: s,
                    experimentId: l,
                    overrideDescriptor: c
                } = e, [S, E] = n.useState(null != c), [f, g] = n.useState(!1), h = n.useCallback(() => {
                    E(e => !e)
                }, []), I = (0, r.useStateFromStores)([u.default], () => u.default.getUserExperimentDescriptor(l)), N = (0, r.useStateFromStores)([u.default], () => u.default.getLoadedUserExperiment(l)), p = (0, r.useStateFromStores)([u.default], () => i.sortBy(u.default.getRecentExposures(T.ExperimentTypes.USER, l), e => {
                    let [t, s] = e;
                    return -s
                }).map(e => {
                    let [t, s] = e;
                    return "".concat(new Date(s).toLocaleString(), " (").concat(t, ")")
                })), C = (0, a.jsx)(o.Clickable, {
                    onClick: h,
                    children: (0, a.jsxs)(o.FormTitle, {
                        tag: o.FormTitleTags.H3,
                        className: m.title,
                        children: [(0, a.jsxs)("div", {
                            children: [(0, a.jsx)("span", {
                                children: s.title
                            }), (0, a.jsx)(o.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: l
                            })]
                        }), (0, a.jsx)("span", {
                            className: m.experimentDate,
                            children: "User"
                        })]
                    })
                });
                return S ? (0, a.jsxs)("div", {
                    className: m.group,
                    children: [(0, a.jsxs)(o.FormSection, {
                        children: [C, (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormItem, {
                                title: "Bucket Override",
                                children: (0, a.jsx)(o.SingleSelect, {
                                    value: null != c ? c.bucket : null,
                                    clearable: null != c,
                                    options: _(s.buckets, s.description),
                                    onChange: e => {
                                        (0, d.overrideBucket)(l, e)
                                    }
                                })
                            }), "string" == typeof s.description ? (0, a.jsx)("div", {
                                className: m.description,
                                children: (0, a.jsx)(o.FormText, {
                                    type: o.FormTextTypes.DESCRIPTION,
                                    children: s.description
                                })
                            }) : null]
                        }), (0, a.jsxs)("div", {
                            className: m.description,
                            children: [(0, a.jsxs)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: ["Current assigned to bucket ", null !== (t = null == I ? void 0 : I.bucket) && void 0 !== t ? t : T.ExperimentBuckets.NOT_ELIGIBLE]
                            }), null == N ? (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: 'Warning: Server did not send any experiment config. You may need to check the "Send to Client" box in the admin UI.'
                            }) : null]
                        }), f ? (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Server Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: null == N ? "None" : JSON.stringify(N, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Override Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: null == c ? "None" : JSON.stringify(c, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Recent Exposures"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: 0 === p.length ? "None" : p.join("\n")
                            })]
                        }) : (0, a.jsx)(o.Button, {
                            className: m.debugButton,
                            size: o.Button.Sizes.SMALL,
                            look: o.Button.Looks.BLANK,
                            onClick: () => g(!0),
                            children: "More Details \xbb"
                        })]
                    }), (0, a.jsx)(o.FormDivider, {
                        className: m.divider
                    })]
                }) : (0, a.jsx)("div", {
                    className: m.group,
                    children: (0, a.jsx)(o.FormSection, {
                        children: C
                    })
                })
            }

            function I(e) {
                let {
                    experiment: t,
                    experimentId: s,
                    overrideDescriptor: l
                } = e, [S, E] = n.useState(null != l), [f, g] = n.useState(!1), h = n.useCallback(() => {
                    E(e => !e)
                }, []), I = (0, r.useStateFromStores)([u.default], () => u.default.getLoadedGuildExperiment(s)), N = (0, r.useStateFromStores)([u.default], () => i.sortBy(u.default.getRecentExposures(T.ExperimentTypes.GUILD, s), e => {
                    let [t, s] = e;
                    return -s
                }).map(e => {
                    let [t, s] = e;
                    return "".concat(new Date(s).toLocaleString(), " (").concat(t, ")")
                })), [p, C] = (0, r.useStateFromStoresArray)([c.default, u.default], () => {
                    let e = i.sortBy(i.values(c.default.getGuilds()), e => e.name.toLowerCase()),
                        t = {},
                        a = [];
                    for (let l of e) {
                        var n;
                        let e = u.default.getGuildExperimentDescriptor(s, l.id),
                            i = null !== (n = null == e ? void 0 : e.bucket) && void 0 !== n ? n : T.ExperimentBuckets.NOT_ELIGIBLE;
                        !(i in t) && (t[i] = 0), t[i]++, a.push("".concat(l.name, ": ").concat(i))
                    }
                    let l = i(t).keys().map(Number).sort().map(e => "".concat(t[e], " guilds in bucket ").concat(e)).join(", ");
                    return [a, l]
                }), A = (0, a.jsx)(o.Clickable, {
                    onClick: h,
                    children: (0, a.jsxs)(o.FormTitle, {
                        tag: o.FormTitleTags.H3,
                        className: m.title,
                        children: [(0, a.jsxs)("div", {
                            children: [(0, a.jsx)("span", {
                                children: t.title
                            }), (0, a.jsx)(o.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: s
                            })]
                        }), (0, a.jsx)("span", {
                            className: m.experimentDate,
                            children: "Guild"
                        })]
                    })
                });
                return S ? (0, a.jsxs)("div", {
                    className: m.group,
                    children: [(0, a.jsxs)(o.FormSection, {
                        children: [A, (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormItem, {
                                title: "Bucket Override",
                                children: (0, a.jsx)(o.SingleSelect, {
                                    value: null != l ? l.bucket : null,
                                    clearable: null != l,
                                    options: _(t.buckets, t.description),
                                    onChange: e => {
                                        (0, d.overrideBucket)(s, e)
                                    }
                                })
                            }), "string" == typeof t.description ? (0, a.jsx)("div", {
                                className: m.description,
                                children: (0, a.jsx)(o.FormText, {
                                    type: o.FormTextTypes.DESCRIPTION,
                                    children: t.description
                                })
                            }) : null]
                        }), (0, a.jsxs)("div", {
                            className: m.description,
                            children: [(0, a.jsxs)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: ["Current Assignments: ", C]
                            }), null == I ? (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: 'Warning: Server did not send any experiment config. You may need to check the "Send to Client" box in the admin UI.'
                            }) : null]
                        }), f ? (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Guild Assignments"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: p.join("\n")
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Server Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: null == I ? "None" : JSON.stringify(I, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Override Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: null == l ? "None" : JSON.stringify(l, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: m.debugTitle,
                                children: "Recent Exposures"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: m.pre,
                                children: 0 === N.length ? "None" : N.join("\n")
                            })]
                        }) : (0, a.jsx)(o.Button, {
                            className: m.debugButton,
                            size: o.Button.Sizes.SMALL,
                            look: o.Button.Looks.BLANK,
                            onClick: () => g(!0),
                            children: "More Details \xbb"
                        })]
                    }), (0, a.jsx)(o.FormDivider, {
                        className: m.divider
                    })]
                }) : (0, a.jsx)("div", {
                    className: m.group,
                    children: (0, a.jsx)(o.FormSection, {
                        children: A
                    })
                })
            }
        },
        913299: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("782340"),
                i = s("396986");

            function r(e) {
                let {
                    className: t,
                    currentUser: s,
                    handleDisableAccount: r,
                    handleDeleteAccount: o
                } = e, d = s.isClaimed();
                return (0, a.jsxs)(n.FormSection, {
                    className: t,
                    title: l.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_SECTION,
                    children: [(0, a.jsx)(n.FormText, {
                        className: i.description,
                        type: n.FormText.Types.DESCRIPTION,
                        children: d ? l.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_DESCRIPTION : l.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_DESCRIPTION_UNCLAIMED
                    }), (0, a.jsxs)("div", {
                        className: i.buttonContainer,
                        children: [d ? (0, a.jsx)(n.Button, {
                            className: i.disableButton,
                            look: n.ButtonLooks.FILLED,
                            color: n.ButtonColors.RED,
                            size: n.ButtonSizes.SMALL,
                            onClick: r,
                            children: l.default.Messages.DISABLE_ACCOUNT
                        }) : null, (0, a.jsx)(n.Button, {
                            look: n.ButtonLooks.OUTLINED,
                            color: n.ButtonColors.RED,
                            size: n.ButtonSizes.SMALL,
                            onClick: o,
                            children: l.default.Messages.DELETE_ACCOUNT
                        })]
                    })]
                })
            }
        },
        735690: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("152584"),
                r = s("45299"),
                o = s("880397"),
                d = s("783142"),
                u = s("790618"),
                c = s("648661");

            function S() {
                let e = (0, l.useStateFromStores)([u.default], () => u.default.getIsDisableSubmit()),
                    [t, s] = n.useState(!1),
                    S = n.useCallback(async () => {
                        var e, t, a;
                        s(!0);
                        let n = u.default.getAllPending(),
                            l = (0, o.getAccountUpdateForUpdateRequest)(n),
                            r = (0, o.getProfileChangesForUpdateRequest)(n),
                            S = !0;
                        if (Object.keys(l).length > 0) {
                            let s = await (0, i.saveAccountChanges)(l);
                            S = S && null !== (t = null == s ? void 0 : s.ok) && void 0 !== t && t, (null == s ? void 0 : s.ok) ? (0, i.resetPendingAccountChanges)() : (null == s ? void 0 : null === (e = s.body) || void 0 === e ? void 0 : e.username) != null && (0, c.showInvalidUsernameToast)()
                        }
                        if (Object.keys(r).length > 0) {
                            let e = await (0, d.saveProfileChanges)(r);
                            S = S && null !== (a = null == e ? void 0 : e.ok) && void 0 !== a && a, (null == e ? void 0 : e.ok) && (0, d.resetPendingProfileChanges)()
                        }
                        S && (0, i.clearErrors)(), s(!1)
                    }, []),
                    E = n.useCallback(() => {
                        (0, i.resetAllPending)()
                    }, []);
                return (0, a.jsx)(r.default, {
                    submitting: t,
                    onSave: S,
                    onReset: E,
                    disabled: e
                })
            }
        },
        629145: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Q
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("627445"),
                o = s.n(r),
                d = s("446674"),
                u = s("669491"),
                c = s("77078"),
                S = s("79112"),
                E = s("145079"),
                f = s("583227"),
                T = s("426902"),
                m = s("861370"),
                _ = s("956967"),
                g = s("878720"),
                h = s("553257"),
                I = s("167209"),
                N = s("217513"),
                p = s("289918"),
                C = s("590006"),
                A = s("106435"),
                O = s("790618"),
                x = s("697218"),
                R = s("433487"),
                M = s("423487"),
                v = s("306160"),
                D = s("158998"),
                L = s("50885"),
                P = s("845579"),
                j = s("760947"),
                b = s("49111"),
                U = s("482931"),
                B = s("935583"),
                y = s("590456"),
                F = s("782340"),
                G = s("594129");
            let k = L.default.getEnableHardwareAcceleration() ? c.AnimatedAvatar : c.Avatar;

            function H(e) {
                var t, l;
                let {
                    className: r,
                    user: o
                } = e, d = n.useRef(null), S = (0, h.usePomeloEligibility)(), E = (0, I.useIsEligibleForPomelo)(), f = (0, _.useGuildAutomodProfileQuarantineErrors)(), T = null !== (l = null == f ? void 0 : null === (t = f.nick) || void 0 === t ? void 0 : t[0]) && void 0 !== l ? l : null, m = null != d.current && d.current.scrollWidth > d.current.clientWidth, g = !o.isClaimed(), N = S && !o.isPomelo() && !o.hasVerifiedEmailOrPhone() || g, p = N ? F.default.Messages.POMELO_UPDATE_DISABLED_MESSAGE : void 0;
                return (0, a.jsxs)("div", {
                    className: i(G.field, r),
                    children: [(0, a.jsx)("div", {
                        className: G.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            className: G.usernameRow,
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: G.fieldTitle,
                                children: F.default.Messages.USER_SETTINGS_LABEL_USERNAME
                            }), (0, a.jsxs)("div", {
                                className: G.usernameInnerRow,
                                ref: d,
                                children: [(0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: o.username
                                }), !o.isPomelo() && (0, a.jsxs)(c.Text, {
                                    tag: "span",
                                    color: "header-secondary",
                                    variant: "text-md/normal",
                                    children: ["#", o.discriminator]
                                })]
                            })]
                        })
                    }), E && (0, a.jsx)("div", {
                        className: G.pomeloWarning,
                        children: (0, a.jsx)(c.Tooltip, {
                            text: F.default.Messages.ACTION_NEEDED,
                            children: e => (0, a.jsx)(M.default, {
                                ...e,
                                color: u.default.colors.STATUS_WARNING.css
                            })
                        })
                    }), null != T && (0, a.jsx)("div", {
                        className: G.pomeloWarning,
                        children: (0, a.jsx)(c.Tooltip, {
                            text: T,
                            "aria-label": !1,
                            children: e => (0, a.jsx)(M.default, {
                                ...e,
                                color: u.default.colors.STATUS_WARNING.css
                            })
                        })
                    }), (0, a.jsx)(c.Tooltip, {
                        text: p,
                        children: e => (0, a.jsx)(c.Button, {
                            ...e,
                            disabled: N,
                            size: c.Button.Sizes.SMALL,
                            className: G.fieldButton,
                            color: c.Button.Colors.PRIMARY,
                            "aria-label": F.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_USERNAME_A11Y_LABEL,
                            onClick: () => (0, c.openModalLazy)(async () => {
                                if (E) {
                                    let {
                                        default: e
                                    } = await s.el("892845").then(s.bind(s, "892845"));
                                    return t => (0, a.jsx)(e, {
                                        source: B.PomeloEntrypoints.USER_SETTINGS_EDIT,
                                        ...t
                                    })
                                } {
                                    let {
                                        default: e
                                    } = await s.el("385559").then(s.bind(s, "385559"));
                                    return t => (0, a.jsx)(e, {
                                        ...t
                                    })
                                }
                            }),
                            children: m ? F.default.Messages.DISAPPROVAL : F.default.Messages.EDIT
                        })
                    })]
                })
            }

            function w(e) {
                var t, s;
                let {
                    user: n,
                    className: l
                } = e, r = (0, _.useGuildAutomodProfileQuarantineErrors)(), o = null !== (s = null == r ? void 0 : null === (t = r.nick) || void 0 === t ? void 0 : t[0]) && void 0 !== s ? s : null, d = D.default.getGlobalName(n);
                return (0, a.jsxs)("div", {
                    className: i(G.field, l),
                    children: [(0, a.jsx)("div", {
                        className: G.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: G.fieldTitle,
                                children: F.default.Messages.DISPLAY_NAME
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: null == d ? F.default.Messages.USER_SETTINGS_NO_DISPLAYNAME_PLACEHOLDER : d
                                })
                            })]
                        })
                    }), null != o && (0, a.jsx)("div", {
                        className: G.pomeloWarning,
                        children: (0, a.jsx)(c.Tooltip, {
                            text: o,
                            "aria-label": !1,
                            children: e => (0, a.jsx)(M.default, {
                                ...e,
                                color: u.default.colors.STATUS_WARNING.css
                            })
                        })
                    }), (0, a.jsx)(c.Button, {
                        className: G.fieldButton,
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.PRIMARY,
                        "aria-label": F.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_DISPLAYNAME_A11Y_LABEL,
                        onClick: z,
                        children: F.default.Messages.EDIT
                    })]
                })
            }

            function V(e) {
                let {
                    text: t,
                    censor: s,
                    revealLabel: l,
                    hideLabel: i
                } = e, [r, o] = n.useState(!1), d = r ? t : s(t);
                return (0, a.jsxs)(a.Fragment, {
                    children: [d, (0, a.jsx)(c.Button, {
                        look: c.Button.Looks.LINK,
                        size: c.Button.Sizes.MIN,
                        color: c.Button.Colors.LINK,
                        "aria-label": r ? i : l,
                        onClick: () => o(!r),
                        children: r ? F.default.Messages.HIDE : F.default.Messages.REVEAL
                    })]
                })
            }

            function Y(e) {
                let t, {
                    className: n,
                    user: l
                } = e;
                if (l.isClaimed()) {
                    if (null == l.email) t = {
                        buttonText: F.default.Messages.ADD,
                        buttonAriaLabel: F.default.Messages.USER_SETTINGS_ACCOUNT_ADD_EMAIL_A11Y_LABEL,
                        buttonColor: c.Button.Colors.PRIMARY,
                        valueMessage: F.default.Messages.USER_SETTINGS_NO_EMAIL_PLACEHOLDER,
                        handleClick: () => (0, c.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await s.el("867693").then(s.bind(s, "867693"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    };
                    else {
                        let {
                            email: e
                        } = l;
                        t = {
                            buttonText: F.default.Messages.EDIT,
                            buttonAriaLabel: F.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_EMAIL_A11Y_LABEL,
                            buttonColor: c.Button.Colors.PRIMARY,
                            valueMessage: (0, a.jsx)(V, {
                                text: e,
                                censor: j.censorEmail,
                                revealLabel: F.default.Messages.USER_SETTINGS_ACCOUNT_REVEAL_EMAIL_A11Y_LABEL,
                                hideLabel: F.default.Messages.USER_SETTINGS_ACCOUNT_HIDE_EMAIL_A11Y_LABEL
                            }),
                            handleClick: () => (0, c.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await s.el("867693").then(s.bind(s, "867693"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            })
                        }
                    }
                } else t = {
                    buttonText: F.default.Messages.CLAIM_ACCOUNT_SHORT,
                    buttonAriaLabel: F.default.Messages.CLAIM_ACCOUNT_SHORT,
                    buttonColor: c.Button.Colors.BRAND,
                    valueMessage: F.default.Messages.USER_SETTINGS_ADD_EMAIL_CLAIM,
                    handleClick: () => T.default.openClaimAccountModal()
                };
                return (0, a.jsxs)("div", {
                    className: i(G.field, n),
                    children: [(0, a.jsx)("div", {
                        className: G.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: G.fieldTitle,
                                children: F.default.Messages.USER_SETTINGS_LABEL_EMAIL
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: t.valueMessage
                                })
                            })]
                        })
                    }), (0, a.jsx)(c.Button, {
                        className: G.fieldButton,
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.PRIMARY,
                        "aria-label": t.buttonAriaLabel,
                        onClick: t.handleClick,
                        children: t.buttonText
                    })]
                })
            }

            function W(e) {
                let t, {
                    className: n,
                    user: l
                } = e;
                if (!l.isClaimed()) return null;
                let {
                    phone: r,
                    email: o
                } = l, d = null != r;
                return t = d ? (0, a.jsx)(V, {
                    text: r,
                    censor: j.censorPhone,
                    revealLabel: F.default.Messages.USER_SETTINGS_ACCOUNT_REVEAL_PHONE_A11Y_LABEL,
                    hideLabel: F.default.Messages.USER_SETTINGS_ACCOUNT_HIDE_PHONE_A11Y_LABEL
                }) : F.default.Messages.USER_SETTINGS_NO_PHONE_PLACEHOLDER, (0, a.jsxs)("div", {
                    className: i(G.field, n),
                    children: [(0, a.jsx)("div", {
                        className: G.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: G.fieldTitle,
                                children: F.default.Messages.USER_SETTINGS_LABEL_PHONE_NUMBER
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: t
                                })
                            })]
                        })
                    }), (0, a.jsxs)("div", {
                        className: G.fieldButtonList,
                        children: [d && null != o ? (0, a.jsx)(c.Button, {
                            className: i(G.fieldButton, G.removeButton),
                            size: c.Button.Sizes.SMALL,
                            look: c.Button.Looks.LINK,
                            color: c.Button.Colors.PRIMARY,
                            "aria-label": F.default.Messages.USER_SETTINGS_ACCOUNT_REMOVE_PHONE_A11Y_LABEL,
                            onClick: function() {
                                (0, c.openModal)(e => (0, a.jsx)(f.default, {
                                    ...e,
                                    title: F.default.Messages.USER_SETTINGS_ACCOUNT_REMOVE_PHONE_NUMBER_TITLE,
                                    children: l.hasFlag(b.UserFlags.MFA_SMS) ? F.default.Messages.USER_SETTINGS_ACCOUNT_REMOVE_PHONE_SMS_BACKUP_WARNING : void 0,
                                    actionText: F.default.Messages.REMOVE,
                                    handleSubmit: e => g.default.removePhone(e, g.ChangePhoneReason.USER_SETTINGS_UPDATE)
                                }))
                            },
                            children: F.default.Messages.REMOVE
                        }) : null, (0, a.jsx)(c.Button, {
                            className: G.fieldButton,
                            size: c.Button.Sizes.SMALL,
                            color: c.Button.Colors.PRIMARY,
                            "aria-label": d ? F.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_PHONE_A11Y_LABEL : F.default.Messages.USER_SETTINGS_ACCOUNT_ADD_PHONE_A11Y_LABEL,
                            onClick: function() {
                                (0, c.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await s.el("601745").then(s.bind(s, "601745"));
                                    return t => (0, a.jsx)(e, {
                                        reason: g.ChangePhoneReason.USER_SETTINGS_UPDATE,
                                        ...t
                                    })
                                }, {
                                    modalKey: U.PHONE_VERIFICATION_MODAL_KEY
                                })
                            },
                            children: d ? F.default.Messages.EDIT : F.default.Messages.ADD
                        })]
                    })]
                })
            }

            function K(e) {
                let {
                    user: t
                } = e, s = (0, m.default)({
                    id: t.id,
                    label: F.default.Messages.COPY_ID_USER
                }), n = P.DeveloperMode.useSetting();
                return n && v.SUPPORTS_COPY ? (0, a.jsx)(c.Popout, {
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(c.Menu, {
                            onClose: t,
                            onSelect: void 0,
                            navId: "copy-id",
                            "aria-label": F.default.Messages.USER_MORE_ACTIONS_MENU_LABEL,
                            children: s
                        })
                    },
                    children: e => (0, a.jsx)(c.Clickable, {
                        ...e,
                        className: G.overflowMenuButton,
                        "aria-label": F.default.Messages.ACTIONS,
                        children: (0, a.jsx)(R.default, {
                            className: G.overflowMenuIcon,
                            height: 24,
                            width: 24
                        })
                    })
                }) : null
            }

            function z() {
                S.default.setSection(b.UserSettingsSections.PROFILE_CUSTOMIZATION)
            }

            function Q() {
                var e;
                let t = (0, d.useStateFromStores)([x.default], () => {
                        let e = x.default.getCurrentUser();
                        return o(null != e, "UserSettingsAccountProfileCard: currentUser cannot be undefined"), e
                    }),
                    s = (0, N.default)(t.id),
                    n = P.StatusSetting.useSetting(),
                    l = (0, d.useStateFromStores)([O.default], () => O.default.getErrors()),
                    i = null == l ? void 0 : null === (e = l.avatar) || void 0 === e ? void 0 : e[0],
                    {
                        avatarSrc: r,
                        avatarDecorationSrc: u
                    } = (0, A.default)({
                        user: t,
                        size: c.AvatarSizes.SIZE_80
                    });
                return (0, a.jsxs)("div", {
                    className: G.accountProfileCard,
                    children: [(0, a.jsx)(p.default, {
                        displayProfile: s,
                        user: t,
                        allowEdit: !1,
                        guildId: void 0,
                        profileType: y.UserProfileTypes.SETTINGS
                    }), (0, a.jsxs)("div", {
                        className: G.userInfo,
                        children: [(0, a.jsx)(k, {
                            className: G.avatar,
                            src: r,
                            avatarDecoration: u,
                            status: n,
                            size: c.AvatarSizes.SIZE_80,
                            "aria-label": t.username
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsxs)("div", {
                                className: G.profileCardUsernameRow,
                                children: [(0, a.jsx)(E.default, {
                                    user: t,
                                    className: G.userTag,
                                    discriminatorClass: G.discriminator
                                }), (0, a.jsx)(K, {
                                    user: t
                                })]
                            }), (0, a.jsx)(C.default, {
                                className: G.badgeList,
                                user: t,
                                size: C.BadgeSizes.SIZE_22
                            })]
                        }), (0, a.jsx)(c.Button, {
                            onClick: z,
                            size: c.Button.Sizes.SMALL,
                            children: F.default.Messages.USER_SETTINGS_EDIT_USER_PROFILE
                        })]
                    }), (0, a.jsxs)("div", {
                        className: G.background,
                        children: [null != i ? (0, a.jsx)(c.Text, {
                            className: G.avatarError,
                            variant: "text-xs/normal",
                            color: "text-danger",
                            children: i
                        }) : null, (0, a.jsxs)("div", {
                            className: G.fieldList,
                            children: [(0, a.jsx)(w, {
                                className: G.fieldSpacerBottom,
                                user: t
                            }), (0, a.jsx)(H, {
                                user: t
                            }), (0, a.jsx)(Y, {
                                className: G.fieldSpacer,
                                user: t
                            }), (0, a.jsx)(W, {
                                className: G.fieldSpacer,
                                user: t
                            })]
                        })]
                    })]
                })
            }
        },
        969927: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("152584"),
                o = s("790618"),
                d = s("258078"),
                u = s("648661"),
                c = s("49111"),
                S = s("782340"),
                E = s("964405");

            function f(e) {
                var t, s, f, T;
                let {
                    transitionState: m,
                    onSuccess: _,
                    onClose: g,
                    requirementsUpdated: h,
                    noSkip: I = !1
                } = e, [N, p] = n.useState(""), [C, A] = n.useState(""), [O, x] = n.useState(""), [R, M] = n.useState(null), [v, D] = n.useState(null), L = (0, l.useStateFromStores)([o.default], () => o.default.getErrors()), P = (0, l.useStateFromStores)([o.default], () => o.default.getFormState()), j = n.useRef(null);
                async function b(e) {
                    e.preventDefault(), (0, r.clearErrors)();
                    let t = !1;
                    if ("" === C ? (M(S.default.Messages.PASSWORD_REQUIREMENTS_EMPTY), t = !0) : M(null), C !== O ? (D(S.default.Messages.FORM_LABEL_NEW_PASSWORD_MISMATCH), t = !0) : D(null), t) return;
                    let s = await (0, r.saveAccountChanges)({
                        password: N,
                        newPassword: C
                    });
                    if (null == s ? void 0 : s.ok) _();
                    else {
                        var a;
                        (null == s ? void 0 : null === (a = s.body) || void 0 === a ? void 0 : a.username) != null && (0, u.showInvalidUsernameToast)()
                    }
                }
                return n.useEffect(() => {
                    if (m === i.ModalTransitionState.ENTERED) {
                        var e;
                        null === (e = j.current) || void 0 === e || e.focus()
                    }
                }, [m]), (0, a.jsxs)(i.ModalRoot, {
                    transitionState: m,
                    children: [(0, a.jsxs)(i.ModalHeader, {
                        separator: !1,
                        className: E.header,
                        children: [(0, a.jsx)(d.default, {
                            color: d.default.Colors.HEADER_PRIMARY,
                            size: d.default.Sizes.SIZE_24,
                            className: E.title,
                            children: S.default.Messages.UPDATE_PASSWORD
                        }), (0, a.jsx)(i.Text, {
                            color: "header-secondary",
                            variant: "text-md/normal",
                            className: E.subtitle,
                            children: h ? S.default.Messages.FORCE_PASSWORD_UPDATE_DESCRIPTION : S.default.Messages.USER_SETTINGS_ACCOUNT_CHANGE_PASSWORD_PROMPT_DESKTOP
                        }), !0 !== I && (0, a.jsx)(i.ModalCloseButton, {
                            onClick: g,
                            className: E.modalCloseButton
                        })]
                    }), (0, a.jsxs)("form", {
                        onSubmit: b,
                        children: [(0, a.jsxs)(i.ModalContent, {
                            className: E.content,
                            children: [(0, a.jsx)(i.FormItem, {
                                title: S.default.Messages.FORM_LABEL_CURRENT_PASSWORD,
                                error: null == L ? void 0 : null === (t = L.password) || void 0 === t ? void 0 : t[0],
                                children: (0, a.jsx)(i.TextInput, {
                                    type: "password",
                                    value: N,
                                    onChange: p,
                                    inputRef: j
                                })
                            }), (0, a.jsx)(i.FormItem, {
                                className: E.newPassword,
                                title: S.default.Messages.FORM_LABEL_NEW_PASSWORD,
                                error: null !== (T = null !== (f = null == L ? void 0 : null === (s = L.new_password) || void 0 === s ? void 0 : s[0]) && void 0 !== f ? f : R) && void 0 !== T ? T : void 0,
                                children: (0, a.jsx)(i.TextInput, {
                                    type: "password",
                                    value: C,
                                    onChange: A
                                })
                            }), (0, a.jsx)(i.FormItem, {
                                className: E.newPassword,
                                title: S.default.Messages.FORM_LABEL_CONFIRM_NEW_PASSWORD,
                                error: null != v ? v : void 0,
                                children: (0, a.jsx)(i.TextInput, {
                                    type: "password",
                                    value: O,
                                    onChange: x
                                })
                            })]
                        }), (0, a.jsxs)(i.ModalFooter, {
                            children: [(0, a.jsx)(i.Button, {
                                type: "submit",
                                color: i.Button.Colors.BRAND,
                                size: i.Button.Sizes.MEDIUM,
                                submitting: P === c.FormStates.SUBMITTING,
                                children: S.default.Messages.DONE
                            }), !0 !== I && (0, a.jsx)(i.Button, {
                                className: E.cancel,
                                look: i.Button.Looks.LINK,
                                color: i.Button.Colors.PRIMARY,
                                onClick: g,
                                children: S.default.Messages.CANCEL
                            })]
                        })]
                    })]
                })
            }
        },
        663952: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return x
                }
            }), s("222007"), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("866227"),
                o = s.n(r),
                d = s("118810"),
                u = s("65597"),
                c = s("77078"),
                S = s("913144"),
                E = s("54239"),
                f = s("376152"),
                T = s("579565"),
                m = s("778695"),
                _ = s("298878"),
                g = s("697218"),
                h = s("888400"),
                I = s("411511"),
                N = s("782340"),
                p = s("76836");
            let C = "YYYY-MM-DD HH:mm";

            function A(e) {
                let {
                    drop: t,
                    enrolled: s,
                    completed: l
                } = e, i = n.useRef(null), r = e => {
                    let t = e.target;
                    (0, d.isElement)(t, HTMLAnchorElement) && (0, E.popLayer)()
                };
                (0, n.useEffect)(() => {
                    let e = i.current;
                    return null != e && e.addEventListener("click", r), () => {
                        null != e && e.removeEventListener("click", r)
                    }
                }, []);
                let {
                    title: u,
                    endDate: m,
                    dropsQuestId: _,
                    assets: g,
                    articleUrl: h
                } = t, I = (0, T.getDropByQuestId)(_);
                if (null == I) return null;
                let C = () => {
                    (0, f.enrollDropsUser)(_).then(() => {
                        S.default.wait(async () => {
                            await (0, f.fetchDropsUserStatus)()
                        })
                    })
                };
                return (0, a.jsxs)("div", {
                    className: p.dropContainer,
                    children: [(0, a.jsx)("div", {
                        className: p.dropCard,
                        children: (0, a.jsxs)("div", {
                            className: p.mainPromotionCardContainer,
                            children: [(0, a.jsxs)("div", {
                                className: p.promotionCardLeftContainer,
                                children: [(0, a.jsx)("div", {
                                    className: p.promotionIcon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: g.iconSrc,
                                        className: p.promotionIconImage
                                    })
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(c.Heading, {
                                        variant: "heading-md/semibold",
                                        children: u
                                    }), (0, a.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "text-normal",
                                        className: p.availableUntil,
                                        children: N.default.Messages.DROPS_CARD_REDEEM_UNTIL.format({
                                            endDate: o(m, "YYYY-MM-DD HH:mm").format("MMMM Do, YYYY")
                                        })
                                    })]
                                })]
                            }), (0, a.jsx)(c.Tooltip, {
                                text: s && !l ? N.default.Messages.DROPS_GIFT_INVENTORY_REDEMPTION_TOOLTIP : null,
                                tooltipContentClassName: p.redeemTooltipContent,
                                children: e => (0, a.jsx)(c.Button, {
                                    className: p.promotionCardButton,
                                    color: c.Button.Colors.BRAND,
                                    size: c.Button.Sizes.SMALL,
                                    onClick: C,
                                    disabled: s && !l,
                                    ...e,
                                    children: s ? N.default.Messages.REDEEM : N.default.Messages.DROPS_GIFT_INVENTORY_ENROLL
                                })
                            })]
                        })
                    }), (0, a.jsxs)("div", {
                        className: p.dropCriteria,
                        children: [(0, a.jsx)("img", {
                            alt: "",
                            src: g.rewardSrc,
                            className: p.dropRewardImage
                        }), (0, a.jsx)("div", {
                            ref: i,
                            children: (0, a.jsx)(c.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                className: p.dropCriteriaText,
                                children: I.messages.giftInfo()
                            })
                        }), (0, a.jsx)(c.Text, {
                            color: "text-muted",
                            variant: "text-sm/normal",
                            className: p.dropLearnMore,
                            children: N.default.Messages.DROPS_LEARN_MORE.format({
                                faqUrl: h
                            })
                        })]
                    })]
                })
            }

            function O(e) {
                let {
                    drop: t,
                    code: s,
                    platform: l
                } = e, [r, d] = n.useState(!1), u = void 0 !== s, S = (0, h.dateFormat)(o(t.endDate), "LL"), E = N.default.Messages.DROPS_CARD_REDEEM_UNTIL.format({
                    endDate: S
                }), f = u ? N.default.Messages.OUTBOUND_PROMOTION_SEE_CODE : N.default.Messages.PROMOTION_CARD_ACTION_CLAIM, T = n.useCallback(() => d(!1), []);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        className: i(p.skuCard, p.promotionCard),
                        children: (0, a.jsxs)("div", {
                            className: p.mainPromotionCardContainer,
                            children: [(0, a.jsxs)("div", {
                                className: p.promotionCardLeftContainer,
                                children: [(0, a.jsx)("div", {
                                    className: p.promotionIcon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: t.assets.iconSrc,
                                        className: p.promotionIconImage
                                    })
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(c.Heading, {
                                        variant: "heading-md/semibold",
                                        children: t.title
                                    }), (0, a.jsx)(c.Text, {
                                        variant: "text-sm/normal",
                                        color: "text-normal",
                                        className: p.promotionText,
                                        children: E
                                    })]
                                })]
                            }), (0, a.jsx)(c.Button, {
                                color: c.Button.Colors.BRAND,
                                size: c.Button.Sizes.SMALL,
                                onClick: () => d(!0),
                                children: f
                            })]
                        })
                    }), r && (0, a.jsx)(c.Modal, {
                        renderModal: e => (0, a.jsx)(m.default, {
                            ...e,
                            onClose: T,
                            code: s,
                            drop: t,
                            platform: l
                        }),
                        onCloseRequest: T
                    })]
                })
            }
            var x = function(e) {
                var t;
                let {
                    dropsOptedOut: s,
                    dropsStatuses: n
                } = e, l = [], i = [], r = (0, u.default)([g.default], () => g.default.getCurrentUser()), d = !1;
                if (null == n) return null;
                for (let e of Object.keys(n)) {
                    let t = (0, T.getDropByQuestId)(e);
                    if (null == t) continue;
                    let s = n[e],
                        a = (0, T.getDropsPartnerGameNameByQuestId)(e);
                    if (null == a) continue;
                    let u = (0, T.getEligibilityByRunningGameDetection)(a),
                        c = s.eligible && u,
                        S = (0, T.getDropsExperiment)(a);
                    if (null == S) continue;
                    c && S.trackExposure({
                        location: "ENTITLEMENT_GIFTS"
                    });
                    let E = !!((null == r ? void 0 : r.isStaff()) && S.getCurrentConfig({
                            location: "076035_2"
                        }, {
                            autoTrackExposure: !1
                        }).showUnenroll),
                        f = S.getCurrentConfig({
                            location: "076035_3"
                        }, {
                            autoTrackExposure: !1
                        }).dropsEnabled;
                    if (!f) continue;
                    d = !0;
                    let m = o(t.endDate, C),
                        _ = o();
                    if (c && null == s.completed_at || null != s.enrolled_at && null == s.completed_at && s.eligible) _ < m && l.push({
                        dropsQuestId: e,
                        dropsStatus: s,
                        showUnenroll: E,
                        experiment: S
                    });
                    else if (null != s.code || null != s.completed_at) {
                        let a = o(t.finalClaimDate, C);
                        _ < a && i.push({
                            dropsQuestId: e,
                            dropsStatus: s,
                            showUnenroll: E,
                            experiment: S
                        })
                    }
                }
                let S = (0, a.jsxs)("div", {
                    className: p.dropsHeaderContainer,
                    children: [(0, a.jsx)(c.Heading, {
                        variant: "heading-md/semibold",
                        children: N.default.Messages.DROPS_GIFT_INVENTORY_TITLE
                    }), (0, a.jsx)(_.default, {
                        className: p.betaTagIcon
                    })]
                });
                return d && 0 === l.length && 0 === i.length && s ? (0, a.jsxs)(c.FormSection, {
                    children: [S, (0, a.jsx)(c.FormDivider, {
                        className: p.divider
                    }), (0, a.jsx)("div", {
                        className: p.dropsHelpText,
                        children: N.default.Messages.DROPS_READ_BLOG_TO_ENABLE.format({
                            blogURL: I.DropsFaqUrl
                        })
                    })]
                }) : 0 === l.length && 0 === i.length ? null : (0, a.jsxs)(c.FormSection, {
                    children: [S, (0, a.jsx)(c.FormDivider, {
                        className: p.divider
                    }), l.map(e => {
                        let t = (0, T.getDropByQuestId)(e.dropsQuestId),
                            s = null != e.dropsStatus.enrolled_at,
                            n = null != e.dropsStatus.completed_at;
                        return null != t ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(A, {
                                drop: {
                                    ...t
                                },
                                enrolled: s,
                                completed: n
                            }, t.dropsQuestId), e.showUnenroll && (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                onClick: () => (0, f.unenrollDropsUser)(e.dropsQuestId),
                                children: "UNENROLL"
                            })]
                        }) : null
                    }), i.map(e => {
                        var t, s;
                        let n = (0, T.getDropByQuestId)(e.dropsQuestId);
                        return null != n ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(O, {
                                drop: n,
                                code: null !== (t = e.dropsStatus.code) && void 0 !== t ? t : void 0,
                                platform: null !== (s = e.dropsStatus.platform) && void 0 !== s ? s : void 0
                            }, e.dropsQuestId), e.showUnenroll && (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                onClick: () => (0, f.unenrollDropsUser)(e.dropsQuestId),
                                children: "UNENROLL"
                            })]
                        }) : null
                    }), "string" == typeof(null == r ? void 0 : r.id) && i.length > 0 ? (0, a.jsx)("div", {
                        className: p.feedback,
                        children: N.default.Messages.DROPS_REQUEST_FEEDBACK_SUCCESS.format({
                            feedbackURL: "https://survey.alchemer.com/s3/7043098/Discord-Drops-CSAT?user_id=".concat(null !== (t = null == r ? void 0 : r.id) && void 0 !== t ? t : "")
                        })
                    }) : null]
                })
            }
        },
        889285: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("245187"),
                r = s("677591"),
                o = s("904519"),
                d = s("695561"),
                u = s("555826"),
                c = s("677099"),
                S = s("697218"),
                E = s("625634"),
                f = s("719923"),
                T = s("619383"),
                m = s("358189"),
                _ = s("313577"),
                g = s("236972"),
                h = s("995956"),
                I = s("664671"),
                N = s("646718"),
                p = s("116430");

            function C(e) {
                let {
                    premiumSubscription: t
                } = e, s = (0, l.useStateFromStores)([E.default], () => E.default.boostSlots), C = n.useMemo(() => Object.values(s), [s]), A = (0, l.useStateFromStores)([S.default], () => S.default.getCurrentUser()), O = f.default.isPremium(A, N.PremiumTypes.TIER_2), x = (0, l.useStateFromStores)([u.default], () => u.default.affinities), R = (0, l.useStateFromStores)([c.default], () => c.default.getFlattenedGuildIds()), M = x.length > 0 || R.length > 0, v = C.length > 0, D = n.useMemo(() => C.some(e => null != e.premiumGuildSubscription), [C]);
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(i.BlockedPaymentsWarning, {
                        className: p.blockedPaymentsWarning
                    }), (0, a.jsx)(m.default, {
                        hasGuildBoostSlots: v,
                        hasAppliedGuildBoosts: D,
                        isUserPremiumTier2: O
                    }), (0, a.jsx)(h.default, {
                        hasAppliedGuildBoosts: D,
                        isUserPremiumTier2: O,
                        hasGuildAffinitiesOrInGuild: M
                    }), !M && (0, a.jsx)(_.default, {}), (0, a.jsx)(T.default, {
                        guildBoostSlots: s,
                        premiumSubscription: t
                    }), (0, a.jsx)(I.default, {
                        guildBoostSlots: C
                    }), (0, a.jsx)(g.default, {
                        hasAppliedGuildBoosts: D
                    }), (0, a.jsx)(d.default, {
                        className: p.tierComparisonTable,
                        hideHeading: !0,
                        hideTier0: !0
                    }), (0, a.jsx)(r.default, {
                        cardClassName: p.boosterRecognitionCard
                    }), (0, a.jsx)(o.default, {
                        className: p.faq
                    })]
                })
            }
        },
        619383: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("424973"), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("907002"),
                i = s("65597"),
                r = s("77078"),
                o = s("206230"),
                d = s("308086"),
                u = s("305961"),
                c = s("663745"),
                S = s("427459"),
                E = s("719923"),
                f = s("299039"),
                T = s("397723"),
                m = s("717266"),
                _ = s("131424"),
                g = s("49111"),
                h = s("646718"),
                I = s("782340"),
                N = s("762981");

            function p(e) {
                let {
                    guildTier: t,
                    guildBoostSlot: s,
                    showAltText: i,
                    isCanceled: o,
                    premiumSubscription: d
                } = e, u = n.useMemo(() => {
                    if (o) return I.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format({
                        date: d.currentPeriodEnd
                    });
                    let e = null != s.premiumGuildSubscription ? f.default.extractTimestamp(s.premiumGuildSubscription.id) : 0;
                    return I.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_DURATION_SHORTENED.format({
                        date: new Date(e)
                    })
                }, [s, o, d]), c = n.useMemo(() => (function(e) {
                    if (null == e || e === g.BoostedGuildTiers.NONE) return "";
                    let t = [I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_EMOJI_SLOTS.format({
                        numEmojiSlots: h.BoostedGuildFeatures[e].limits.emoji
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_STICKER_SLOTS.format({
                        numStickerSlots: h.BoostedGuildFeatures[e].limits.stickers
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_SOUNDBOARD_SLOTS.format({
                        numSoundboardSlots: h.BoostedGuildFeatures[e].limits.soundboardSounds
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_STREAM_QUALITY.format({
                        resolution: h.BoostedGuildFeatures[e].limits.screenShareQualityResolution,
                        framerate: h.BoostedGuildFeatures[e].limits.screenShareQualityFramerate
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_AUDIO_QUALITY.format({
                        bitrate: h.BoostedGuildFeatures[e].limits.bitrate / 1e3
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_UPLOAD_SIZE_LIMIT.format({
                        filesize: h.BoostedGuildFeatures[e].limits.fileSize / 1024 / 1024
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_VIDEO_STAGE_SEATS.format({
                        numVideoStageSeats: h.BoostedGuildFeatures[e].limits.stageVideoUsers
                    }), I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_ANIMATED_GUILD_ICON, I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_GUILD_INVITE_BACKGROUND];
                    e >= g.BoostedGuildTiers.TIER_2 && (t.push(I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_GUILD_BANNER), t.push(I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_CUSTOM_ROLE_ICONS)), e >= g.BoostedGuildTiers.TIER_3 && t.push(I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_VANITY_URL);
                    let s = t[Math.floor(Math.random() * t.length)];
                    return I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_TEMPLATE.format({
                        perk: s
                    })
                })(t), [t]), S = (0, l.useTransition)(i, {
                    from: {
                        opacity: 0
                    },
                    enter: {
                        opacity: 1
                    },
                    leave: {
                        opacity: 0
                    }
                });
                return o || t === g.BoostedGuildTiers.NONE ? (0, a.jsx)("div", {
                    className: N.boostDescriptionInnerContainer,
                    children: (0, a.jsx)(r.Text, {
                        variant: "text-sm/medium",
                        color: "text-muted",
                        children: u
                    })
                }) : S((e, t) => (0, a.jsx)(l.animated.div, {
                    style: e,
                    className: N.boostDescriptionInnerContainer,
                    children: (0, a.jsx)(r.Text, {
                        variant: "text-sm/medium",
                        color: "text-muted",
                        children: t ? c : u
                    })
                }))
            }

            function C(e) {
                let {
                    guildTier: t,
                    guildBoostSlot: s,
                    premiumSubscription: l,
                    hasCancelableGuildBoostSlot: u,
                    showAltText: E,
                    isLastGuildBoostSlot: f
                } = e, _ = (0, i.default)([o.default], () => o.default.useReducedMotion), g = n.useMemo(() => null != s.cooldownEndsAt ? new Date(s.cooldownEndsAt) : null, [s]), h = n.useMemo(() => null != g && g > new Date, [g]), C = (0, S.isGuildBoostSlotCanceled)(s);
                return (0, a.jsxs)("div", {
                    className: N.boostContainer,
                    children: [(0, a.jsxs)("div", {
                        className: N.boostInnerContainer,
                        children: [(0, a.jsx)(m.default, {
                            isCanceled: C,
                            hasCooldown: h,
                            useReducedMotion: _
                        }), (0, a.jsx)("div", {
                            className: N.boostDescriptionContainer,
                            children: null != g && h && !C ? (0, a.jsx)(T.default, {
                                className: N.boostDescriptionInnerContainer,
                                cooldown: g.getTime()
                            }) : (0, a.jsx)(p, {
                                guildTier: t,
                                guildBoostSlot: s,
                                showAltText: E,
                                isCanceled: C,
                                premiumSubscription: l
                            })
                        }), (0, a.jsx)(r.Popout, {
                            renderPopout: function(e) {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(d.default, {
                                    onClose: t,
                                    guildBoostSlot: s,
                                    premiumSubscription: l,
                                    hasCancelableGuildBoostSlot: u
                                })
                            },
                            position: "right",
                            align: "center",
                            children: e => (0, a.jsx)(r.Clickable, {
                                ...e,
                                "aria-label": I.default.Messages.MORE_OPTIONS,
                                className: N.boostSlotMenuIcon,
                                children: (0, a.jsx)(c.default, {})
                            })
                        })]
                    }), !f && (0, a.jsx)("div", {
                        className: N.boostContainerSeparator
                    })]
                })
            }

            function A(e) {
                let {
                    guildId: t,
                    guildBoostSlotRecords: s,
                    premiumSubscription: n,
                    hasCancelableGuildBoostSlot: l,
                    showAltText: r
                } = e, o = (0, i.default)([u.default], () => u.default.getGuild(t), [t]);
                return (0, a.jsxs)("div", {
                    className: N.appliedBoostContainer,
                    children: [(0, a.jsx)(_.default, {
                        guildId: t,
                        boostingVariant: !1
                    }), s.map((e, t) => (0, a.jsx)(C, {
                        guildTier: null == o ? void 0 : o.premiumTier,
                        guildBoostSlot: e,
                        premiumSubscription: n,
                        hasCancelableGuildBoostSlot: l,
                        showAltText: r,
                        isLastGuildBoostSlot: t === s.length - 1
                    }, e.id))]
                })
            }

            function O(e) {
                let {
                    guildBoostSlots: t,
                    premiumSubscription: s
                } = e, [l, i] = n.useState(!1);
                n.useEffect(() => {
                    let e = -1;
                    return null != s && (e = setInterval(() => {
                        i(e => !e)
                    }, 3e3)), () => {
                        clearInterval(e)
                    }
                }, [s]);
                let {
                    boostsByGuildId: r,
                    numActiveGuildBoostSlots: o
                } = n.useMemo(() => {
                    let e = 0,
                        s = {};
                    return Object.keys(t).forEach(a => {
                        let n = t[a];
                        if (!(0, S.isGuildBoostSlotCanceled)(n) && e++, null != n.premiumGuildSubscription) {
                            let e = n.premiumGuildSubscription.guildId;
                            !(e in s) && (s[e] = []), s[e].push(n)
                        }
                    }), {
                        boostsByGuildId: s,
                        numActiveGuildBoostSlots: e
                    }
                }, [t]);
                if (null == s || 0 === Object.keys(r).length) return null;
                let d = E.default.getNumIncludedPremiumGuildSubscriptionSlots(s.planId),
                    u = o > d;
                return (0, a.jsxs)("div", {
                    className: N.wrapper,
                    children: [(0, a.jsx)("div", {
                        className: N.container,
                        children: Object.keys(r).map(e => (0, a.jsx)(A, {
                            guildId: e,
                            guildBoostSlotRecords: r[e],
                            premiumSubscription: s,
                            hasCancelableGuildBoostSlot: u,
                            showAltText: l
                        }, e))
                    }), (0, a.jsx)("div", {
                        className: N.mainSeparator
                    })]
                })
            }
        },
        840022: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("685665"),
                r = s("954296"),
                o = s("118503"),
                d = s("427459"),
                u = s("49111"),
                c = s("782340"),
                S = s("763516"),
                E = function() {
                    let e = n.useRef(null),
                        {
                            analyticsLocations: t
                        } = (0, i.default)();

                    function E(s) {
                        null != e.current && (0, l.closeModal)(e.current), (0, r.addAppliedGuildBoosts)({
                            analyticsLocation: {
                                page: u.AnalyticsPages.GUILD_BOOSTING_USER_SETTINGS,
                                section: u.AnalyticsSections.GUILD_BOOSTING_BOOST_ANY_GUILD_CTA,
                                object: u.AnalyticsObjects.BUTTON_CTA,
                                objectType: u.AnalyticsObjectTypes.BUY
                            },
                            analyticsLocations: t,
                            guild: s
                        })
                    }
                    async function f() {
                        e.current = await (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await s.el("936992").then(s.bind(s, "936992"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                onSelectGuild: E
                            })
                        }, {
                            onCloseRequest: () => {
                                null != e.current && (0, l.closeModal)(e.current)
                            }
                        })
                    }
                    let T = (0, d.generateBlockGuildSubscriptionPurchasesNode)();
                    return (0, a.jsxs)("div", {
                        className: S.wrapper,
                        children: [(0, a.jsx)(o.default, {
                            className: S.boostIcon,
                            width: 16,
                            height: 16
                        }), (0, a.jsx)(l.Text, {
                            className: S.copy,
                            color: "header-secondary",
                            variant: "text-sm/medium",
                            children: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_ANY_GUILD_CTA.format({
                                boostAnyGuildHook: (e, t) => {
                                    let s = null != T,
                                        n = (0, a.jsx)(l.Button, {
                                            className: S.cta,
                                            disabled: s,
                                            color: l.Button.Colors.LINK,
                                            look: l.Button.Looks.LINK,
                                            onClick: s ? void 0 : f,
                                            children: e
                                        }, t);
                                    return s ? (0, a.jsx)(l.Tooltip, {
                                        text: T,
                                        children: e => (0, a.jsx)("span", {
                                            ...e,
                                            children: n
                                        })
                                    }, t) : n
                                }
                            })
                        })]
                    })
                }
        },
        560437: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("837996"),
                r = function(e) {
                    let {
                        className: t,
                        imageClassName: n,
                        boostInCooldown: r,
                        useReducedMotion: o
                    } = e;
                    return (0, a.jsx)("div", {
                        className: l(i.imageWrapper, t, {
                            [i.cooldown]: r
                        }),
                        children: (0, a.jsx)("img", {
                            className: l(i.image, n, {
                                [i.cooldownImage]: r
                            }),
                            src: r ? s("834461") : o ? s("591779") : s("106785"),
                            alt: ""
                        })
                    })
                }
        },
        397723: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("174727"),
                i = s("888400"),
                r = s("782340"),
                o = function(e) {
                    let {
                        className: t,
                        cooldown: s
                    } = e, o = (0, l.default)(s);
                    return (0, a.jsx)(n.Text, {
                        className: t,
                        variant: "text-sm/medium",
                        color: "text-muted",
                        children: (0, i.unitsAsStrings)(o, {
                            days: r.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_DAYS,
                            hours: r.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_HOURS,
                            minutes: r.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_MINUTES
                        })
                    })
                }
        },
        717266: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("560437"),
                r = s("441762"),
                o = function(e) {
                    let {
                        className: t,
                        hasCooldown: n,
                        isCanceled: o,
                        useReducedMotion: d
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: l(r.boostIconContainer, t),
                        children: [o ? (0, a.jsx)("img", {
                            className: l(r.boostIcon, r.boostIconCanceled),
                            src: s("430208"),
                            alt: ""
                        }) : (0, a.jsx)(i.default, {
                            className: r.boostIcon,
                            boostInCooldown: n,
                            useReducedMotion: d
                        }), !o && n && (0, a.jsx)("img", {
                            className: r.snowflake,
                            src: s("203705"),
                            alt: ""
                        })]
                    })
                }
        },
        131424: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("65597"),
                r = s("77078"),
                o = s("95039"),
                d = s("617917"),
                u = s("305961"),
                c = s("476263"),
                S = s("118503"),
                E = s("277703"),
                f = s("16988"),
                T = s("427459"),
                m = s("49111"),
                _ = s("782340"),
                g = s("396375");

            function h(e) {
                let {
                    className: t,
                    extraLongSparkle: s
                } = e, n = 48, i = 18;
                return s && (n = 61, i = 22), (0, a.jsx)("div", {
                    className: l(g.sideSparkleContainer, t),
                    style: {
                        height: n
                    },
                    children: (0, a.jsx)(f.default, {
                        className: l(g.sparkle, g.sideSparkle),
                        style: {
                            top: i
                        }
                    })
                })
            }
            var I = function(e) {
                let {
                    className: t,
                    guildId: s,
                    boostingVariant: n,
                    showSparkes: I
                } = e, N = (0, i.default)([u.default], () => u.default.getGuild(s), [s]);
                return null == N ? (0, a.jsx)("div", {
                    className: l(t, g.guildContainer),
                    children: (0, a.jsx)("div", {
                        className: g.guildInfoContainer,
                        children: (0, a.jsx)(r.Text, {
                            variant: "text-lg/bold",
                            children: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_APPLIED_GUILD_BOOST_UNKNOWN_GUILD
                        })
                    })
                }) : (0, a.jsxs)("div", {
                    className: l(t, g.guildContainer),
                    children: [(0, a.jsx)(c.default, {
                        className: g.guildIcon,
                        guild: N,
                        size: c.default.Sizes.LARGER
                    }), (0, a.jsxs)("div", {
                        className: g.guildInfoContainer,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-lg/bold",
                            children: N.name
                        }), (0, a.jsxs)("div", {
                            className: g.guildBoostStatsContainer,
                            children: [(0, a.jsx)(S.default, {
                                className: g.guildBoostBadge,
                                width: 16,
                                height: 16
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-sm/bold",
                                color: "text-muted",
                                children: _.default.Messages.PREMIUM_GUILD_PERKS_MODAL_HEADER_SUBSCRIPTION_COUNT.format({
                                    subscriptions: N.premiumSubscriberCount
                                })
                            }), (0, a.jsx)("div", {
                                className: g.separator
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-sm/bold",
                                color: "text-muted",
                                children: (0, T.getTierName)(N.premiumTier, {
                                    useLevels: !1
                                })
                            })]
                        })]
                    }), n ? (0, a.jsx)(d.default, {
                        guild: N,
                        analyticsLocation: {
                            page: m.AnalyticsPages.GUILD_BOOSTING_USER_SETTINGS,
                            section: m.AnalyticsSections.GUILD_BOOSTING_RECOMMENDED_SERVER_BOOST_THIS_SERVER_CTA,
                            object: m.AnalyticsObjects.BUTTON_CTA,
                            objectType: m.AnalyticsObjectTypes.BUY
                        },
                        pauseAnimation: !0,
                        size: r.Button.Sizes.MEDIUM,
                        color: r.Button.Colors.PRIMARY,
                        buttonText: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_THIS_SERVER
                    }) : (0, a.jsx)(r.Button, {
                        color: r.Button.Colors.PRIMARY,
                        onClick: () => {
                            (0, o.openGuildBoostingMarketingModal)({
                                guildId: N.id,
                                location: {
                                    section: m.AnalyticsSections.GUILD_BOOSTING_RECOMMENDED_SERVER_GO_TO_SERVER_CTA
                                }
                            })
                        },
                        size: r.Button.Sizes.MEDIUM,
                        children: _.default.Messages.NAVIGATE_TO_GUILD
                    }), I && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(h, {
                            className: g.sparkle1
                        }), (0, a.jsx)(E.default, {
                            className: l(g.sparkle, g.sparkle2)
                        }), (0, a.jsx)(h, {
                            className: g.sparkle3,
                            extraLongSparkle: !0
                        }), (0, a.jsx)(f.default, {
                            className: l(g.sparkle, g.sparkle4)
                        })]
                    })]
                })
            }
        },
        358189: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("782340"),
                i = s("245117"),
                r = function(e) {
                    let {
                        hasGuildBoostSlots: t,
                        hasAppliedGuildBoosts: r,
                        isUserPremiumTier2: o
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i.wrapper,
                        children: [(0, a.jsx)("div", {
                            className: i.guildBoostGemWrapper,
                            children: (0, a.jsx)("img", {
                                alt: "",
                                className: i.guildBoostGem,
                                src: s("591779")
                            })
                        }), (0, a.jsxs)("div", {
                            className: i.gradient,
                            children: [(0, a.jsx)(n.Heading, {
                                variant: "display-md",
                                className: i.heading,
                                children: function(e) {
                                    let {
                                        hasGuildBoostSlots: t,
                                        hasAppliedGuildBoosts: s,
                                        isUserPremiumTier2: a
                                    } = e;
                                    return t ? a && !s ? l.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_HAS_UNAPPLIED_FREE_GUILD_BOOSTS.format() : l.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_YOUR_GUILD_BOOSTS.format() : l.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_NO_GUILD_BOOSTS
                                }({
                                    hasGuildBoostSlots: t,
                                    isUserPremiumTier2: o,
                                    hasAppliedGuildBoosts: r
                                })
                            }), (0, a.jsx)("svg", {
                                viewBox: "0 0 660 210",
                                className: i.wave,
                                children: (0, a.jsx)("path", {
                                    d: "M101.3,45.5C57.5,45.9,15.9,82.2,0,99.5V210h660V53.5c-164-137-265.2,32.4-385.8,33.6  C177.7,88.1,158.1,45,101.3,45.5z"
                                })
                            })]
                        })]
                    })
                }
        },
        313577: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("54239"),
                i = s("393414"),
                r = s("49111"),
                o = s("782340"),
                d = s("536914"),
                u = s("156465");

            function c() {
                return (0, a.jsxs)("div", {
                    className: d.wrapper,
                    children: [(0, a.jsx)("img", {
                        className: d.icon,
                        alt: "",
                        src: u
                    }), (0, a.jsxs)("div", {
                        className: d.info,
                        children: [(0, a.jsx)(n.Text, {
                            variant: "text-lg/bold",
                            children: o.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_TITLE
                        }), (0, a.jsx)(n.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: o.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_SUBTITLE
                        })]
                    }), (0, a.jsx)(n.Button, {
                        color: n.Button.Colors.PRIMARY,
                        onClick: () => {
                            (0, i.transitionTo)(r.Routes.GUILD_DISCOVERY), (0, l.popLayer)()
                        },
                        size: n.Button.Sizes.LARGE,
                        children: o.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_CTA
                    })]
                })
            }
        },
        236972: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            }), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("555826"),
                o = s("677099"),
                d = s("840022"),
                u = s("131424"),
                c = s("782340"),
                S = s("559218"),
                E = function(e) {
                    let {
                        hasAppliedGuildBoosts: t
                    } = e, s = (0, l.useStateFromStores)([r.default], () => r.default.affinities), E = (0, l.useStateFromStores)([o.default], () => o.default.getFlattenedGuildIds()), f = n.useMemo(() => {
                        let e = s.slice(0, 3).map(e => e.guildId);
                        for (let t = 0; t < E.length && !(e.length >= 3); t++) {
                            let s = E[t];
                            !e.includes(s) && e.push(s)
                        }
                        return e
                    }, [s, E]);
                    return 0 === f.length ? null : (0, a.jsxs)("div", {
                        className: S.wrapper,
                        children: [t && (0, a.jsx)(i.Heading, {
                            variant: "heading-lg/semibold",
                            className: S.header,
                            children: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_RECOMMENDED_SERVERS_HEADING
                        }), f.map((e, t) => (0, a.jsx)(u.default, {
                            className: S.recommendedServerCard,
                            guildId: e,
                            boostingVariant: !0,
                            showSparkes: 0 === t
                        }, e)), E.length > 3 && (0, a.jsx)(d.default, {})]
                    })
                }
        },
        334811: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("862205");
            let n = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_guild_boosting_settings_redesign",
                label: "Guild Boosting Settings Redesign",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Variant 1",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Variant 1 international",
                    config: {
                        enabled: !0
                    }
                }]
            });
            var l = n
        },
        995956: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("701909"),
                i = s("719923"),
                r = s("153160"),
                o = s("49111"),
                d = s("646718"),
                u = s("782340"),
                c = s("400111"),
                S = function(e) {
                    let {
                        hasAppliedGuildBoosts: t,
                        isUserPremiumTier2: s,
                        hasGuildAffinitiesOrInGuild: S
                    } = e, {
                        subtitle: E,
                        flavor: f
                    } = function(e) {
                        let {
                            hasAppliedGuildBoosts: t,
                            isUserPremiumTier2: s,
                            hasGuildAffinitiesOrInGuild: a
                        } = e;
                        if (!a) return {
                            subtitle: u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_NO_JOINED_SERVER_SUBTITLE
                        };
                        if (t) return {
                            subtitle: u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_ACTIVE_BOOSTS,
                            flavor: u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_ACTIVE_BOOSTS_FLAVOR.format({
                                helpdeskArticle: l.default.getArticleURL(o.HelpdeskArticles.GUILD_SUBSCRIPTIONS)
                            })
                        };
                        let n = d.SubscriptionPlanInfo[d.SubscriptionPlans.PREMIUM_MONTH_GUILD],
                            c = i.default.getDefaultPrice(n.id, s),
                            S = (0, r.formatRate)((0, r.formatPrice)(c.amount, c.currency), n.interval, n.intervalCount);
                        return {
                            subtitle: s ? u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_SUBBED_NO_ACTIVE_BOOSTS : u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_NO_SUB_NO_ACTIVE_BOOSTS,
                            flavor: u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_NO_ACTIVE_BOOSTS_FLAVOR.format({
                                monthlyGuildBoostPrice: S
                            })
                        }
                    }({
                        hasAppliedGuildBoosts: t,
                        isUserPremiumTier2: s,
                        hasGuildAffinitiesOrInGuild: S
                    });
                    return (0, a.jsxs)("div", {
                        className: c.wrapper,
                        children: [(0, a.jsx)(n.Heading, {
                            variant: "heading-lg/bold",
                            className: c.subtitle,
                            children: E
                        }), null != f && (0, a.jsx)(n.Text, {
                            variant: "text-sm/normal",
                            children: f
                        })]
                    })
                }
        },
        664671: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return p
                }
            }), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("206230"),
                o = s("626301"),
                d = s("697218"),
                u = s("521012"),
                c = s("427459"),
                S = s("719923"),
                E = s("560437"),
                f = s("397723"),
                T = s("717266"),
                m = s("49111"),
                _ = s("782340"),
                g = s("152089");

            function h(e) {
                let {
                    guildBoostSlot: t,
                    isCancellable: s,
                    onCancel: l,
                    onUncancel: r,
                    premiumSubscription: o,
                    useReducedMotion: d
                } = e, u = n.useMemo(() => null != t.cooldownEndsAt ? new Date(t.cooldownEndsAt) : null, [t]), S = (0, c.isGuildBoostSlotCanceled)(t);
                return (0, a.jsxs)("li", {
                    className: g.unappliedGuildBoostSlot,
                    children: [(0, a.jsxs)("div", {
                        className: g.unappliedGuildBoostSlotContentPrimary,
                        children: [(0, a.jsx)(T.default, {
                            className: g.unappliedGuildBoostSlotIcon,
                            hasCooldown: t.isOnCooldown(),
                            isCanceled: S,
                            useReducedMotion: d
                        }), S && null != o ? (0, a.jsx)(i.Text, {
                            color: "text-muted",
                            variant: "text-sm/medium",
                            children: _.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format({
                                date: o.currentPeriodEnd
                            })
                        }) : t.isOnCooldown() && null != u ? (0, a.jsx)(f.default, {
                            cooldown: u.getTime()
                        }) : (0, a.jsx)(i.Text, {
                            className: g.unappliedGuildBoostSlotDescription,
                            color: "text-muted",
                            variant: "text-sm/medium",
                            children: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_UNAPPLIED_GUILD_BOOST_DESCRIPTION
                        })]
                    }), (0, a.jsxs)("div", {
                        className: g.unappliedGuildBoostSlotContentSecondary,
                        children: [s && !S && (0, a.jsx)(i.Button, {
                            className: g.unappliedGuildBoostSlotCta,
                            color: i.Button.Colors.PRIMARY,
                            look: i.Button.Looks.LINK,
                            onClick: () => l(t),
                            size: i.Button.Sizes.NONE,
                            children: _.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_CANCEL_BUTTON
                        }), S && (0, a.jsx)(i.Button, {
                            className: g.unappliedGuildBoostSlotCta,
                            color: i.Button.Colors.PRIMARY,
                            look: i.Button.Looks.LINK,
                            onClick: () => r(t),
                            size: i.Button.Sizes.NONE,
                            children: _.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_UNCANCEL_BUTTON
                        })]
                    })]
                }, t.id)
            }

            function I(e) {
                (0, i.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await s.el("933182").then(s.bind(s, "933182"));
                    return s => (0, a.jsx)(t, {
                        ...s,
                        guildBoostSlot: e
                    })
                })
            }

            function N(e) {
                (0, i.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await s.el("738400").then(s.bind(s, "738400"));
                    return s => (0, a.jsx)(t, {
                        ...s,
                        guildBoostSlotId: e.id
                    })
                })
            }
            var p = function(e) {
                let {
                    guildBoostSlots: t
                } = e, f = (0, l.useStateFromStores)([u.default], () => u.default.getPremiumTypeSubscription()), T = (0, l.useStateFromStores)([r.default], () => r.default.useReducedMotion), p = (0, l.useStateFromStores)([d.default], () => d.default.getCurrentUser()), {
                    appliedGuildBoostSlots: C,
                    unappliedGuildBoostSlots: A,
                    numActiveGuildBoostSlots: O
                } = n.useMemo(() => {
                    let e = [],
                        s = [],
                        a = 0;
                    return t.forEach(t => {
                        !(0, c.isGuildBoostSlotCanceled)(t) && a++, null != t.premiumGuildSubscription ? e.push(t) : s.push(t)
                    }), {
                        appliedGuildBoostSlots: e,
                        unappliedGuildBoostSlots: s,
                        numActiveGuildBoostSlots: a
                    }
                }, [t]), x = null != f ? S.default.getNumIncludedPremiumGuildSubscriptionSlots(f.planId) : 0, R = Math.max(0, x - C.length), M = O > x, v = x === t.length, D = v && R === x ? x : 1, L = n.useMemo(() => {
                    let e = [];
                    for (let t = 0; t < D; t++) e.push((0, a.jsx)(E.default, {
                        className: g.headerBoostGem,
                        useReducedMotion: T
                    }, t));
                    return e
                }, [D, T]), P = n.useMemo(() => A.find(e => e.isAvailable()), [A]);
                if (0 === A.length) return null;
                let j = A.length;
                return (0, a.jsxs)("div", {
                    className: g.wrapper,
                    children: [(0, a.jsx)("svg", {
                        className: g.border,
                        children: (0, a.jsx)("rect", {
                            className: g.borderRect,
                            height: "100%",
                            width: "100%"
                        })
                    }), (0, a.jsxs)("div", {
                        className: g.header,
                        children: [(0, a.jsxs)("div", {
                            className: g.headerContentPrimary,
                            children: [(0, a.jsx)("div", {
                                className: g.headerBoostGems,
                                children: L
                            }), (0, a.jsxs)("div", {
                                className: g.headerCopy,
                                children: [(0, a.jsx)(i.Heading, {
                                    className: g.headerHeading,
                                    variant: "heading-lg/bold",
                                    children: v ? _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_HEADING_INCLUDED_WITH_SUBSCRIPTION.format({
                                        numUnappliedGuildBoostSlots: j
                                    }) : _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_HEADING_V2.format({
                                        numUnappliedGuildBoostSlots: j
                                    })
                                }), (0, a.jsx)(i.Text, {
                                    className: g.headerSubheading,
                                    color: "text-muted",
                                    variant: "text-sm/normal",
                                    children: S.default.isPremium(p) ? _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_SUBHEADING_WITH_PREMIUM_SUBSCRIPTION.format({
                                        numUnappliedGuildBoostSlots: j,
                                        learnMoreHook: (e, t) => (0, a.jsx)(i.Clickable, {
                                            className: g.headerLearnMoreLink,
                                            tag: "span",
                                            onClick: () => {
                                                (0, o.navigateToPremiumMarketingPage)()
                                            },
                                            children: e
                                        }, t)
                                    }) : _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_SUBHEADING.format({
                                        numUnappliedGuildBoostSlots: j
                                    })
                                })]
                            })]
                        }), (0, a.jsx)("div", {
                            className: g.headerContentSecondary,
                            children: (0, a.jsx)(i.Tooltip, {
                                shouldShow: null == P,
                                text: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_NO_AVAILABLE_GUILD_BOOST_SLOTS,
                                children: e => (0, a.jsx)(i.Button, {
                                    ...e,
                                    disabled: null == P,
                                    onClick: null != P ? () => {
                                        var e;
                                        return e = P, void(0, i.openModalLazy)(async () => {
                                            let {
                                                default: t
                                            } = await s.el("247760").then(s.bind(s, "247760"));
                                            return s => (0, a.jsx)(t, {
                                                ...s,
                                                guildBoostSlots: [e],
                                                locationSection: m.AnalyticsSections.SETTINGS_PREMIUM
                                            })
                                        })
                                    } : void 0,
                                    children: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_ANY_SERVER
                                })
                            })
                        })]
                    }), !v && (0, a.jsx)("ul", {
                        className: g.unappliedBoostSlots,
                        children: A.map(e => (0, a.jsx)(h, {
                            guildBoostSlot: e,
                            isCancellable: M,
                            onCancel: I,
                            onUncancel: N,
                            premiumSubscription: f,
                            useReducedMotion: T
                        }, e.id))
                    })]
                })
            }
        },
        77809: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            }), s("808653");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("26092"),
                u = s("389434"),
                c = s("521128"),
                S = s("853994"),
                E = s("782340"),
                f = s("716553"),
                T = s("926622");

            function m(e) {
                let {
                    label: t,
                    onChange: s,
                    enabled: n,
                    subLabel: l
                } = e;
                return (0, a.jsx)(o.FormSwitch, {
                    value: !!n,
                    onChange: s,
                    note: l,
                    children: t
                })
            }

            function _() {
                let e = (0, r.useStateFromStores)([d.default], () => d.default.getSubsection()),
                    t = n.createRef(),
                    {
                        categories: s,
                        initialized: l
                    } = (0, r.useStateFromStoresObject)([c.default], () => c.default.getEmailSettings());
                n.useEffect(() => {
                    if (null == l)(0, u.fetchEmailSettings)();
                    else if (e === S.EMAILS_SUBSECTION.toUpperCase()) {
                        var s;
                        null == t || null === (s = t.current) || void 0 === s || s.scrollIntoView(!0)
                    }
                }, [l, t, e]);
                let _ = S.MarketingEmailCategories.reduce((e, t) => e || !!s[t], !1);
                return l ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        ref: t
                    }), (0, a.jsxs)(o.FormSection, {
                        className: i(T.marginTop40),
                        tag: o.FormTitleTags.H1,
                        title: E.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS,
                        children: [S.EmailCategoriesList.map(e => {
                            let {
                                category: t,
                                label: n,
                                subLabel: l
                            } = e;
                            return (0, a.jsx)(m, {
                                label: n(),
                                subLabel: l(),
                                enabled: s[t],
                                onChange: e => {
                                    var s, a;
                                    return s = t, a = e, void(0, u.updateEmailSetting)(s, a)
                                }
                            }, n())
                        }), (0, a.jsx)(o.Button, {
                            className: f.marketingUnsubscribeButton,
                            disabled: !_,
                            look: o.ButtonLooks.LINK,
                            color: o.ButtonColors.LINK,
                            onClick: u.updateMarketingEmailSettings,
                            children: E.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING
                        }), (0, a.jsx)(o.FormText, {
                            type: o.FormTextTypes.DESCRIPTION,
                            children: E.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING_DESCRIPTION
                        }), (0, a.jsx)(o.FormDivider, {
                            className: i(T.marginTop40, T.marginBottom40)
                        })]
                    })]
                }) : null
            }
        },
        907148: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return D
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("627445"),
                l = s.n(n),
                i = s("446674"),
                r = s("152584"),
                o = s("875212"),
                d = s("956967"),
                u = s("906932"),
                c = s("702877"),
                S = s("668688"),
                E = s("447645"),
                f = s("569460"),
                T = s("97747"),
                m = s("52704"),
                _ = s("79685"),
                g = s("741781"),
                h = s("121370"),
                I = s("370505"),
                N = s("783142"),
                p = s("713135"),
                C = s("217513"),
                A = s("790618"),
                O = s("697218"),
                x = s("719923"),
                R = s("49111"),
                M = s("782340"),
                v = s("361904");

            function D() {
                var e, t, s, n, D, L, P, j;
                let b = (0, i.useStateFromStores)([O.default], () => {
                        let e = O.default.getCurrentUser();
                        return l(null != e, "DefaultCustomizationSections: user cannot be undefined"), e
                    }),
                    U = (0, i.useStateFromStores)([p.default], () => p.default.getUserProfile(b.id)),
                    {
                        pendingAvatar: B,
                        pendingGlobalName: y,
                        pendingBanner: F,
                        pendingBio: G,
                        pendingPronouns: k,
                        pendingAccentColor: H,
                        pendingThemeColors: w,
                        errors: V
                    } = (0, i.useStateFromStoresObject)([A.default], () => {
                        let e = A.default.getAllPending(),
                            t = A.default.getErrors();
                        return {
                            ...e,
                            errors: t
                        }
                    }),
                    Y = (0, d.useGuildAutomodProfileQuarantineErrors)(),
                    W = x.default.canUsePremiumProfileCustomization(b),
                    K = (0, u.showRemoveAvatar)(B, b.avatar),
                    z = (0, u.showRemoveBanner)(F, null == U ? void 0 : U.banner),
                    Q = "DefaultCustomizationSections";
                (0, o.useTriggerDebuggingAA)({
                    location: Q + " auto on",
                    autoTrackExposure: !0
                }), (0, o.useTriggerDebuggingAA)({
                    location: Q + " auto off",
                    autoTrackExposure: !1
                });
                let q = (0, C.default)(b.id),
                    Z = null == q ? void 0 : q.getLegacyUsername(),
                    X = (null !== (s = null === (e = V.global_name) || void 0 === e ? void 0 : e.length) && void 0 !== s ? s : 0) > 0 ? V.global_name : null !== (n = null == Y ? void 0 : Y.nick) && void 0 !== n ? n : [],
                    J = (null !== (D = null === (t = V.bio) || void 0 === t ? void 0 : t.length) && void 0 !== D ? D : 0) > 0 ? V.bio : null !== (L = null == Y ? void 0 : Y.bio) && void 0 !== L ? L : [];
                return (0, a.jsxs)("div", {
                    className: v.sectionsContainer,
                    children: [(0, a.jsx)(f.default, {
                        placeholder: b.username,
                        errors: X,
                        currentGlobalName: b.globalName,
                        pendingGlobalName: y,
                        onGlobalNameChange: r.setPendingGlobalNameName
                    }), (0, a.jsx)(I.default, {
                        sectionTitle: M.default.Messages.USER_SETTINGS_PRONOUNS,
                        errors: V.pronouns,
                        onPronounsChange: N.setPendingPronouns,
                        pendingPronouns: k,
                        currentPronouns: null !== (P = null == U ? void 0 : U.pronouns) && void 0 !== P ? P : ""
                    }, "pronouns"), (0, a.jsx)(E.default, {
                        onAvatarChange: r.setPendingAvatar,
                        showRemoveAvatarButton: K,
                        errors: V.avatar,
                        sectionTitle: M.default.Messages.USER_SETTINGS_AVATAR,
                        forcedDivider: !0
                    }, "avatar"), (0, a.jsx)(S.default, {
                        user: b
                    }, "decoration"), (0, a.jsx)(g.default, {
                        user: b
                    }, "effect"), W ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(m.default, {
                            showRemoveBannerButton: z,
                            errors: V.banner,
                            onBannerChange: N.setPendingBanner,
                            forcedDivider: !0
                        }, "banner"), (0, a.jsx)(h.default, {
                            user: b,
                            pendingAvatar: B,
                            pendingColors: w,
                            onThemeColorsChange: N.setPendingThemeColors,
                            forcedDivider: !0
                        })]
                    }) : (0, a.jsx)(_.default, {
                        user: b,
                        savedUserColor: null == U ? void 0 : U.accentColor,
                        pendingColor: H,
                        setPendingAccentColor: N.setPendingAccentColor
                    }, "color"), (0, a.jsx)(c.default, {
                        sectionTitle: M.default.Messages.USER_SETTINGS_ABOUT_ME,
                        errors: J,
                        onBioChange: e => {
                            (0, u.setNewPendingUserBio)(e, null == U ? void 0 : U.bio), (0, r.setDisableSubmit)(null != e && e.length > R.BIO_MAX_LENGTH)
                        },
                        pendingBio: G,
                        currentBio: null !== (j = null == U ? void 0 : U.bio) && void 0 !== j ? j : ""
                    }, "bio"), null != Z && (0, a.jsx)(T.default, {
                        legacyUsername: Z
                    }, "legacy_username")]
                })
            }
        },
        621200: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return M
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("627445"),
                i = s.n(l),
                r = s("446674"),
                o = s("913144"),
                d = s("327037"),
                u = s("152584"),
                c = s("642950"),
                S = s("875212"),
                E = s("812204"),
                f = s("685665"),
                T = s("104385"),
                m = s("884351"),
                _ = s("184900"),
                g = s("11899"),
                h = s("635415"),
                I = s("783142"),
                N = s("102985"),
                p = s("790618"),
                C = s("697218"),
                A = s("719923"),
                O = s("845579"),
                x = s("415167"),
                R = s("907148");

            function M() {
                let e = (0, r.useStateFromStores)([C.default], () => {
                    let e = C.default.getCurrentUser();
                    return i(null != e, "UserSettingsProfileCustomization: user cannot be undefined"), e
                });
                n.useEffect(() => {
                    (0, d.fetchProfile)(e.id)
                }, [e.id]);
                let t = (0, r.useStateFromStores)([N.default], () => N.default.hidePersonalInformation),
                    {
                        pendingAvatar: s,
                        pendingBanner: l,
                        pendingBio: M,
                        pendingPronouns: v,
                        pendingGlobalName: D,
                        pendingAccentColor: L,
                        pendingAvatarDecoration: P,
                        pendingThemeColors: j,
                        pendingProfileEffectId: b
                    } = (0, r.useStateFromStoresObject)([p.default], () => {
                        let e = p.default.getAllPending(),
                            t = p.default.getErrors();
                        return {
                            ...e,
                            errors: t
                        }
                    }),
                    U = O.UseLegacyChatInput.useSetting(),
                    B = U && null != M ? m.default.parse(void 0, M).content : M,
                    y = A.default.canUsePremiumProfileCustomization(e),
                    {
                        AnalyticsLocationProvider: F
                    } = (0, f.default)(E.default.PROFILE),
                    G = {
                        user: e,
                        canUsePremiumCustomization: y,
                        onUpsellClick: x.default,
                        onAvatarChange: u.setPendingAvatar,
                        onBannerChange: I.setPendingBanner,
                        pendingBanner: l,
                        pendingBio: B,
                        pendingPronouns: v,
                        pendingAvatar: s,
                        pendingGlobalName: D,
                        pendingAvatarDecoration: P,
                        pendingProfileEffectId: b
                    };
                n.useEffect(() => () => o.default.wait(u.resetAllPending), []);
                let k = "UserSettingsProfileCustomization";
                return ((0, S.useTriggerDebuggingAA)({
                    location: k + " auto on",
                    autoTrackExposure: !0
                }), (0, S.useTriggerDebuggingAA)({
                    location: k + " auto off",
                    autoTrackExposure: !1
                }), t) ? (0, a.jsx)(c.default, {}) : (0, a.jsx)(F, {
                    children: (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(T.default, {}), (0, a.jsx)(g.default, {
                            profilePreview: (0, a.jsx)(_.default, {
                                ...G,
                                pendingThemeColors: j,
                                pendingAccentColor: L
                            }),
                            children: (0, a.jsx)(R.default, {})
                        }), !A.default.canUsePremiumProfileCustomization(e) && (0, a.jsx)(h.default, {
                            user: e
                        })]
                    })
                })
            }
        },
        934810: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return M
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("430568"),
                o = s("685665"),
                d = s("185153"),
                u = s("570697"),
                c = s("305122"),
                S = s("235004"),
                E = s("78581"),
                f = s("675961"),
                T = s("561847"),
                m = s("555158"),
                _ = s("216422"),
                g = s("368121"),
                h = s("701909"),
                I = s("374363"),
                N = s("267823"),
                p = s("49111"),
                C = s("846325"),
                A = s("782340"),
                O = s("60351"),
                x = s("926622");

            function R(e) {
                return (0, l.useStateFromStores)([S.default], () => {
                    if (null == e) return null;
                    let {
                        guildId: t,
                        soundId: s
                    } = e;
                    return S.default.getSound(t === C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID ? C.DEFAULT_SOUND_GUILD_ID : t, s)
                })
            }

            function M() {
                let {
                    analyticsLocations: e
                } = (0, o.default)(), [t, s] = n.useState(C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID), r = (0, f.useCustomJoinSound)(t), g = R(r), I = (0, l.useStateFromStores)([S.default], () => S.default.hasFetchedAllSounds()), M = (null == r ? void 0 : r.type) === f.CustomSoundType.GLOBAL, D = I && null != r && null == g;
                n.useEffect(() => {
                    D && (0, E.trackCustomCallSoundExternallyDeleted)({
                        location: e
                    })
                }, [D, e]), n.useEffect(() => {
                    (0, c.maybeFetchSoundboardSounds)()
                }, []);
                let L = n.useCallback((e, t) => {
                    var s;
                    let {
                        inDropdown: n
                    } = t;
                    return n ? (0, a.jsx)(v, {
                        guildId: null !== (s = null == e ? void 0 : e.value) && void 0 !== s ? s : ""
                    }) : null
                }, []);
                return (0, a.jsxs)(i.FormSection, {
                    className: O.container,
                    tag: i.FormTitleTags.H1,
                    titleClassName: x.marginBottom16,
                    title: A.default.Messages.SOUNDBOARD,
                    children: [(0, a.jsx)(N.default, {}), (0, a.jsx)(i.FormDivider, {
                        className: O.callSoundsDivider
                    }), (0, a.jsx)(i.Heading, {
                        variant: "text-md/medium",
                        color: "header-primary",
                        className: O.callSoundsTitle,
                        children: A.default.Messages.CALL_SOUNDS_SETTINGS
                    }), (0, a.jsx)(i.Text, {
                        variant: "text-sm/medium",
                        color: "header-secondary",
                        children: A.default.Messages.CALL_SOUNDS_SETTINGS_DESCRIPTION_2.format({
                            helpdeskArticle: h.default.getArticleURL(p.HelpdeskArticles.SOUNDBOARD)
                        })
                    }), (0, a.jsx)(d.default, {
                        guildId: t,
                        className: O.guildSelector,
                        globalOption: {
                            label: A.default.Messages.CALL_SOUNDS_SETTINGS_GLOBAL_GUILD_SEARCH,
                            value: C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID
                        },
                        onChange: e => s(null == e ? C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID : e.id),
                        renderOptionSuffix: L,
                        hideDivider: !0
                    }), (0, a.jsxs)(u.default, {
                        className: x.marginTop20,
                        title: A.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND.format({
                            nitroWheelHook: () => (0, a.jsx)(_.default, {
                                className: O.nitroWheel
                            })
                        }),
                        forcedDivider: !0,
                        children: [(0, a.jsx)(T.default, {
                            sound: g,
                            isGlobal: M,
                            onSelect: s => {
                                null == s ? (0, E.removeCustomJoinSound)(t, e) : (0, E.updateCustomJoinSound)(t, s, e)
                            }
                        }), D && (0, a.jsx)(m.default, {
                            className: O.notice,
                            messageType: m.HelpMessageTypes.WARNING,
                            children: A.default.Messages.CALL_SOUNDS_SETTINGS_SOUND_REMOVED
                        })]
                    })]
                })
            }

            function v(e) {
                let {
                    guildId: t
                } = e, s = (0, l.useStateFromStores)([I.default], () => {
                    var e, s, a;
                    return null === (a = I.default.settings.guilds) || void 0 === a ? void 0 : null === (s = a.guilds) || void 0 === s ? void 0 : null === (e = s[t]) || void 0 === e ? void 0 : e.joinSound
                }), n = R(s);
                if (null == s || null == n) return null;
                let {
                    emojiId: o,
                    emojiName: d
                } = n, u = null != o || null != d;
                return (0, a.jsxs)("div", {
                    className: O.pill,
                    children: [u ? (0, a.jsx)(r.default, {
                        emojiId: o,
                        emojiName: d,
                        className: O.pillIcon
                    }) : (0, a.jsx)(g.default, {
                        className: O.pillIcon
                    }), (0, a.jsx)(i.Text, {
                        className: O.pillText,
                        variant: "text-xs/medium",
                        children: n.name
                    })]
                })
            }
        },
        789854: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return R
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("819855"),
                d = s("77078"),
                u = s("629109"),
                c = s("42887"),
                S = s("145131"),
                E = s("599110"),
                f = s("773336"),
                T = s("50885"),
                m = s("161778"),
                _ = s("225849"),
                g = s("397336"),
                h = s("49111"),
                I = s("353927"),
                N = s("782340"),
                p = s("926622");
            let C = s("305213"),
                A = s("629551");

            function O(e) {
                u.default.setAV1Enabled(e), E.default.track(h.AnalyticEvents.VOICE_SETTINGS_CHANGED, {
                    av1_disabled: !e,
                    av1_enabled: e
                })
            }

            function x() {
                let {
                    experimentalEncoders: e
                } = (0, r.useStateFromStoresObject)([c.default], () => ({
                    experimentalEncoders: c.default.getExperimentalEncoders()
                }));
                return "stable" !== T.default.releaseChannel && c.default.isExperimentalEncodersSupported() ? (0, a.jsx)(d.FormSwitch, {
                    className: i(p.marginTop8, p.marginBottom20),
                    value: e,
                    onChange: e => u.default.setExperimentalEncoders(e),
                    disabled: !1,
                    children: N.default.Messages.EXPERIMENTAL_ENCODERS
                }) : null
            }

            function R() {
                let e = (0, r.useStateFromStores)([m.default], () => m.default.theme),
                    {
                        openH264: t,
                        hardwareH264: s,
                        supportsOpenH264: l,
                        av1Enabled: E
                    } = (0, r.useStateFromStoresObject)([c.default], () => ({
                        openH264: c.default.getOpenH264(),
                        hardwareH264: c.default.getHardwareH264(),
                        supportsOpenH264: c.default.supports(I.Features.OPEN_H264),
                        av1Enabled: c.default.getAv1Enabled()
                    })),
                    T = n.useRef(null);
                return (0, _.default)(T, g.UserSettingsScrollPositions.VoiceAndVideoScrollPositions.HARDWARE_ACCELERATION), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(d.FormSection, {
                        className: p.marginBottom20,
                        title: N.default.Messages.USER_SETTINGS_VOICE_CODEC_TITLE,
                        children: (0, a.jsx)(d.FormNotice, {
                            className: p.marginBottom20,
                            type: d.FormNoticeTypes.PRIMARY,
                            imageData: {
                                src: (0, o.isThemeLight)(e) ? C : A,
                                width: 70,
                                height: 40
                            },
                            align: S.default.Align.CENTER,
                            body: N.default.Messages.USER_SETTINGS_VOICE_CODEC_DESCRIPTION
                        })
                    }), l && (0, a.jsxs)(d.FormSection, {
                        className: p.marginBottom20,
                        title: N.default.Messages.USER_SETTINGS_VOICE_VIDEO_CODEC_TITLE,
                        children: [(0, a.jsx)(d.FormSwitch, {
                            className: i(p.marginTop8, p.marginBottom20),
                            value: t,
                            onChange: e => {
                                u.default.setOpenH264(e), u.default.setHardwareH264(e)
                            },
                            disabled: !1,
                            note: N.default.Messages.FORM_HELP_OPEN_H264,
                            children: N.default.Messages.USER_SETTINGS_VOICE_OPEN_H264
                        }), (0, a.jsx)("div", {
                            style: {
                                scrollMarginTop: "48px"
                            },
                            ref: T
                        }), (0, a.jsx)(d.FormSwitch, {
                            className: i(p.marginTop8, p.marginBottom20),
                            value: s,
                            onChange: e => {
                                (0, f.isWindows)() && u.default.setAV1Enabled(e && E), u.default.setHardwareH264(e)
                            },
                            disabled: !t,
                            note: N.default.Messages.FORM_HELP_HARDWARE_H264,
                            children: N.default.Messages.USER_SETTINGS_VOICE_HARDWARE_H264
                        }), (0, f.isWindows)() && (0, a.jsx)(d.FormSwitch, {
                            className: i(p.marginTop8, p.marginBottom20),
                            value: (0, f.isWindows)() ? E && s : E,
                            onChange: e => {
                                (0, f.isWindows)() ? O(e && s): O(e)
                            },
                            note: (0, f.isWindows)() && N.default.Messages.FORM_HELP_HARDWARE_AV1,
                            disabled: (0, f.isWindows)() && !s,
                            children: N.default.Messages.USER_SETTINGS_VOICE_AV1
                        }), (0, a.jsx)(x, {})]
                    })]
                })
            }
        },
        988231: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("629109"),
                o = s("673777"),
                d = s("49671"),
                u = s("147746"),
                c = s("42887"),
                S = s("661919"),
                E = s("697218"),
                f = s("145131"),
                T = s("922932"),
                m = s("50885"),
                _ = s("49111"),
                g = s("353927"),
                h = s("782340"),
                I = s("926622");
            async function N() {
                let e = await d.default.fileManager.getModulePath(),
                    t = d.default.fileManager.join(e, "discord_voice");
                d.default.fileManager.showItemInFolder(t)
            }

            function p(e) {
                (0, i.openModal)(t => (0, a.jsx)(i.ConfirmModal, {
                    header: h.default.Messages.SET_DEBUG_LOGGING,
                    confirmText: h.default.Messages.OKAY,
                    cancelText: h.default.Messages.CANCEL,
                    onCancel: t.onClose,
                    onConfirm: () => r.default.setDebugLogging(e),
                    ...t,
                    children: (0, a.jsx)(i.Text, {
                        variant: "text-md/normal",
                        children: h.default.Messages.SET_DEBUG_LOGGING_BODY
                    })
                }))
            }

            function C() {
                let [e, t] = n.useState(!1), {
                    aecDumpSupported: s,
                    debugLogging: d,
                    aecDumpEnabled: C,
                    supportsConnectionReplay: A
                } = (0, l.useStateFromStoresObject)([c.default], () => ({
                    aecDumpSupported: c.default.isAecDumpSupported(),
                    debugLogging: c.default.getDebugLogging(),
                    aecDumpEnabled: c.default.getAecDump(),
                    supportsConnectionReplay: c.default.supports(g.Features.CONNECTION_REPLAY)
                })), O = (0, l.useStateFromStores)([S.default], () => S.default.shouldRecordNextConnection()), x = (0, l.useStateFromStores)([E.default], () => {
                    var e, t;
                    return null !== (t = null === (e = E.default.getCurrentUser()) || void 0 === e ? void 0 : e.isStaff()) && void 0 !== t && t
                }), R = ("canary" === m.default.releaseChannel || "development" === m.default.releaseChannel) && x && A;
                async function M() {
                    t(!0);
                    try {
                        await c.default.getMediaEngine().writeAudioDebugState(), await T.default.submitLiveCrashReport({
                            message: {
                                message: "User Live Dump"
                            }
                        }), await (0, u.uploadDebugLogFiles)(_.DebugLogCategory.RTC), ! function() {
                            let e = h.default.Messages.UPLOAD_DEBUG_LOG_SUCCESS_HEADER,
                                t = h.default.Messages.UPLOAD_DEBUG_LOG_SUCCESS;
                            (0, i.openModal)(s => (0, a.jsx)(i.ConfirmModal, {
                                header: e,
                                confirmButtonColor: i.Button.Colors.BRAND,
                                confirmText: h.default.Messages.OKAY,
                                ...s,
                                children: (0, a.jsx)(i.Text, {
                                    variant: "text-md/normal",
                                    children: t
                                })
                            }))
                        }()
                    } catch (e) {
                        ! function(e) {
                            let t = h.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_HEADER,
                                s = null != e ? e : h.default.Messages.UPLOAD_DEBUG_LOG_FAILURE;
                            (0, i.openModal)(e => (0, a.jsx)(i.ConfirmModal, {
                                header: t,
                                confirmButtonColor: i.Button.Colors.BRAND,
                                confirmText: h.default.Messages.OKAY,
                                ...e,
                                children: (0, a.jsx)(i.Text, {
                                    variant: "text-md/normal",
                                    children: s
                                })
                            }))
                        }(e.displayMessage)
                    }
                }
                return (0, a.jsxs)(i.FormSection, {
                    className: I.marginBottom40,
                    title: h.default.Messages.FORM_LABEL_DEBUG,
                    children: [s && (0, a.jsx)(i.FormSwitch, {
                        value: C,
                        onChange: e => r.default.setAecDump(e),
                        note: h.default.Messages.FORM_HELP_AEC_DUMP,
                        children: h.default.Messages.FORM_CHECKBOX_AEC_DUMP
                    }), R && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(i.FormSwitch, {
                            hideBorder: !0,
                            value: O,
                            onChange: e => o.setShouldRecordNextConnection(e),
                            note: h.default.Messages.FORM_HELP_CONNECTION_LOG,
                            children: h.default.Messages.FORM_CHECKBOX_CONNECTION_LOG
                        }), (0, a.jsx)(i.FormItem, {
                            children: (0, a.jsx)(f.default, {
                                className: I.marginBottom20,
                                children: (0, a.jsx)(f.default.Child, {
                                    grow: 0,
                                    shrink: 0,
                                    children: (0, a.jsx)(i.Button, {
                                        size: i.Button.Sizes.SMALL,
                                        onClick: () => o.openReplay(),
                                        children: h.default.Messages.OPEN_CONNECTION_REPLAY
                                    })
                                })
                            })
                        })]
                    }), (0, a.jsx)(i.FormSwitch, {
                        hideBorder: !0,
                        value: d,
                        onChange: p,
                        note: h.default.Messages.FORM_HELP_DEBUG_LOGGING,
                        children: h.default.Messages.FORM_CHECKBOX_DEBUG_LOGGING
                    }), (0, a.jsx)(i.FormItem, {
                        children: (0, a.jsxs)(f.default, {
                            children: [(0, a.jsx)(f.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(i.Button, {
                                    disabled: e,
                                    size: i.Button.Sizes.SMALL,
                                    onClick: M,
                                    children: h.default.Messages.UPLOAD
                                })
                            }), (0, a.jsx)(f.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(i.Button, {
                                    size: i.Button.Sizes.SMALL,
                                    onClick: N,
                                    children: h.default.Messages.SHOW_FOLDER
                                })
                            })]
                        })
                    })]
                })
            }
        },
        173364: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return h
                }
            }), s("222007");
            var a = s("37983");
            s("884691");
            var n = s("917351"),
                l = s.n(n),
                i = s("446674"),
                r = s("819855"),
                o = s("77078"),
                d = s("629109"),
                u = s("533222"),
                c = s("42887"),
                S = s("145131"),
                E = s("161778"),
                f = s("597870"),
                T = s("353927"),
                m = s("782340"),
                _ = s("947148"),
                g = s("926622");

            function h() {
                let e, t;
                let n = (0, i.useStateFromStores)([E.default], () => E.default.theme),
                    {
                        canSetInputDevice: h,
                        canSetOutputDevice: I,
                        inputDeviceId: N,
                        outputDeviceId: p
                    } = (0, i.useStateFromStoresObject)([c.default], () => ({
                        canSetInputDevice: c.default.supports(T.Features.AUDIO_INPUT_DEVICE),
                        canSetOutputDevice: c.default.supports(T.Features.AUDIO_OUTPUT_DEVICE),
                        inputDeviceId: c.default.getInputDeviceId(),
                        outputDeviceId: c.default.getOutputDeviceId()
                    })),
                    C = (0, i.useStateFromStores)([c.default], () => c.default.getInputDevices()),
                    A = (0, i.useStateFromStores)([c.default], () => c.default.getOutputDevices());
                !h && (e = (0, a.jsx)(o.FormText, {
                    type: o.FormText.Types.DESCRIPTION,
                    className: g.marginTop8,
                    children: m.default.Messages.BROWSER_INPUT_DEVICE_WARNING.format({
                        onDownloadClick: () => (0, f.openDownloadAppsModal)("Help Text Input Devices")
                    })
                })), !I && (t = (0, a.jsx)(o.FormText, {
                    type: o.FormText.Types.DESCRIPTION,
                    className: g.marginTop8,
                    children: m.default.Messages.BROWSER_OUTPUT_DEVICE_WARNING.format({
                        onDownloadClick: () => (0, f.openDownloadAppsModal)("Help Text Output Devices")
                    })
                }));
                let O = l(C).values().first(),
                    x = null != O ? O.disabled : null != e,
                    R = l(A).values().first(),
                    M = null != R ? R.disabled : null != t;

                function v(e) {
                    let t, {
                        label: l,
                        value: i
                    } = e;
                    if (u.default.isCertified(i)) {
                        let e = (0, r.isThemeLight)(n) ? s("345598") : s("295450");
                        t = (0, a.jsx)("img", {
                            src: e,
                            alt: "Certified",
                            className: _.deviceOptionCertified
                        })
                    }
                    return (0, a.jsxs)("span", {
                        className: _.deviceOption,
                        children: [(0, a.jsx)("span", {
                            className: _.deviceOptionLabel,
                            children: u.default.getCertifiedDeviceName(i, l)
                        }), t]
                    }, i)
                }

                function D(e) {
                    return v(e[0])
                }
                return (0, a.jsxs)(S.default, {
                    className: g.marginBottom20,
                    children: [(0, a.jsxs)(S.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H5,
                            className: g.marginBottom8,
                            children: m.default.Messages.FORM_LABEL_INPUT_DEVICE
                        }), (0, a.jsx)(o.SingleSelect, {
                            value: N,
                            onChange: e => d.default.setInputDevice(e, "Settings"),
                            options: l.map(C, e => {
                                let {
                                    id: t,
                                    name: s
                                } = e;
                                return {
                                    value: t,
                                    label: s
                                }
                            }),
                            isDisabled: x,
                            renderOptionValue: D,
                            renderOptionLabel: v
                        }), e]
                    }), (0, a.jsxs)(S.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H5,
                            className: g.marginBottom8,
                            children: m.default.Messages.FORM_LABEL_OUTPUT_DEVICE
                        }), (0, a.jsx)(o.SingleSelect, {
                            value: p,
                            onChange: e => d.default.setOutputDevice(e, "Settings"),
                            options: l.map(A, e => {
                                let {
                                    id: t,
                                    name: s
                                } = e;
                                return {
                                    value: t,
                                    label: s
                                }
                            }),
                            isDisabled: M,
                            renderOptionValue: D,
                            renderOptionLabel: v
                        }), t]
                    })]
                })
            }
        },
        201114: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("446674"),
                r = s("77078"),
                o = s("629109"),
                d = s("79112"),
                u = s("278108"),
                c = s("42887"),
                S = s("145131"),
                E = s("476765"),
                f = s("773336"),
                T = s("597870"),
                m = s("49111"),
                _ = s("782340"),
                g = s("871940"),
                h = s("926622");
            let I = !f.isPlatformEmbedded,
                N = (0, E.uid)();

            function p(e) {
                let {
                    value: t
                } = e;
                t === m.InputModes.PUSH_TO_TALK && I && (0, r.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await s.el("135230").then(s.bind(s, "135230"));
                    return t => (0, a.jsx)(e, {
                        title: _.default.Messages.PTT_LIMITED_TITLE,
                        confirmText: _.default.Messages.DOWNLOAD,
                        cancelText: _.default.Messages.OKAY,
                        onConfirm: () => (0, T.openDownloadAppsModal)("PTT Limited Modal"),
                        body: _.default.Messages.PTT_LIMITED_BODY,
                        ...t
                    })
                }), o.default.setMode(t)
            }

            function C(e) {
                return e >= 1e3 ? (e /= 1e3, "".concat(e.toFixed(2), "s")) : "".concat(e.toFixed(0), " ms")
            }

            function A(e) {
                let t, {
                        inputMode: s
                    } = e,
                    {
                        shortcut: n,
                        delay: E
                    } = (0, i.useStateFromStoresObject)([c.default], () => c.default.getModeOptions());
                return t = f.isPlatformEmbedded || s !== m.InputModes.PUSH_TO_TALK ? (0, a.jsx)(r.FormText, {
                    type: r.FormText.Types.DESCRIPTION,
                    className: l(g.pttToolsMessage, h.marginBottom8),
                    children: _.default.Messages.USER_SETTINGS_VOICE_ADD_MULTIPLE.format({
                        onClick: () => d.default.setSection(m.UserSettingsSections.KEYBINDS)
                    })
                }) : (0, a.jsx)(r.FormText, {
                    type: r.FormText.Types.DESCRIPTION,
                    className: l(g.pttToolsMessage, g.pttToolsWarning, h.marginBottom8),
                    children: _.default.Messages.PTT_LIMITED_WARNING.format({
                        onDownloadClick: () => (0, T.openDownloadAppsModal)("Help Text PTT")
                    })
                }), (0, a.jsxs)("div", {
                    className: g.pttTools,
                    children: [(0, a.jsxs)(S.default, {
                        children: [(0, a.jsx)(S.default.Child, {
                            basis: "50%",
                            children: (0, a.jsx)(r.FormItem, {
                                title: _.default.Messages.FORM_LABEL_SHORTCUT,
                                children: (0, a.jsx)(u.default, {
                                    defaultValue: n,
                                    onChange: e => o.default.setMode(s, {
                                        shortcut: e
                                    })
                                })
                            })
                        }), (0, a.jsx)(S.default.Child, {
                            basis: "50%",
                            children: (0, a.jsxs)(r.FormItem, {
                                children: [(0, a.jsx)(r.FormTitle, {
                                    id: N,
                                    tag: r.FormTitleTags.H5,
                                    className: h.marginBottom8,
                                    children: _.default.Messages.INPUT_MODE_PTT_RELEASE_DELAY
                                }), (0, a.jsx)(r.Slider, {
                                    initialValue: E,
                                    onValueChange: e => o.default.setMode(s, {
                                        delay: e
                                    }),
                                    onValueRender: C,
                                    maxValue: m.MAX_PTT_RELEASE_DELAY,
                                    "aria-labelledby": N
                                })]
                            })
                        })]
                    }), t]
                })
            }

            function O() {
                let e = (0, i.useStateFromStores)([c.default], () => c.default.getMode()),
                    t = [{
                        value: m.InputModes.VOICE_ACTIVITY,
                        name: _.default.Messages.INPUT_MODE_VAD
                    }, {
                        value: m.InputModes.PUSH_TO_TALK,
                        name: I ? _.default.Messages.INPUT_MODE_PTT_LIMITED : _.default.Messages.INPUT_MODE_PTT
                    }];
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(r.FormItem, {
                        title: _.default.Messages.FORM_LABEL_INPUT_MODE,
                        className: h.marginBottom20,
                        children: (0, a.jsx)(r.RadioGroup, {
                            onChange: p,
                            options: t,
                            value: e
                        })
                    }), e === m.InputModes.PUSH_TO_TALK && (0, a.jsx)(A, {
                        inputMode: e
                    })]
                })
            }
        },
        593647: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("65597"),
                l = s("77078"),
                i = s("32296"),
                r = s("42887"),
                o = s("701909"),
                d = s("49111"),
                u = s("353927"),
                c = s("782340"),
                S = s("272371");

            function E() {
                let e = (0, n.default)([r.default], () => r.default.supports(u.Features.LOOPBACK));
                return e ? (0, a.jsx)("div", {
                    className: S.micTest,
                    children: (0, a.jsx)(i.default, {
                        title: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_TITLE,
                        description: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_DESCRIPTION,
                        notchBackground: i.NotchBackground.GRAY,
                        captionVoice: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_VOICE_CAPTION,
                        captionNoVoice: (0, a.jsxs)(a.Fragment, {
                            children: [c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_VOICE_NO_INPUT_NOTICE, (0, a.jsx)(l.Anchor, {
                                className: S.micTestHelpLink,
                                href: o.default.getArticleURL(d.HelpdeskArticles.NO_INPUT_DETECTED),
                                children: c.default.Messages.NOTICE_NO_INPUT_DETECTED_HELP_LINK_TEXT
                            })]
                        }),
                        buttonTest: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_BUTTON_INACTIVE,
                        buttonStop: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_BUTTON_ACTIVE,
                        buttonClassName: S.micTestButton,
                        buttonColor: l.Button.Colors.BRAND,
                        location: {
                            page: d.AnalyticsPages.USER_SETTINGS,
                            section: d.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                        }
                    })
                }) : null
            }
        },
        366662: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("629109"),
                r = s("42887"),
                o = s("145131"),
                d = s("701909"),
                u = s("49111"),
                c = s("782340"),
                S = s("926622");

            function E() {
                let {
                    videoHook: e,
                    experimentalSoundshare: t,
                    soundshareEnabled: s,
                    supportsVideoHook: E,
                    supportsExperimentalSoundshare: f,
                    supportsEnableSoundshare: T
                } = (0, n.useStateFromStoresObject)([r.default], () => ({
                    videoHook: r.default.getVideoHook(),
                    experimentalSoundshare: r.default.getExperimentalSoundshare(),
                    soundshareEnabled: r.default.getSoundshareEnabled(),
                    supportsVideoHook: r.default.supportsVideoHook(),
                    supportsExperimentalSoundshare: r.default.supportsExperimentalSoundshare(),
                    supportsEnableSoundshare: r.default.supportsEnableSoundshare()
                }));
                return E || f || T ? (0, a.jsxs)(l.FormSection, {
                    className: S.marginBottom20,
                    title: c.default.Messages.FORM_LABEL_SCREENSHARE,
                    children: [E && (0, a.jsx)(l.FormSwitch, {
                        value: e,
                        onChange: e => i.default.setVideoHook(e),
                        note: c.default.Messages.FORM_HELP_VIDEO_HOOK,
                        children: c.default.Messages.USER_SETTINGS_VOICE_VIDEO_HOOK_LABEL
                    }), f && (0, a.jsx)(l.FormSwitch, {
                        value: t,
                        onChange: e => i.default.setExperimentalSoundshare(e),
                        children: c.default.Messages.USER_SETTINGS_VOICE_EXPERIMENTAL_SOUNDSHARE_LABEL
                    }), T && (0, a.jsxs)(l.FormItem, {
                        children: [(0, a.jsx)(l.FormText, {
                            className: S.marginBottom20,
                            children: (function(e) {
                                switch (e) {
                                    case u.SoundshareEnableState.ENABLING:
                                        return c.default.Messages.USER_SETTINGS_VOICE_SOUNDSHARE_ENABLING_LABEL;
                                    case u.SoundshareEnableState.ENABLED:
                                        return c.default.Messages.USER_SETTINGS_VOICE_SOUNDSHARE_ENABLED_LABEL;
                                    case u.SoundshareEnableState.FAILED_TO_ENABLE:
                                        return c.default.Messages.USER_SETTINGS_VOICE_SOUNDSHARE_FAILED_TO_ENABLE_LABEL
                                }
                                return c.default.Messages.USER_SETTINGS_VOICE_SOUNDSHARE_NOT_ENABLED_LABEL
                            })(s).format({
                                helpdeskArticle: d.default.getArticleURL(u.HelpdeskArticles.OSX_SOUNDSHARE)
                            })
                        }), (0, a.jsx)(o.default, {
                            children: (0, a.jsx)(o.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(l.Button, {
                                    className: S.marginBottom20,
                                    size: l.Button.Sizes.SMALL,
                                    onClick: () => i.default.enableSoundshare(),
                                    disabled: s !== u.SoundshareEnableState.NOT_ENABLED,
                                    children: c.default.Messages.USER_SETTINGS_VOICE_INSTALL_LABEL
                                })
                            })
                        }), (0, a.jsx)(l.FormDivider, {
                            className: S.marginBottom20
                        })]
                    })]
                }) : null
            }
        },
        267823: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return m
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("77078"),
                r = s("305122"),
                o = s("78581"),
                d = s("476765"),
                u = s("701909"),
                c = s("829536"),
                S = s("49111"),
                E = s("782340"),
                f = s("933661");
            let T = (0, d.uid)();

            function m() {
                let e = (0, o.getAmplitudinalSoundboardVolume)();
                return (0, a.jsxs)("div", {
                    className: l(f.soundboardRow),
                    children: [(0, a.jsxs)("div", {
                        className: l(f.soundboardColumn, f.leftColumn),
                        children: [(0, a.jsx)(i.FormTitle, {
                            tag: i.FormTitleTags.H5,
                            className: f.soundboardTitle,
                            children: E.default.Messages.USER_SETTINGS_SOUNDBOARD
                        }), (0, a.jsx)(i.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: E.default.Messages.USER_SETTINGS_SOUNDBOARD_VOLUME_DESCRIPTION_WITH_LINK.format({
                                helpCenterArticle: u.default.getArticleURL(S.HelpdeskArticles.SOUNDBOARD)
                            })
                        })]
                    }), (0, a.jsxs)("div", {
                        className: l(f.soundboardColumn, f.rightColumn),
                        children: [(0, a.jsx)(i.FormTitle, {
                            id: T,
                            tag: i.FormTitleTags.H5,
                            className: f.soundboardSubtitle,
                            children: E.default.Messages.USER_SETTINGS_SOUNDBOARD_VOLUME
                        }), (0, a.jsx)(i.Slider, {
                            initialValue: (0, c.amplitudeToPerceptual)(e),
                            maxValue: 100,
                            onValueRender: e => "".concat(e.toFixed(0), "%"),
                            asValueChanges: function(t) {
                                e = (0, c.perceptualToAmplitude)(t), (0, r.updateUserSoundboardVolume)(e)
                            },
                            "aria-labelledby": T
                        })]
                    })]
                })
            }
        },
        992121: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return m
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("42887"),
                u = s("597870"),
                c = s("831490"),
                S = s("353927"),
                E = s("782340"),
                f = s("926622");

            function T() {
                return (0, a.jsx)(o.FormNotice, {
                    type: o.CardTypes.PRIMARY,
                    title: E.default.Messages.VIDEO_UNSUPPORTED_BROWSER_TITLE,
                    body: E.default.Messages.VIDEO_UNSUPPORTED_BROWSER_BODY,
                    button: (0, a.jsx)(o.Button, {
                        size: o.Button.Sizes.SMALL,
                        className: f.marginTop20,
                        onClick: () => (0, u.openDownloadAppsModal)("Video unsupported browser"),
                        children: E.default.Messages.DOWNLOAD_APP
                    })
                })
            }

            function m() {
                let e = (0, r.useStateFromStores)([d.default], () => d.default.supports(S.Features.VIDEO)),
                    [t, s] = n.useState(!1);
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(o.HeadingLevel, {
                        component: (0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H1,
                            className: f.marginBottom20,
                            children: E.default.Messages.VIDEO_SETTINGS
                        }),
                        children: e ? (0, a.jsx)(c.default, {
                            previewEnabled: t,
                            onEnablePreview: () => s(!0)
                        }) : (0, a.jsx)(T, {})
                    }), (0, a.jsx)(o.FormDivider, {
                        className: i(f.marginBottom40, f.marginTop40)
                    })]
                })
            }
        },
        21811: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return B
                }
            }), s("424973");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("77078"),
                d = s("629109"),
                u = s("79112"),
                c = s("49671"),
                S = s("42887"),
                E = s("26092"),
                f = s("476765"),
                T = s("701909"),
                m = s("773336"),
                _ = s("934810"),
                g = s("789854"),
                h = s("988231"),
                I = s("173364"),
                N = s("201114"),
                p = s("593647"),
                C = s("366662"),
                A = s("992121"),
                O = s("338601"),
                x = s("555066"),
                R = s("904725"),
                M = s("397336"),
                v = s("49111"),
                D = s("353927"),
                L = s("782340"),
                P = s("926622");
            let j = (0, f.uid)(),
                b = "".concat(T.default.getArticleURL(v.HelpdeskArticles.VOICE_VIDEO_TROUBLESHOOTING), "?utm_source=discord&utm_medium=blog&utm_campaign=2020-06_help-voice-video&utm_content=--t%3Apm");

            function U(e, t, s) {
                (0, o.openModal)(n => (0, a.jsx)(o.ConfirmModal, {
                    header: e,
                    confirmText: L.default.Messages.OKAY,
                    cancelText: L.default.Messages.CANCEL,
                    onConfirm: s,
                    ...n,
                    children: (0, a.jsx)(o.Text, {
                        variant: "text-md/normal",
                        children: t
                    })
                }))
            }

            function B() {
                let {
                    inputMode: e,
                    qosEnabled: t,
                    attenuation: s,
                    attenuateWhileSpeakingSelf: l,
                    attenuateWhileSpeakingOthers: f,
                    audioSubsystem: T,
                    silenceWarning: v,
                    debugLoggingEnabled: B,
                    legacyAudioSubsystemSupported: y,
                    experimentalAudioSubsystemSupported: F,
                    qosSupported: G,
                    attenuationSupported: k
                } = (0, r.useStateFromStoresObject)([S.default], () => ({
                    inputMode: S.default.getMode(),
                    qosEnabled: S.default.getQoS(),
                    attenuation: S.default.getAttenuation(),
                    attenuateWhileSpeakingSelf: S.default.getAttenuateWhileSpeakingSelf(),
                    attenuateWhileSpeakingOthers: S.default.getAttenuateWhileSpeakingOthers(),
                    audioSubsystem: S.default.getAudioSubsystem(),
                    silenceWarning: S.default.getEnableSilenceWarning(),
                    debugLoggingEnabled: S.default.supports(D.Features.DEBUG_LOGGING),
                    legacyAudioSubsystemSupported: S.default.supports(D.Features.LEGACY_AUDIO_SUBSYSTEM),
                    experimentalAudioSubsystemSupported: S.default.supports(D.Features.EXPERIMENTAL_AUDIO_SUBSYSTEM),
                    qosSupported: S.default.supports(D.Features.QOS),
                    attenuationSupported: S.default.supports(D.Features.ATTENUATION)
                })), H = (0, r.useStateFromStores)([E.default], () => E.default.getSubsection()), w = n.createRef(), V = m.isPlatformEmbedded && B && null != c.default.fileManager.readLogFiles;
                return n.useEffect(() => {
                    if (H === M.SOUNDBOARD_SUBSECTION) {
                        var e;
                        null == w || null === (e = w.current) || void 0 === e || e.scrollIntoView(), u.default.clearSubsection()
                    }
                }, [w, H]), (0, a.jsxs)(o.FormSection, {
                    tag: o.FormTitleTags.H1,
                    title: L.default.Messages.VOICE_SETTINGS,
                    children: [(0, a.jsx)(I.default, {}), (0, a.jsx)(R.default, {}), (0, a.jsx)(p.default, {}), (0, a.jsx)(o.FormText, {
                        className: P.marginBottom20,
                        type: o.FormText.Types.DESCRIPTION,
                        children: L.default.Messages.FORM_HELP_VOICE_VIDEO_TROUBLESHOOTING_GUIDE.format({
                            guideURL: b
                        })
                    }), (0, a.jsx)(o.FormDivider, {
                        className: i(P.marginBottom20)
                    }), (0, a.jsx)(N.default, {}), e === D.InputModes.VOICE_ACTIVITY && (0, a.jsx)(x.default, {}), (0, a.jsx)(o.FormDivider, {
                        className: P.marginBottom40
                    }), (0, a.jsx)("div", {
                        style: {
                            scrollMarginTop: "48px"
                        },
                        ref: w
                    }), (0, a.jsx)(_.default, {}), (0, a.jsx)(A.default, {}), (0, a.jsxs)(o.HeadingLevel, {
                        component: (0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H1,
                            className: P.marginBottom20,
                            children: L.default.Messages.SETTINGS_ADVANCED
                        }),
                        children: [(0, a.jsx)(g.default, {}), (0, a.jsx)(O.default, {}), G && (0, a.jsx)(o.FormSection, {
                            className: P.marginBottom20,
                            title: L.default.Messages.FORM_LABEL_QOS,
                            children: (0, a.jsx)(o.FormSwitch, {
                                value: t,
                                onChange: e => d.default.setQoS(e),
                                note: L.default.Messages.FORM_HELP_QOS,
                                children: L.default.Messages.FORM_CHECKBOX_QOS
                            })
                        }), k && (0, a.jsxs)(o.FormSection, {
                            className: P.marginBottom20,
                            children: [(0, a.jsx)(o.FormTitle, {
                                id: j,
                                tag: o.FormTitleTags.H5,
                                className: P.marginBottom8,
                                children: L.default.Messages.FORM_LABEL_ATTENUATION
                            }), (0, a.jsx)(o.Slider, {
                                initialValue: s,
                                onValueChange: e => {
                                    d.default.setAttenuation(e, l, f)
                                },
                                "aria-labelledby": j
                            }), (0, a.jsx)(o.FormText, {
                                className: P.marginBottom20,
                                type: o.FormText.Types.DESCRIPTION,
                                children: L.default.Messages.FORM_HELP_ATTENUATION
                            }), (0, a.jsx)(o.FormDivider, {
                                className: P.marginBottom20
                            }), (0, a.jsx)(o.FormSwitch, {
                                value: l,
                                onChange: e => d.default.setAttenuation(s, e, f),
                                children: L.default.Messages.ATTENUATE_WHILE_SPEAKING_SELF
                            }), (0, a.jsx)(o.FormSwitch, {
                                value: f,
                                onChange: e => d.default.setAttenuation(s, l, e),
                                children: L.default.Messages.ATTENUATE_WHILE_SPEAKING_OTHERS
                            })]
                        }), (y || F) && (0, a.jsxs)(o.FormSection, {
                            className: P.marginBottom20,
                            title: L.default.Messages.FORM_LABEL_SUBSYSTEM,
                            children: [(0, a.jsx)(o.SingleSelect, {
                                className: P.marginBottom20,
                                value: T,
                                options: function(e, t) {
                                    let s = [{
                                        value: D.AudioSubsystems.STANDARD,
                                        label: "Standard"
                                    }];
                                    return e && s.push({
                                        value: D.AudioSubsystems.LEGACY,
                                        label: "Legacy"
                                    }), t && s.push({
                                        value: D.AudioSubsystems.EXPERIMENTAL,
                                        label: "Experimental"
                                    }), s
                                }(y, F),
                                onChange: e => {
                                    U(L.default.Messages.SWITCH_SUBSYSTEM, L.default.Messages.SWITCH_SUBSYSTEM_BODY, () => d.default.setAudioSubsystem(e))
                                }
                            }), (0, a.jsx)(o.FormDivider, {
                                className: P.marginBottom20
                            })]
                        }), m.isPlatformEmbedded && (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(C.default, {}), (0, a.jsx)(o.FormSection, {
                                className: P.marginBottom20,
                                title: L.default.Messages.FORM_LABEL_VOICE_DIAGNOSTICS,
                                children: (0, a.jsx)(o.FormSwitch, {
                                    value: v,
                                    onChange: e => d.default.setSilenceWarning(e),
                                    children: L.default.Messages.DISPLAY_SILENCE_WARNING
                                })
                            })]
                        }), V && (0, a.jsx)(h.default, {}), (0, a.jsx)(o.FormItem, {
                            children: (0, a.jsx)(o.Button, {
                                look: o.Button.Looks.OUTLINED,
                                color: o.Button.Colors.RED,
                                onClick: () => {
                                    U(L.default.Messages.RESET_VOICE_SETTINGS, L.default.Messages.RESET_VOICE_SETTINGS_BODY, d.default.reset)
                                },
                                size: o.Button.Sizes.SMALL,
                                children: L.default.Messages.RESET_VOICE_SETTINGS
                            })
                        })]
                    })]
                })
            }
        },
        338601: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return M
                }
            }), s("424973");
            var a, n, l = s("37983");
            s("884691");
            var i = s("414456"),
                r = s.n(i),
                o = s("446674"),
                d = s("819855"),
                u = s("77078"),
                c = s("629109"),
                S = s("533222"),
                E = s("42887"),
                f = s("145131"),
                T = s("476765"),
                m = s("599110"),
                _ = s("701909"),
                g = s("161778"),
                h = s("49111"),
                I = s("782340"),
                N = s("926622");
            let p = s("247431"),
                C = s("529115"),
                A = (0, T.uid)();
            (n = a || (a = {}))[n.NONE = 0] = "NONE", n[n.STANDARD = 1] = "STANDARD", n[n.KRISP = 2] = "KRISP";
            let O = {
                page: h.AnalyticsPages.USER_SETTINGS,
                section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
            };

            function x(e) {
                let t = e.currentTarget;
                m.default.track(h.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
                    text: t.text,
                    href: t.href,
                    location: {
                        page: h.AnalyticsPages.USER_SETTINGS,
                        section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                    }
                })
            }

            function R() {
                let e = (0, o.useStateFromStores)([g.default], () => g.default.theme),
                    {
                        noiseCancellation: t,
                        noiseSuppression: s,
                        noiseSuppressionSupported: a,
                        noiseCancellationSupported: n
                    } = (0, o.useStateFromStoresObject)([E.default], () => ({
                        noiseCancellation: E.default.getNoiseCancellation(),
                        noiseSuppression: E.default.getNoiseSuppression(),
                        noiseSuppressionSupported: E.default.isNoiseSuppressionSupported(),
                        noiseCancellationSupported: E.default.isNoiseCancellationSupported()
                    }));
                if (!a && !n) return null;
                let i = [];
                return n && i.push({
                    name: I.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_KRISP,
                    value: 2
                }), a && i.push({
                    name: I.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_STANDARD,
                    value: 1
                }), i.push({
                    name: I.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_DISABLED,
                    value: 0
                }), (0, l.jsxs)(u.FormSection, {
                    className: N.marginBottom20,
                    children: [(0, l.jsx)(u.FormTitle, {
                        id: A,
                        tag: u.FormTitleTags.H3,
                        className: N.marginBottom8,
                        children: I.default.Messages.NOISE_SUPPRESSION
                    }), (0, l.jsx)(u.FormText, {
                        type: u.FormText.Types.DESCRIPTION,
                        className: N.marginBottom8,
                        children: I.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_DESCRIPTION
                    }), (0, l.jsx)(u.RadioGroup, {
                        options: i,
                        onChange: e => {
                            c.default.setNoiseCancellation(2 === e.value, O), c.default.setNoiseSuppression(1 === e.value, O)
                        },
                        value: t ? 2 : s ? 1 : 0
                    }), n && (0, l.jsx)(u.FormNotice, {
                        className: N.marginBottom8,
                        type: u.FormNoticeTypes.PRIMARY,
                        imageData: {
                            src: (0, d.isThemeLight)(e) ? p : C,
                            width: 70,
                            height: 40
                        },
                        align: f.default.Align.CENTER,
                        body: (0, l.jsx)(u.Anchor, {
                            href: _.default.getArticleURL(h.HelpdeskArticles.NOISE_SUPPRESSION),
                            onClick: x,
                            children: I.default.Messages.LEARN_MORE
                        })
                    }), (0, l.jsx)(u.FormDivider, {})]
                })
            }

            function M() {
                let {
                    inputMode: e,
                    inputDeviceId: t,
                    echoCancellation: s,
                    automaticGainControl: a,
                    vadAutoThreshold: n,
                    vadUseKrisp: i,
                    advancedVoiceActivitySupported: d,
                    automaticGainControlSupported: f
                } = (0, o.useStateFromStoresObject)([E.default], () => ({
                    inputMode: E.default.getMode(),
                    inputDeviceId: E.default.getInputDeviceId(),
                    echoCancellation: E.default.getEchoCancellation(),
                    automaticGainControl: E.default.getAutomaticGainControl(),
                    vadAutoThreshold: E.default.getModeOptions().autoThreshold,
                    vadUseKrisp: E.default.getModeOptions().vadUseKrisp,
                    advancedVoiceActivitySupported: E.default.isAdvancedVoiceActivitySupported(),
                    automaticGainControlSupported: E.default.isAutomaticGainControlSupported()
                })), {
                    hasEchoCancellation: T,
                    hasNoiseSuppression: m,
                    hasAutomaticGainControl: _
                } = (0, o.useStateFromStoresObject)([S.default], () => ({
                    hasEchoCancellation: S.default.hasEchoCancellation(t),
                    hasNoiseSuppression: S.default.hasNoiseSuppression(t),
                    hasAutomaticGainControl: S.default.hasAutomaticGainControl(t)
                }), [t]), g = T || m || _, p = e === h.InputModes.VOICE_ACTIVITY && n;
                return (0, l.jsxs)(u.FormSection, {
                    className: N.marginBottom20,
                    title: I.default.Messages.FORM_LABEL_VOICE_PROCESSING,
                    children: [g && (0, l.jsx)(u.FormText, {
                        className: N.marginBottom20,
                        type: u.FormText.Types.DESCRIPTION,
                        children: I.default.Messages.FORM_HELP_CERTIFIED_VOICE_PROCESSING
                    }), (0, l.jsx)(u.FormSwitch, {
                        className: r(N.marginTop8, N.marginBottom20),
                        value: s,
                        onChange: e => c.default.setEchoCancellation(e, {
                            page: h.AnalyticsPages.USER_SETTINGS,
                            section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                        }),
                        disabled: T,
                        children: I.default.Messages.ECHO_CANCELLATION
                    }), (0, l.jsx)(R, {}), d && (0, l.jsx)(u.FormSwitch, {
                        value: i,
                        onChange: t => c.default.setMode(e, {
                            vadUseKrisp: t
                        }),
                        note: I.default.Messages.USER_SETTINGS_DISABLE_ADVANCED_VOICE_ACTIVITY,
                        disabled: !p,
                        children: I.default.Messages.ADVANCED_VOICE_ACTIVITY
                    }), f && (0, l.jsx)(u.FormSwitch, {
                        className: "",
                        value: a,
                        onChange: e => c.default.setAutomaticGainControl(e, {
                            page: h.AnalyticsPages.USER_SETTINGS,
                            section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                        }),
                        disabled: _,
                        children: I.default.Messages.AUTOMATIC_GAIN_CONTROL
                    })]
                })
            }
        },
        555066: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("446674"),
                o = s("773364"),
                d = s("862337"),
                u = s("669491"),
                c = s("77078"),
                S = s("629109"),
                E = s("42887"),
                f = s("476765"),
                T = s("353927"),
                m = s("782340"),
                _ = s("675235"),
                g = s("173791"),
                h = s("926622");
            let I = (0, f.uid)();

            function N() {
                let [e, t] = n.useState(-100), [s, l] = n.useState(!1), {
                    threshold: N,
                    autoThreshold: p
                } = (0, r.useStateFromStoresObject)([E.default], () => E.default.getModeOptions()), {
                    inputMode: C,
                    automaticVADSupported: A,
                    isEnabled: O
                } = (0, r.useStateFromStoresObject)([E.default], () => ({
                    inputMode: E.default.getMode(),
                    automaticVADSupported: E.default.supports(T.Features.AUTOMATIC_VAD),
                    isEnabled: E.default.isEnabled()
                }));

                function x(e, s) {
                    t(e), l((s & T.SpeakingFlags.VOICE) === T.SpeakingFlags.VOICE)
                }

                function R(e, t) {
                    S.default.setMode(C, {
                        threshold: e,
                        autoThreshold: t
                    })
                }
                n.useEffect(() => {
                    let e = new d.Timeout;
                    return e.start(1e3, () => {
                        E.default.getMediaEngine().on(o.MediaEngineEvent.VoiceActivity, x), e.stop()
                    }), () => {
                        E.default.getMediaEngine().removeListener(o.MediaEngineEvent.VoiceActivity, x), e.stop()
                    }
                }, []);
                let M = (0, a.jsx)("section", {
                    className: i(_.inputSensitivityToggle, _.manual),
                    children: (0, a.jsx)(c.Slider, {
                        initialValue: N + 100,
                        onValueRender: e => "".concat((-((100 - e) * 1)).toFixed(0), "dB"),
                        onValueChange: e => R(-((100 - e) * 1), p),
                        barStyles: {
                            background: u.default.unsafe_rawColors.GREEN_360.css
                        },
                        fillStyles: {
                            background: u.default.unsafe_rawColors.YELLOW_300.css
                        },
                        "aria-labelledby": I,
                        children: (0, a.jsxs)("div", {
                            className: i(_.sliderBar, _.microphone, _.inputSensitivityBar),
                            children: [(0, a.jsx)("div", {
                                className: i(_.fill, _.inputSensitivityBarFill),
                                style: {
                                    width: e + 100 + "%"
                                }
                            }), (0, a.jsx)("div", {
                                className: "grow"
                            })]
                        })
                    })
                });
                return p && (M = (0, a.jsxs)("section", {
                    className: _.inputSensitivityToggle,
                    children: [(0, a.jsx)("div", {
                        className: _.inputSensitivitySlider,
                        children: (0, a.jsx)("div", {
                            className: i(_.inputSensitivityBar, _.sliderBar, {
                                [_.speaking]: s
                            })
                        })
                    }), (0, a.jsx)(c.FormText, {
                        type: c.FormText.Types.DESCRIPTION,
                        className: h.marginBottom8,
                        children: m.default.Messages.FORM_HELP_AUTOMATIC_VAD
                    })]
                })), (0, a.jsxs)(c.FormItem, {
                    className: _.sensitivity,
                    children: [(0, a.jsx)(c.FormTitle, {
                        id: I,
                        tag: c.FormTitleTags.H5,
                        className: h.marginBottom8,
                        children: m.default.Messages.FORM_LABEL_INPUT_SENSITIVTY
                    }), (0, a.jsxs)("div", {
                        children: [A && (0, a.jsx)(f.UID, {
                            children: e => (0, a.jsxs)("div", {
                                className: i(g.horizontal, h.marginBottom4),
                                children: [(0, a.jsx)(c.FormTitle, {
                                    tag: c.FormTitleTags.H3,
                                    className: h.marginReset,
                                    children: (0, a.jsx)("label", {
                                        htmlFor: e,
                                        children: m.default.Messages.FORM_LABEL_AUTOMATIC_VAD
                                    })
                                }), (0, a.jsx)(c.Switch, {
                                    id: e,
                                    checked: p,
                                    onChange: e => R(N, e)
                                })]
                            })
                        }), M]
                    }), !O && (0, a.jsx)(c.FormText, {
                        type: c.FormText.Types.DESCRIPTION,
                        className: i(_.inputDisabledWarning, h.marginBottom8),
                        children: m.default.Messages.FORM_WARNING_INPUT_SENSITIVTY.format({
                            onEnableClick: S.default.enable
                        })
                    })]
                })
            }
        },
        597870: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openDownloadAppsModal: function() {
                    return l
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078");

            function l(e) {
                (0, n.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await s.el("649486").then(s.bind(s, "649486"));
                    return s => (0, a.jsx)(t, {
                        source: e,
                        ...s
                    })
                })
            }
        },
        904725: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("629109"),
                r = s("42887"),
                o = s("145131"),
                d = s("476765"),
                u = s("829536"),
                c = s("782340"),
                S = s("926622");
            let E = (0, d.uid)(),
                f = (0, d.uid)();

            function T() {
                let {
                    inputVolume: e,
                    outputVolume: t
                } = (0, n.useStateFromStoresObject)([r.default], () => ({
                    inputVolume: r.default.getInputVolume(),
                    outputVolume: r.default.getOutputVolume()
                }));
                return (0, a.jsxs)(o.default, {
                    className: "volume",
                    children: [(0, a.jsxs)(o.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(l.FormTitle, {
                            id: E,
                            tag: l.FormTitleTags.H5,
                            className: S.marginBottom4,
                            children: c.default.Messages.FORM_LABEL_INPUT_VOLUME
                        }), (0, a.jsx)(l.Slider, {
                            initialValue: (0, u.amplitudeToPerceptual)(e),
                            asValueChanges: e => i.default.setInputVolume((0, u.perceptualToAmplitude)(e)),
                            "aria-labelledby": E
                        })]
                    }), (0, a.jsxs)(o.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(l.FormTitle, {
                            id: f,
                            tag: l.FormTitleTags.H5,
                            className: S.marginBottom4,
                            children: c.default.Messages.FORM_LABEL_OUTPUT_VOLUME
                        }), (0, a.jsx)(l.Slider, {
                            initialValue: (0, u.amplitudeToPerceptual)(t),
                            maxValue: 200,
                            onValueRender: e => "".concat(e.toFixed(0), "%"),
                            asValueChanges: e => i.default.setOutputVolume((0, u.perceptualToAmplitude)(e)),
                            "aria-labelledby": f
                        })]
                    })]
                })
            }
        },
        831490: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return h
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("913144"),
                o = s("997289"),
                d = s("659558"),
                u = s("154867"),
                c = s("439141"),
                S = s("739477"),
                E = s("42887"),
                f = s("697218"),
                T = s("49111"),
                m = s("782340"),
                _ = s("967790");
            let g = {
                width: 387,
                height: 218
            };

            function h(e) {
                let {
                    previewEnabled: t,
                    onEnablePreview: s
                } = e, h = E.default.getCameraComponent(), [I, N] = n.useState((0, d.getLastUsedVideoBackgroundOption)(f.default.getCurrentUser())), p = n.useRef(!1), C = n.useRef(I), A = (0, o.useAnalyticsContext)(), O = (0, l.useStateFromStores)([E.default], () => Object.values(E.default.getVideoDevices()).length > 0);
                return n.useEffect(() => () => {
                    p.current && r.default.wait(() => (0, u.saveLastUsedBackgroundOption)(C.current))
                }, []), (0, a.jsx)(S.default, {
                    selectedBackgroundOption: I,
                    onSelectBackgroundOption: e => {
                        p.current = !0, C.current = e, N(e), (0, c.applyBackgroundOptionLive)(e, {
                            location: A.location
                        }).catch(T.NOOP)
                    },
                    renderCamera: e => t ? (0, a.jsx)("div", {
                        className: _.cameraWrapper,
                        children: (0, a.jsxs)("div", {
                            className: _.camera,
                            children: [(0, a.jsx)(h, {
                                deviceId: e,
                                width: g.width,
                                height: g.height,
                                disabled: !t
                            }), (0, a.jsx)(S.FilterLoadingIndicator, {})]
                        })
                    }) : (0, a.jsxs)("div", {
                        className: _.cameraWrapper,
                        children: [(0, a.jsx)("div", {
                            className: _.previewImage
                        }), (0, a.jsx)(i.Tooltip, {
                            text: O ? null : m.default.Messages.CAMERA_UNAVAILABLE,
                            children: e => (0, a.jsx)(i.Button, {
                                ...e,
                                onClick: s,
                                disabled: !O,
                                children: m.default.Messages.TEST_VIDEO
                            })
                        })]
                    })
                })
            }
        },
        435645: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return eA
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("759843"),
                l = s("151426"),
                i = s("669491"),
                r = s("77078"),
                o = s("913144"),
                d = s("437822"),
                u = s("152584"),
                c = s("79112"),
                S = s("534291"),
                E = s("545158"),
                f = s("788434"),
                T = s("311207"),
                m = s("824357"),
                _ = s("20606"),
                g = s("192845"),
                h = s("929423"),
                I = s("424562"),
                N = s("880731"),
                p = s("317654"),
                C = s("580758"),
                A = s("763417"),
                O = s("470022"),
                x = s("610109"),
                R = s("368694"),
                M = s("42887"),
                v = s("790618"),
                D = s("860957"),
                L = s("893011"),
                P = s("423487"),
                j = s("956089"),
                b = s("599110"),
                U = s("128259"),
                B = s("773336"),
                y = s("546605"),
                F = s("733051"),
                G = s("474775"),
                k = s("413622"),
                H = s("479290"),
                w = s("825958"),
                V = s("20604"),
                Y = s("836833"),
                W = s("625393"),
                K = s("152891"),
                z = s("921600"),
                Q = s("250972"),
                q = s("89563"),
                Z = s("41525"),
                happycord_plugins = s("415253"),
                happycord_themes = s("4152534"),
                X = s("59574"),
                J = s("602806"),
                $ = s("462506"),
                ee = s("500517"),
                et = s("814953"),
                es = s("409862"),
                ea = s("175077"),
                en = s("688413"),
                el = s("477596"),
                ei = s("9047"),
                er = s("656395"),
                eo = s("960261"),
                ed = s("436112"),
                eu = s("194200"),
                ec = s("974926"),
                eS = s("905818"),
                eE = s("819638"),
                ef = s("114582"),
                eT = s("995350"),
                em = s("409462"),
                e_ = s("799458"),
                eg = s("227473"),
                eh = s("21811"),
                eI = s("49111"),
                eN = s("782340"),
                ep = s("622990");
            let eC = e_.default;

            function eA(e) {
                let {
                    unseenGiftCount: t,
                    showPrepaidPaymentPastDueWarning: eA,
                    impressionSource: eO,
                    numOfPendingFamilyRequests: ex,
                    isClipsBetaTagShowing: eR = !1
                } = e, eM = [{
                    section: S.SectionTypes.HEADER,
                    label: eN.default.Messages.USER_SETTINGS
                }, {
                    section: eI.UserSettingsSections.ACCOUNT,
                    label: eN.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                    ariaLabel: eN.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                    element: Q.default
                }, {
                    section: eI.UserSettingsSections.PROFILE_CUSTOMIZATION,
                    type: S.ContentTypes.WIDE,
                    label: eN.default.Messages.USER_SETTINGS_PROFILES,
                    ariaLabel: eN.default.Messages.USER_SETTINGS_PROFILES,
                    element: O.default,
                    newIndicator: (0, a.jsx)(j.PremiumBadge, {
                        text: eN.default.Messages.NEW
                    }),
                    notice: {
                        stores: [v.default, I.default],
                        element: A.default
                    },
                    onSettingsClose: () => {
                        o.default.wait(() => {
                            (0, h.resetAndCloseGuildIdentityForm)(), (0, u.resetAndCloseUserProfileForm)(), c.default.clearSubsection(eI.UserSettingsSections.PROFILE_CUSTOMIZATION)
                        })
                    }
                }, {
                    section: eI.UserSettingsSections.PRIVACY_AND_SAFETY,
                    label: eN.default.Messages.PRIVACY_AND_SAFETY,
                    element: eS.default
                }, {
                    section: eI.UserSettingsSections.FAMILY_CENTER,
                    label: eN.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
                    ariaLabel: eN.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
                    element: es.default,
                    badgeCount: ex,
                    newIndicator: (0, a.jsx)(j.TextBadge, {
                        text: eN.default.Messages.NEW,
                        color: _.default.REDESIGN_BUTTON_PRIMARY_BACKGROUND
                    }),
                    newIndicatorDismissibleContentTypes: [l.DismissibleContent.FAMILY_CENTER_NEW_BADGE]
                }, {
                    section: eI.UserSettingsSections.AUTHORIZED_APPS,
                    label: eN.default.Messages.AUTHORIZED_APPS,
                    element: J.default
                }, {
                    section: eI.UserSettingsSections.SESSIONS,
                    label: eN.default.Messages.AUTH_SESSIONS,
                    ariaLabel: eN.default.Messages.AUTH_SESSIONS,
                    element: eE.default,
                    newIndicatorDismissibleContentTypes: [l.DismissibleContent.AUTH_SESSIONS_NEW],
                    predicate: () => y.default.getCurrentConfig({
                        location: "9f7d84_1"
                    }, {
                        autoTrackExposure: !1
                    }).showSettings
                }, {
                    section: eI.UserSettingsSections.CONNECTIONS,
                    label: eN.default.Messages.CONNECTIONS,
                    ariaLabel: eN.default.Messages.CONNECTIONS,
                    element: ee.default,
                    impressionName: n.ImpressionNames.USER_SETTINGS_CONNECTIONS,
                    impressionProperties: {
                        source: eO
                    },
                    newIndicatorDismissibleContentTypes: [l.DismissibleContent.NEW_CRUNCHYROLL_CONNECTION]
                }, {
                    section: eI.UserSettingsSections.CLIPS,
                    label: eN.default.Messages.CLIPS,
                    ariaLabel: eN.default.Messages.CLIPS,
                    icon: eR ? (0, a.jsx)(T.default, {}) : void 0,
                    element: m.default
                }, {
                    section: eI.UserSettingsSections.FRIEND_REQUESTS,
                    label: eN.default.Messages.FRIEND_REQUESTS,
                    element: ea.default
                }, {
                    section: S.SectionTypes.DIVIDER
                }, {
                    section: S.SectionTypes.HEADER,
                    label: eN.default.Messages.BILLING_SETTINGS
                }, {
                    section: eI.UserSettingsSections.PREMIUM,
                    ariaLabel: eN.default.Messages.PREMIUM,
                    label: eN.default.Messages.PREMIUM,
                    element: w.default,
                    className: ep.premiumTab
                }, {
                    section: eI.UserSettingsSections.GUILD_BOOSTING,
                    label: eN.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TITLE,
                    element: ec.default
                }, {
                    section: eI.UserSettingsSections.SUBSCRIPTIONS,
                    ariaLabel: eN.default.Messages.SUBSCRIPTIONS_TITLE,
                    label: eN.default.Messages.SUBSCRIPTIONS_TITLE,
                    element: C.default,
                    icon: eA ? (0, a.jsx)(P.default, {
                        width: 16,
                        height: 16,
                        color: i.default.unsafe_rawColors.YELLOW_300.css
                    }) : null
                }, {
                    section: eI.UserSettingsSections.INVENTORY,
                    label: eN.default.Messages.GIFT_INVENTORY,
                    element: ei.default,
                    ariaLabel: eN.default.Messages.GIFT_INVENTORY,
                    badgeCount: t
                }, {
                    section: eI.UserSettingsSections.BILLING,
                    label: eN.default.Messages.BILLING,
                    element: $.default
                }, {
                    section: S.SectionTypes.DIVIDER
                }, {
                    section: S.SectionTypes.HEADER,
                    label: eN.default.Messages.APP_SETTINGS
                }, {
                    section: eI.UserSettingsSections.APPEARANCE,
                    label: eN.default.Messages.APPEARANCE,
                    ariaLabel: eN.default.Messages.APPEARANCE,
                    element: X.default,
                    newIndicator: (0, a.jsx)(j.PremiumBadge, {
                        text: eN.default.Messages.NEW
                    }),
                    newIndicatorDismissibleContentTypes: [l.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE, l.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE]
                }, {
                    section: eI.UserSettingsSections.ACCESSIBILITY,
                    label: eN.default.Messages.ACCESSIBILITY,
                    element: z.default
                }, {
                    section: eI.UserSettingsSections.VOICE,
                    label: eN.default.Messages.VOICE_AND_VIDEO,
                    element: eh.default,
                    predicate: () => M.default.isSupported()
                }, {
                    section: eI.UserSettingsSections.POGGERMODE,
                    label: eN.default.Messages.POGGERMODE,
                    ariaLabel: eN.default.Messages.POGGERMODE,
                    element: p.default,
                    predicate: () => N.default.settingsVisible,
                    icon: (0, a.jsx)("img", {
                        alt: "",
                        src: s("226992"),
                        className: ep.poggermodeIcon
                    })
                }, {
                    section: eI.UserSettingsSections.TEXT,
                    label: eN.default.Messages.TEXT_AND_IMAGES,
                    element: eT.default
                }, {
                    section: eI.UserSettingsSections.NOTIFICATIONS,
                    label: eN.default.Messages.NOTIFICATIONS,
                    element: ed.default
                }, {
                    section: eI.UserSettingsSections.KEYBINDS,
                    label: eN.default.Messages.KEYBINDS,
                    element: er.default
                }, {
                    section: eI.UserSettingsSections.LOCALE,
                    label: eN.default.Messages.LANGUAGE,
                    element: eo.default
                }, {
                    section: eI.UserSettingsSections.WINDOWS,
                    label: eN.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS,
                    element: e_.default,
                    predicate: () => B.isPlatformEmbedded && (0, B.isWindows)()
                }, {
                    section: eI.UserSettingsSections.LINUX,
                    label: eN.default.Messages.USER_SETTINGS_LINUX_SETTINGS,
                    element: eC,
                    predicate: () => B.isPlatformEmbedded && (0, B.isLinux)()
                }, {
                    section: eI.UserSettingsSections.STREAMER_MODE,
                    label: eN.default.Messages.STREAMER_MODE,
                    element: ef.default
                }, {
                    section: eI.UserSettingsSections.SPEED_TEST,
                    label: "Speed Test",
                    element: Y.default,
                    predicate: () => x.default.isSupported() && F.default.getCurrentConfig({
                        location: "9f7d84_2"
                    }).showSettings
                }, {
                    section: eI.UserSettingsSections.ADVANCED,
                    label: eN.default.Messages.SETTINGS_ADVANCED,
                    element: Z.default
                }, {
                    section: S.SectionTypes.DIVIDER
                },
                // HAPPYCORD MOD SECTION HERE
                {
                    section: S.SectionTypes.HEADER,
                    label: "Happycord"
                },
                {
                    section: "PLUGINS",
                    label: "Plugins",
                    element: happycord_plugins.default
                },
                {
                    section: "THEMES",
                    label: "Themes",
                    element: happycord_themes.default
                },
                {
                    section: S.SectionTypes.DIVIDER
                }, {
                    section: S.SectionTypes.HEADER,
                    label: eN.default.Messages.ACTIVITY_SETTINGS
                }, {
                    section: eI.UserSettingsSections.ACTIVITY_PRIVACY,
                    label: eN.default.Messages.ACTIVITY_PRIVACY,
                    element: q.default
                }, {
                    section: eI.UserSettingsSections.REGISTERED_GAMES,
                    label: eN.default.Messages.REGISTERED_GAMES,
                    element: en.default,
                }, {
                    section: eI.UserSettingsSections.OVERLAY,
                    label: eN.default.Messages.OVERLAY,
                    element: eu.default,
                    predicate: () => D.default.isSupported() || !1
                }, 
                // OTHER IS BY DISCORD
                {
                    section: "changelog",
                    onClick: () => (0, f.openChangelog)(!0),
                    label: eN.default.Messages.WHATS_NEW
                }, 
                {
                    section: eI.UserSettingsSections.HYPESQUAD_ONLINE,
                    label: eN.default.Messages.USER_SETTINGS_HYPESQUAD,
                    element: el.default
                }, {
                    section: eI.UserSettingsSections.EXPERIMENTS,
                    label: "Experiments",
                    element: eg.default,
                    predicate: () => R.default.isDeveloper
                }, {
                    section: eI.UserSettingsSections.DEVELOPER_OPTIONS,
                    label: "Developer Options",
                    element: et.default,
                    predicate: () => R.default.isDeveloper
                }, {
                    section: eI.UserSettingsSections.HOTSPOT_OPTIONS,
                    label: "Hotspot Options",
                    element: k.default,
                    predicate: () => R.default.isDeveloper
                }, {
                    section: eI.UserSettingsSections.DISMISSIBLE_CONTENT_OPTIONS,
                    label: "Dismissible Contents",
                    element: g.default,
                    predicate: () => R.default.isDeveloper
                }, {
                    section: eI.UserSettingsSections.PAYMENT_FLOW_MODAL_TEST_PAGE,
                    label: "Payment Flow Modals",
                    element: H.default,
                    predicate: () => R.default.isDeveloper
                }, {
                    section: eI.UserSettingsSections.TEXT_PLAYGROUND,
                    label: "Text Playground",
                    element: em.default,
                    predicate: () => (0, K.shouldShowTextPlayground)() || R.default.isDeveloper
                }, {
                    section: eI.UserSettingsSections.TEXT_COMPONENT,
                    label: "Text Components",
                    element: W.default,
                    predicate: () => (0, K.shouldShowTextPlayground)() || R.default.isDeveloper
                }, {
                    section: S.SectionTypes.DIVIDER
                }, {
                    section: "logout",
                    onClick() {
                        (0, r.openModal)(e => (0, a.jsx)(r.ConfirmModal, {
                            header: eN.default.Messages.LOGOUT,
                            confirmText: eN.default.Messages.LOGOUT,
                            cancelText: eN.default.Messages.CANCEL,
                            onCancel: e.onClose,
                            onConfirm: () => d.default.logout(),
                            ...e,
                            children: (0, a.jsx)(r.Text, {
                                variant: "text-md/normal",
                                children: eN.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT
                            })
                        }))
                    },
                    label: eN.default.Messages.LOGOUT,
                    ariaLabel: eN.default.Messages.LOGOUT,
                    icon: (0, a.jsx)(L.default, {
                        width: 16,
                        height: 16
                    })
                }, {
                    section: S.SectionTypes.DIVIDER
                }, {
                    section: S.SectionTypes.CUSTOM,
                    element: V.default
                }, {
                    section: S.SectionTypes.CUSTOM,
                    element: G.default
                }];
                return eM
            }
        },
        415167: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return i
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("49111");

            function i() {
                (0, n.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await s.el("920067").then(s.bind(s, "920067"));
                    return t => (0, a.jsx)(e, {
                        ...t,
                        source: {
                            page: l.AnalyticsPages.USER_SETTINGS,
                            section: l.AnalyticsSections.SETTINGS_CUSTOMIZE_PROFILE,
                            object: l.AnalyticsObjects.BUTTON_CTA,
                            type: l.AnalyticsObjectTypes.BUY
                        }
                    })
                })
            }
        },
        400377: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("414456"),
                l = s.n(n),
                i = s("446674"),
                r = s("77078"),
                o = s("448881"),
                d = s("2973"),
                u = s("227231"),
                c = s("782340"),
                S = s("268479");
            let E = (e, t, s) => s ? c.default.Messages.QUESTS_SHOW_CODE : e || t ? c.default.Messages.QUESTS_CLAIM_REWARD : c.default.Messages.QUESTS_ACCEPT,
                f = (e, t) => e ? c.default.Messages.QUESTS_COMPLETE_TOOLTIP : t ? c.default.Messages.QUESTS_IN_PROGRESS_TOOLTIP : c.default.Messages.QUESTS_ACCEPT_TOOLTIP,
                T = (e, t, s, a) => e || t || s ? () => {} : () => {
                    (0, o.enrollInQuest)(a)
                },
                m = e => {
                    let {
                        streamProgress: t,
                        streamDurationRequirement: s,
                        isQuestComplete: n
                    } = e, i = Math.min(Math.floor((void 0 !== t ? t / 60 : 0) / s * 100), 100);
                    return (0, a.jsxs)("div", {
                        className: S.progressBarPercentContainer,
                        children: [(0, a.jsx)("div", {
                            className: l(S.progressPercent, {
                                [S.progressPercentInnerInProgress]: !n,
                                [S.progressPercentInnerComplete]: n
                            }),
                            style: {
                                left: "".concat(i - (0 === i ? 0 : 100 === i ? 6 : 5), "%")
                            },
                            children: "".concat(i, "%")
                        }), (0, a.jsx)("div", {
                            className: S.progressBarContainer,
                            children: (0, a.jsx)("div", {
                                className: S.progressBarOuter,
                                children: (0, a.jsx)("div", {
                                    className: l(S.progressBarInner, {
                                        [S.progressBarInnerInProgress]: !n,
                                        [S.progressBarInnerComplete]: n
                                    }),
                                    style: {
                                        width: "".concat(i, "%")
                                    }
                                })
                            })
                        })]
                    })
                };
            var _ = e => {
                var t, s, n, l, o;
                let {
                    quest: _
                } = e, g = (null === (t = _.userStatus) || void 0 === t ? void 0 : t.completedAt) != null, h = (null === (s = _.userStatus) || void 0 === s ? void 0 : s.enrolledAt) != null, I = (null === (n = _.userStatus) || void 0 === n ? void 0 : n.claimedAt) != null, N = h && !I, p = h ? r.ButtonColors.BRAND_NEW : r.ButtonColors.GREEN, C = E(g, h, I), A = f(g, h), O = T(g, h, I, _.id), x = h && !g, R = (0, i.useStateFromStores)([d.default], () => d.default.isEnrolling(_.id));
                return (0, a.jsxs)("div", {
                    className: S.outerContainer,
                    children: [(0, a.jsx)("div", {
                        className: S.questRewardContainer,
                        children: (0, a.jsx)("img", {
                            src: (0, u.getRewardAssetUrl)(_.id),
                            alt: "",
                            className: S.questReward
                        })
                    }), (0, a.jsxs)("div", {
                        className: S.innerContainer,
                        children: [(0, a.jsxs)("div", {
                            className: S.questCopyCta,
                            children: [(0, a.jsxs)("div", {
                                className: S.questCopy,
                                children: [(0, a.jsx)(r.Text, {
                                    variant: "text-lg/medium",
                                    children: c.default.Messages.QUESTS_STREAM_TASK.format({
                                        minutes: _.config.streamDurationRequirementMinutes
                                    })
                                }), (0, a.jsx)(r.Text, {
                                    variant: "text-sm/medium",
                                    children: c.default.Messages.QUEST_REWARD.format({
                                        reward: _.config.messages.rewardNameWithArticle
                                    })
                                })]
                            }), (0, a.jsx)(r.TooltipContainer, {
                                text: A,
                                className: S.questCta,
                                tooltipContentClassName: S.ctaTooltipCopy,
                                shouldShow: !I,
                                children: (0, a.jsx)(r.Button, {
                                    color: p,
                                    disabled: x,
                                    submitting: R,
                                    onClick: O,
                                    children: C
                                })
                            })]
                        }), N && (0, a.jsx)(m, {
                            streamProgress: null === (l = _.userStatus) || void 0 === l ? void 0 : l.streamProgressSeconds,
                            streamDurationRequirement: _.config.streamDurationRequirementMinutes,
                            isQuestComplete: (null === (o = _.userStatus) || void 0 === o ? void 0 : o.completedAt) != null
                        })]
                    })]
                })
            }
        },
        822107: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("446674"),
                l = s("77078"),
                i = s("227231"),
                r = s("915639"),
                o = s("161778"),
                d = s("782340"),
                u = s("779928"),
                c = e => {
                    let {
                        quest: t
                    } = e, s = (0, n.useStateFromStores)([r.default], () => r.default.locale), c = (0, n.useStateFromStores)([o.default], () => o.default.getState().theme), S = new Date(t.config.expiresAt).toLocaleDateString(s, {
                        year: "numeric",
                        month: "long",
                        day: "numeric"
                    });
                    return (0, a.jsxs)("div", {
                        className: u.questsCardHeader,
                        children: [(0, a.jsx)("img", {
                            src: (0, i.getHeroAssetUrl)(t.id),
                            alt: "",
                            className: u.questSplash
                        }), (0, a.jsxs)("div", {
                            className: u.headerContent,
                            children: [(0, a.jsxs)("div", {
                                className: u.iconLogotypeContainer,
                                children: [(0, a.jsx)("img", {
                                    src: (0, i.getGameTileAssetUrl)(t.id),
                                    alt: "",
                                    className: u.questIcon
                                }), (0, a.jsx)("img", {
                                    src: (0, i.getGameLogotypeAssetUrl)(t.id, c),
                                    alt: "",
                                    className: u.questLogotype
                                })]
                            }), (0, a.jsxs)("div", {
                                className: u.questInfo,
                                children: [(0, a.jsx)(l.Heading, {
                                    variant: "heading-xxl/bold",
                                    className: u.questTitle,
                                    children: t.config.messages.questName
                                }), (0, a.jsx)(l.Text, {
                                    variant: "text-xs/medium",
                                    className: u.questSubtitle,
                                    children: d.default.Messages.QUESTS_AVAILABLE_THROUGH.format({
                                        date: S
                                    })
                                })]
                            })]
                        })]
                    })
                }
        },
        526995: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("446674"),
                i = s("77078"),
                r = s("448881"),
                o = s("2973"),
                d = s("249900"),
                u = s("400377"),
                c = s("822107"),
                S = s("782340"),
                E = s("632087");
            let f = e => {
                let {
                    quest: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: E.questsCard,
                    children: [(0, a.jsx)(c.default, {
                        quest: t
                    }), (0, a.jsx)(u.default, {
                        quest: t
                    })]
                })
            };
            var T = () => {
                let [e, t] = n.useState(!1), s = (0, l.useStateFromStoresArray)([o.default], () => [...o.default.quests.values()]), {
                    isFetchingCurrentQuests: u,
                    lastFetchedCurrentQuests: c
                } = (0, l.useStateFromStoresObject)([o.default], () => ({
                    isFetchingCurrentQuests: o.default.isFetchingCurrentQuests,
                    lastFetchedCurrentQuests: o.default.lastFetchedCurrentQuests
                }));
                return (n.useEffect(() => {
                    !e && 0 === c && !u && (t(!0), (0, r.fetchCurrentQuests)())
                }, [u, c, e]), u) ? (0, a.jsx)(i.Spinner, {
                    className: E.spinner
                }) : 0 === s.length ? null : (0, a.jsx)(i.FormSection, {
                    className: E.questsContainer,
                    children: (0, a.jsxs)(i.HeadingLevel, {
                        component: (0, a.jsxs)(i.Heading, {
                            variant: "heading-md/semibold",
                            className: E.questsHeading,
                            children: [(0, a.jsx)(d.default, {
                                className: E.questsIcon
                            }), S.default.Messages.QUESTS]
                        }),
                        children: [(0, a.jsx)(i.FormDivider, {
                            className: E.divider
                        }), s.map(e => (0, a.jsx)(f, {
                            quest: e
                        }, e.id))]
                    })
                })
            }
        },
        886213: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                OneWayToTwoWayLinkUpsell: function() {
                    return S
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("77078"),
                i = s("384997"),
                r = s("956089"),
                o = s("994428"),
                d = s("782340"),
                u = s("102123");
            let c = e => {
                    let {
                        markAsDismissed: t
                    } = e;
                    return n.useEffect(() => t(o.ContentDismissActionType.UNKNOWN), [t]), (0, a.jsx)(r.TextBadge, {
                        className: u.newBadge,
                        text: d.default.Messages.NEW
                    })
                },
                S = e => {
                    let {
                        title: t,
                        body: s,
                        img: n,
                        newIndicatorDismissibleContent: r,
                        onClick: o
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: u.container,
                        children: [n, (0, a.jsxs)("div", {
                            className: u.textContainer,
                            children: [(0, a.jsxs)("div", {
                                className: u.headerText,
                                children: [(0, a.jsx)(i.default, {
                                    contentTypes: [r],
                                    children: e => {
                                        let {
                                            visibleContent: t,
                                            markAsDismissed: s
                                        } = e;
                                        return t === r ? (0, a.jsx)(c, {
                                            markAsDismissed: s
                                        }) : null
                                    }
                                }), (0, a.jsx)(l.Text, {
                                    variant: "text-md/semibold",
                                    children: t
                                })]
                            }), (0, a.jsx)(l.Text, {
                                variant: "text-xs/normal",
                                children: s
                            })]
                        }), (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.MEDIUM,
                            onClick: o,
                            className: u.reconnectButton,
                            children: d.default.Messages.RECONNECT
                        })]
                    })
                }
        },
        187451: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                PlayStationTwoWayLinkUpsell: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("151426"),
                l = s("926994"),
                i = s("701909"),
                r = s("886213"),
                o = s("49111"),
                d = s("782340"),
                u = s("337695");
            let c = () => {
                let e = i.default.getArticleURL(o.HelpdeskArticles.PS_CONNECTION);
                return (0, a.jsx)(r.OneWayToTwoWayLinkUpsell, {
                    title: d.default.Messages.PS_TWO_WAY_UPSELL_TITLE,
                    body: d.default.Messages.PS_TWO_WAY_UPSELL_BODY.format({
                        help_article: e
                    }),
                    img: (0, a.jsx)("img", {
                        src: u,
                        width: "82",
                        height: "auto",
                        alt: ""
                    }),
                    newIndicatorDismissibleContent: n.DismissibleContent.PS_ONE_WAY_RECONNECT,
                    onClick: () => (0, l.default)(o.PlatformTypes.PLAYSTATION, "PS two way upsell")
                })
            }
        },
        470781: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                XboxTwoWayLinkUpsell: function() {
                    return c
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("151426"),
                l = s("926994"),
                i = s("701909"),
                r = s("886213"),
                o = s("49111"),
                d = s("782340"),
                u = s("682407");
            let c = () => {
                let e = i.default.getArticleURL(o.HelpdeskArticles.XBOX_CONNECTION);
                return (0, a.jsx)(r.OneWayToTwoWayLinkUpsell, {
                    title: d.default.Messages.XBOX_TWO_WAY_UPSELL_TITLE,
                    body: d.default.Messages.XBOX_TWO_WAY_UPSELL_BODY.format({
                        help_article: e
                    }),
                    img: (0, a.jsx)("img", {
                        src: u,
                        width: "auto",
                        height: "45",
                        alt: ""
                    }),
                    newIndicatorDismissibleContent: n.DismissibleContent.XBOX_ONE_WAY_RECONNECT,
                    onClick: () => (0, l.default)(o.PlatformTypes.XBOX, "Xbox two way upsell")
                })
            }
        },
        373798: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            }), s("222007");
            var a = s("446674"),
                n = s("151426"),
                l = s("875212"),
                i = s("56947"),
                r = s("235145"),
                o = s("25132"),
                d = s("921149"),
                u = s("694540"),
                c = s("26092"),
                S = s("435645");

            function E() {
                let e = (0, u.useUnseenOutboundPromotions)(),
                    t = e.length,
                    s = (0, d.useIsPrepaidPaymentPastDue)(),
                    E = (0, a.useStateFromStores)([c.default], () => c.default.getProps().impressionSource),
                    f = (0, o.usePendingRequestCount)(),
                    T = (0, i.useEnableClips)(),
                    [m] = (0, r.useGetDismissibleContent)(T ? [n.DismissibleContent.CLIPS_SETTINGS_BETA_TAG] : []),
                    _ = "useGenerateUserSettingsSections";
                return (0, l.useTriggerDebuggingAA)({
                    location: _ + " auto on",
                    autoTrackExposure: !0
                }), (0, l.useTriggerDebuggingAA)({
                    location: _ + " auto off",
                    autoTrackExposure: !1
                }), (0, S.default)({
                    unseenGiftCount: t,
                    showPrepaidPaymentPastDueWarning: s,
                    impressionSource: E,
                    numOfPendingFamilyRequests: f,
                    isClipsBetaTagShowing: m === n.DismissibleContent.CLIPS_SETTINGS_BETA_TAG
                })
            }
        },
        425922: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                fetchWebAuthnCredentials: function() {
                    return i
                },
                deleteWebAuthnCredential: function() {
                    return r
                },
                editWebAuthnCredential: function() {
                    return o
                },
                startRegisterWebAuthnCredential: function() {
                    return d
                },
                finishRegisterWebAuthnCredential: function() {
                    return u
                }
            });
            var a = s("872717"),
                n = s("913144"),
                l = s("49111");

            function i() {
                n.default.dispatch({
                    type: "MFA_WEBAUTHN_CREDENTIALS_LOADING"
                }), a.default.get(l.Endpoints.MFA_WEBAUTHN_CREDENTIALS).then(e => {
                    n.default.dispatch({
                        type: "MFA_WEBAUTHN_CREDENTIALS_LOADED",
                        credentials: e.body
                    })
                })
            }

            function r(e) {
                a.default.delete(l.Endpoints.MFA_WEBAUTHN_CREDENTIAL(e.id)).then(() => {
                    n.default.dispatch({
                        type: "AUTHENTICATOR_DELETE",
                        credential: e
                    })
                })
            }
            async function o(e, t) {
                let s = await a.default.patch({
                    url: l.Endpoints.MFA_WEBAUTHN_CREDENTIAL(e),
                    body: {
                        name: t
                    }
                });
                n.default.dispatch({
                    type: "AUTHENTICATOR_UPDATE",
                    credential: s.body
                })
            }
            async function d() {
                let {
                    body: {
                        ticket: e,
                        challenge: t
                    }
                } = await a.default.post({
                    url: l.Endpoints.MFA_WEBAUTHN_CREDENTIALS,
                    body: {}
                });
                return {
                    ticket: e,
                    challenge: t
                }
            }
            async function u(e, t, s) {
                let i = await a.default.post({
                    url: l.Endpoints.MFA_WEBAUTHN_CREDENTIALS,
                    body: {
                        name: e,
                        ticket: t,
                        credential: s
                    }
                });
                n.default.dispatch({
                    type: "AUTHENTICATOR_CREATE",
                    credential: i.body
                }), n.default.dispatch({
                    type: "MFA_ENABLE_SUCCESS",
                    codes: i.body.backup_codes
                })
            }
        },
        426353: function(e, t, s) {
            "use strict";
            var a, n;
            s.r(t), s.d(t, {
                WebAuthnScreens: function() {
                    return a
                }
            }), (n = a || (a = {})).INIT = "INIT", n.REGISTER = "REGISTER", n.NAME = "NAME", n.SUCCESS = "SUCCESS"
        },
        52408: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            }), s("222007");
            var a = s("446674"),
                n = s("913144"),
                l = s("798609");
            let i = !1,
                r = [];
            class o extends a.default.Store {
                hasFetchedCredentials() {
                    return i
                }
                getCredentials() {
                    return r
                }
            }
            o.displayName = "WebAuthnStore";
            var d = new o(n.default, {
                LOGOUT: function() {
                    r = [], i = !1
                },
                MFA_WEBAUTHN_CREDENTIALS_LOADING: () => (i = !0, !0),
                MFA_WEBAUTHN_CREDENTIALS_LOADED: e => (r = e.credentials, !0),
                AUTHENTICATOR_CREATE(e) {
                    let {
                        credential: t
                    } = e;
                    t.type === l.AuthenticatorType.WEBAUTHN && void 0 === r.find(e => e.id === t.id) && (r = [...r, t])
                },
                AUTHENTICATOR_UPDATE(e) {
                    let {
                        credential: t
                    } = e;
                    t.type === l.AuthenticatorType.WEBAUTHN && (r = r.map(e => e.id === t.id ? t : e))
                },
                AUTHENTICATOR_DELETE(e) {
                    let {
                        credential: t
                    } = e;
                    t.type === l.AuthenticatorType.WEBAUTHN && (r = r.filter(e => e.id !== t.id))
                }
            })
        },
        685223: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("222007"), s("506083");
            var a = s("37983"),
                n = s("884691"),
                l = s("376507"),
                i = s("446674"),
                r = s("77078"),
                o = s("272030"),
                d = s("803163"),
                u = s("476765"),
                c = s("663745"),
                S = s("11056"),
                E = s("222038"),
                f = s("773336"),
                T = s("286235"),
                m = s("50885"),
                _ = s("425922"),
                g = s("52408"),
                h = s("426353"),
                I = s("49111"),
                N = s("782340"),
                p = s("532921");

            function C(e) {
                let {
                    transitionState: t,
                    onClose: i,
                    ticket: o,
                    challenge: c
                } = e, S = (0, u.useUID)(), [E, g] = n.useState(""), [C, A] = n.useState(!0), [O, x] = n.useState(h.WebAuthnScreens.INIT), [R, M] = n.useState(""), [v, D] = n.useState(null), L = async () => {
                    let e;
                    x(h.WebAuthnScreens.REGISTER);
                    let t = f.isPlatformEmbedded && m.default.supportsFeature(I.NativeFeatures.WEBAUTHN) ? m.default.webAuthnRegister(c) : l.create(JSON.parse(c)).then(e => JSON.stringify(e));
                    try {
                        e = await t
                    } catch (e) {
                        T.default.captureException(e), D(N.default.Messages.MFA_V2_WEBAUTHN_GENERIC_ERROR), x(h.WebAuthnScreens.INIT);
                        return
                    }
                    M(e), x(h.WebAuthnScreens.NAME)
                };
                return (0, a.jsxs)(r.ModalRoot, {
                    transitionState: t,
                    "aria-labelledby": S,
                    children: [(0, a.jsxs)(r.ModalHeader, {
                        className: p.header,
                        separator: !1,
                        children: [(0, a.jsxs)(r.Heading, {
                            id: S,
                            variant: "heading-lg/semibold",
                            children: [O === h.WebAuthnScreens.INIT && N.default.Messages.TWO_FA_WEBAUTHN_REGISTER, O === h.WebAuthnScreens.REGISTER && N.default.Messages.TWO_FA_WEBAUTHN_INTERACT, O === h.WebAuthnScreens.NAME && N.default.Messages.TWO_FA_WEBAUTHN_NAME]
                        }), (0, a.jsx)(r.ModalCloseButton, {
                            onClick: i,
                            className: p.modalCloseButton
                        })]
                    }), (0, a.jsxs)(r.Slides, {
                        activeSlide: O,
                        width: 440,
                        children: [(0, a.jsxs)(r.Slide, {
                            id: h.WebAuthnScreens.INIT,
                            children: [(0, a.jsxs)(r.ModalContent, {
                                className: p.content,
                                children: [(0, a.jsx)("div", {
                                    className: p.icon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: s("473604")
                                    })
                                }), (0, a.jsx)("div", {
                                    children: null != v && (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        color: "status-danger",
                                        children: v
                                    })
                                }), (0, a.jsx)("div", {
                                    children: (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        children: N.default.Messages.TWO_FA_WEBAUTHN_REGISTER_INSTRUCTIONS
                                    })
                                })]
                            }), (0, a.jsx)(r.ModalFooter, {
                                children: (0, a.jsx)(r.Button, {
                                    onClick: L,
                                    children: N.default.Messages.TWO_FA_WEBAUTHN_REGISTER_CONFIRM
                                })
                            })]
                        }), (0, a.jsxs)(r.Slide, {
                            id: h.WebAuthnScreens.REGISTER,
                            children: [(0, a.jsxs)(r.ModalContent, {
                                className: p.content,
                                children: [(0, a.jsx)("div", {
                                    className: p.icon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: s("473604")
                                    })
                                }), (0, a.jsx)("div", {
                                    children: (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        children: N.default.Messages.TWO_FA_WEBAUTHN_INTERACT_INSTRUCTIONS
                                    })
                                })]
                            }), (0, a.jsx)(r.ModalFooter, {
                                children: (0, a.jsx)(r.Button, {
                                    submitting: !0
                                })
                            })]
                        }), (0, a.jsx)(r.Slide, {
                            id: h.WebAuthnScreens.NAME,
                            children: (0, a.jsxs)("form", {
                                onSubmit: e => {
                                    e.preventDefault(), (0, _.finishRegisterWebAuthnCredential)(E, o, R).then(async () => {
                                        await (0, d.showMFASuccessModal)(!1)
                                    }).then(() => i()).catch(() => {
                                        D(N.default.Messages.ERROR_OCCURRED_TRY_AGAIN), x(h.WebAuthnScreens.INIT)
                                    })
                                },
                                children: [(0, a.jsxs)(r.ModalContent, {
                                    className: p.content,
                                    children: [(0, a.jsx)("div", {
                                        className: p.icon,
                                        children: (0, a.jsx)("img", {
                                            alt: "",
                                            src: s("47919")
                                        })
                                    }), (0, a.jsxs)("div", {
                                        children: [(0, a.jsx)(r.Text, {
                                            variant: "text-md/normal",
                                            children: N.default.Messages.TWO_FA_WEBAUTHN_NAME_INSTRUCTIONS
                                        }), (0, a.jsx)(r.TextInput, {
                                            className: p.input,
                                            value: E,
                                            onChange: e => {
                                                g(e), A(0 === e.length)
                                            },
                                            autoFocus: !0,
                                            minLength: 1
                                        })]
                                    })]
                                }), (0, a.jsxs)(r.ModalFooter, {
                                    className: p.footer,
                                    children: [(0, a.jsx)(r.Button, {
                                        type: "submit",
                                        disabled: C,
                                        children: N.default.Messages.TWO_FA_WEBAUTHN_REGISTER_FINISH
                                    }), (0, a.jsx)(r.Button, {
                                        look: r.Button.Looks.LINK,
                                        color: r.Button.Colors.PRIMARY,
                                        onClick: () => {
                                            x(h.WebAuthnScreens.INIT)
                                        },
                                        children: N.default.Messages.BACK
                                    })]
                                })]
                            })
                        })]
                    })]
                })
            }

            function A(e) {
                let {
                    onSelect: t,
                    credential: n
                } = e;
                return (0, a.jsxs)(r.Menu, {
                    navId: "webauthn-credential-actions",
                    onClose: o.closeContextMenu,
                    "aria-label": N.default.Messages.TWO_FA_WEBAUTHN_CREDENTIAL_OPTIONS,
                    onSelect: t,
                    children: [(0, a.jsx)(r.MenuItem, {
                        id: "webauthn-edit-credential-".concat(n.id),
                        label: N.default.Messages.EDIT,
                        action: () => {
                            (0, r.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await s.el("629759").then(s.bind(s, "629759"));
                                return t => (0, a.jsx)(e, {
                                    credential: n,
                                    ...t
                                })
                            })
                        }
                    }), (0, a.jsx)(r.MenuItem, {
                        id: "webauthn-delete-credential-".concat(n.id),
                        label: N.default.Messages.TWO_FA_WEBAUTHN_DELETE_CREDENTIAL,
                        color: "danger",
                        action: () => {
                            (0, _.deleteWebAuthnCredential)(n)
                        }
                    })]
                })
            }

            function O() {
                let {
                    credentials: e,
                    hasFetchedCredentials: t
                } = (0, i.useStateFromStoresObject)([g.default], () => ({
                    hasFetchedCredentials: g.default.hasFetchedCredentials(),
                    credentials: g.default.getCredentials()
                }));
                n.useEffect(() => {
                    !t && (0, _.fetchWebAuthnCredentials)()
                }, [t]);
                let [s, l] = n.useState(!1);
                return (0, a.jsxs)(r.FormSection, {
                    title: N.default.Messages.TWO_FA_WEBAUTHN_TITLE,
                    className: p.settings,
                    children: [(0, a.jsx)(r.FormText, {
                        type: r.FormText.Types.DESCRIPTION,
                        className: p.description,
                        children: N.default.Messages.TWO_FA_WEBAUTHN_DESCRIPTION
                    }), e.length > 0 && (0, a.jsx)("div", {
                        className: p.credentialList,
                        children: e.map(e => (0, a.jsx)(S.default, {
                            avatar: null,
                            name: e.name,
                            className: p.credentialItem,
                            onContextMenu: t => {
                                (0, o.openContextMenu)(t, t => (0, a.jsx)(A, {
                                    ...t,
                                    credential: e
                                }))
                            },
                            children: (0, a.jsx)(r.Button, {
                                look: r.Button.Looks.BLANK,
                                color: r.Button.Colors.TRANSPARENT,
                                size: r.Button.Sizes.ICON,
                                onClick: t => {
                                    (0, o.openContextMenu)(t, t => (0, a.jsx)(A, {
                                        ...t,
                                        credential: e
                                    }))
                                },
                                "aria-label": N.default.Messages.TWO_FA_WEBAUTHN_CREDENTIAL_OPTIONS,
                                innerClassName: p.credentialOptions,
                                children: (0, a.jsx)(c.default, {
                                    className: p.overflowIcon,
                                    foreground: p.overflowIconFg,
                                    "aria-hidden": !0
                                })
                            })
                        }, e.id))
                    }), (0, a.jsx)("div", {
                        children: (0, a.jsx)(r.Button, {
                            onClick: () => {
                                l(!0), (0, _.startRegisterWebAuthnCredential)().then(e => {
                                    let {
                                        ticket: t,
                                        challenge: s
                                    } = e;
                                    (0, r.openModal)(e => (0, a.jsx)(C, {
                                        ...e,
                                        ticket: t,
                                        challenge: s
                                    }))
                                }).catch(e => {
                                    e.message !== N.default.Messages.MFA_V2_CANCELED && T.default.captureException(e)
                                }).finally(() => {
                                    l(!1)
                                })
                            },
                            submitting: s,
                            disabled: !E.hasWebAuthn,
                            size: r.Button.Sizes.SMALL,
                            children: N.default.Messages.TWO_FA_WEBAUTHN_REGISTER
                        })
                    })]
                })
            }
        },
        650893: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            });
            var a = s("917351"),
                n = s.n(a),
                l = s("171718"),
                i = s("446674"),
                r = s("913144");
            let o = !1,
                d = [],
                u = "",
                c = "",
                S = !1,
                E = {
                    viewNonce: "",
                    regenerateNonce: ""
                };
            class f extends i.default.Store {
                getVerificationKey() {
                    return u
                }
                getBackupCodes() {
                    return d
                }
                get togglingSMS() {
                    return o
                }
                getNonces() {
                    return E
                }
                get emailToken() {
                    return c
                }
                get hasSeenBackupPrompt() {
                    return S
                }
            }
            f.displayName = "MFAStore";
            var T = new f(r.default, {
                MFA_ENABLE_SUCCESS: function(e) {
                    let {
                        token: t,
                        codes: s
                    } = e;
                    void 0 !== t && l.default.setToken(t), d = s
                },
                MFA_ENABLE_EMAIL_TOKEN: function(e) {
                    let {
                        token: t
                    } = e;
                    c = t
                },
                MFA_DISABLE_SUCCESS: function(e) {
                    let {
                        token: t
                    } = e;
                    l.default.setToken(t)
                },
                MFA_SMS_TOGGLE: function() {
                    o = !0
                },
                MFA_SMS_TOGGLE_COMPLETE: function() {
                    o = !1
                },
                MFA_CLEAR_BACKUP_CODES: function() {
                    d = []
                },
                MFA_VIEW_BACKUP_CODES: function(e) {
                    let {
                        codes: t,
                        key: s
                    } = e;
                    d = n.sortBy(t, "code"), u = s
                },
                MFA_SEND_VERIFICATION_KEY: function(e) {
                    let {
                        nonces: t
                    } = e;
                    E = t
                },
                MFA_SEEN_BACKUP_CODE_PROMPT: function() {
                    S = !0
                }
            })
        },
        233976: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("145131"),
                o = s("567917");
            class d extends n.PureComponent {
                render() {
                    let {
                        children: e,
                        className: t,
                        onMouseEnter: s,
                        onMouseLeave: n
                    } = this.props;
                    return (0, a.jsx)("div", {
                        className: i(o.card, t),
                        onMouseEnter: s,
                        onMouseLeave: n,
                        children: e
                    })
                }
            }
            d.Header = e => {
                let {
                    children: t,
                    className: s,
                    splashArtURL: n
                } = e;
                return (0, a.jsxs)(r.default, {
                    className: i(o.header, s),
                    align: r.default.Align.CENTER,
                    children: [(0, a.jsx)("div", {
                        className: o.splashArt,
                        style: null != n ? {
                            backgroundImage: "url(".concat(n, ")")
                        } : void 0
                    }), t]
                })
            }, d.Body = e => {
                let {
                    children: t,
                    className: s
                } = e;
                return (0, a.jsx)("div", {
                    className: i(o.body, s),
                    children: t
                })
            };
            var u = d
        },
        3958: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                RecordModes: function() {
                    return a
                },
                default: function() {
                    return I
                }
            }), s("222007");
            var a, n, l = s("37983"),
                i = s("884691"),
                r = s("414456"),
                o = s.n(r),
                d = s("800648"),
                u = s.n(d),
                c = s("917351"),
                S = s.n(c),
                E = s("77078"),
                f = s("13798"),
                T = s("145131"),
                m = s("782340"),
                _ = s("523192");
            (n = a || (a = {})).DEFAULT = "DEFAULT", n.RECORDING = "RECORDING";
            let g = {
                DEFAULT: _.default,
                RECORDING: _.recording
            };
            class h extends i.PureComponent {
                componentWillUnmount() {
                    null != this._unregisterNativeRecorder && this._unregisterNativeRecorder()
                }
                componentDidUpdate(e) {
                    let {
                        mode: t
                    } = this.props, {
                        mode: s
                    } = e;
                    if (s === t) return;
                    let {
                        _inputRef: a
                    } = this;
                    if (null == a.current) return;
                    let {
                        activeElement: n
                    } = document;
                    "DEFAULT" === t && a.current === n && a.current.blur(), "RECORDING" === t && a.current !== n && a.current.focus()
                }
                render() {
                    let e;
                    let {
                        mode: t,
                        value: s,
                        disabled: a
                    } = this.props, n = (0, f.toString)(s, !0);
                    e = "RECORDING" === t ? m.default.Messages.SHORTCUT_RECORDER_BUTTON_RECORDING : 0 === s.length ? m.default.Messages.SHORTCUT_RECORDER_BUTTON : m.default.Messages.SHORTCUT_RECORDER_BUTTON_EDIT;
                    let i = "DEFAULT" === t && s.length > 0;
                    return (0, l.jsx)(E.FocusRing, {
                        focusTarget: this._inputRef,
                        ringTarget: this._containerRef,
                        children: (0, l.jsx)("div", {
                            onClick: this.handleClick,
                            onMouseDown: this.handleMouseDown,
                            ref: this._containerRef,
                            className: o(_.container, g[t], {
                                [_.hasValue]: i,
                                [_.disabled]: a
                            }),
                            children: (0, l.jsxs)(T.default, {
                                className: _.layout,
                                children: [(0, l.jsx)(T.default.Child, {
                                    className: _.input,
                                    children: (0, l.jsx)("input", {
                                        id: this._inputId,
                                        placeholder: m.default.Messages.SHORTCUT_RECORDER_NO_BIND,
                                        type: "text",
                                        ref: this.setInputRef,
                                        readOnly: !0,
                                        value: n,
                                        disabled: "RECORDING" !== this.props.mode || a
                                    })
                                }), (0, l.jsx)(T.default, {
                                    shrink: 1,
                                    grow: 0,
                                    style: {
                                        margin: 0
                                    },
                                    children: (0, l.jsxs)(E.Button, {
                                        className: _.button,
                                        disabled: a,
                                        onClick: e => {
                                            e.stopPropagation(), e.preventDefault(), this.handleClick(e)
                                        },
                                        size: E.Button.Sizes.MIN,
                                        color: E.ButtonColors.PRIMARY,
                                        children: [(0, l.jsx)("span", {
                                            className: _.text,
                                            children: e
                                        }), (0, l.jsx)("span", {
                                            className: _.editIcon
                                        })]
                                    })
                                })]
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this._inputId = S.uniqueId("key-recorder-"), this._unregisterNativeRecorder = null, this._mousedownMode = null, this._inputRef = i.createRef(), this._containerRef = i.createRef(), this.setInputRef = e => {
                        var t;
                        let {
                            registerNativeRecorder: s,
                            onChange: a
                        } = this.props;
                        if (this._inputRef.current = e, null === (t = this._unregisterNativeRecorder) || void 0 === t || t.call(this), null != e) {
                            if (null != s && null != a) this._unregisterNativeRecorder = s(e.id, a);
                            else if (null != a) {
                                let t = new u(e);
                                t.handleKey = a
                            }
                        }
                    }, this.handleClick = e => {
                        e.stopPropagation(), e.preventDefault();
                        let {
                            onClick: t,
                            disableOnClickWhileRecording: s
                        } = this.props;
                        (!s || "RECORDING" !== this._mousedownMode) && t()
                    }, this.handleMouseDown = () => {
                        this._mousedownMode = this.props.mode
                    }
                }
            }
            var I = h
        },
        628398: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("77078"),
                o = s("427459"),
                d = s("912702"),
                u = s("49111"),
                c = s("769772");
            class S extends n.Component {
                renderIcon(e) {
                    return e === u.BoostedGuildTiers.NONE ? (0, a.jsx)(d.default, {
                        tier: u.BoostedGuildTiers.TIER_1,
                        className: c.gemWithoutLabel
                    }) : (0, a.jsx)(d.default, {
                        tier: e,
                        className: c.gemWithLabel
                    })
                }
                render() {
                    let {
                        className: e,
                        guildId: t,
                        subscriberCount: s
                    } = this.props, n = (0, o.getGuildTierFromAppliedBoostCount)(s, t), l = (0, o.getNextGuildTierFromAppliedBoostCount)(s, t), d = null != l ? (0, o.getAppliedGuildBoostsRequired)(t)[l] : null, u = null != d && d > 0 ? s / d * 100 : 100;
                    return (0, a.jsx)(r.ProgressCircle, {
                        background: c.progressBackground,
                        percent: u,
                        strokeSize: r.ProgressCircle.StrokeSizes.SMALL,
                        className: i(c.gemIndicatorProgressCircle, e),
                        children: (0, a.jsxs)("div", {
                            className: c.gemIndicatorContainer,
                            children: [this.renderIcon(n), (0, a.jsx)("div", {
                                className: c.tierLabel,
                                children: (0, o.getTierName)(n)
                            })]
                        })
                    })
                }
            }
            var E = S
        },
        876269: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("77078"),
                l = s("837899"),
                i = s("271945"),
                r = e => {
                    let {
                        label: t,
                        onClick: s,
                        submitting: r
                    } = e;
                    return (0, a.jsx)(n.Clickable, {
                        onClick: r ? void 0 : s,
                        className: i.button,
                        children: (0, a.jsxs)("div", {
                            className: i.contentContainer,
                            children: [r ? (0, a.jsx)(n.Spinner, {
                                type: n.Spinner.Type.PULSING_ELLIPSIS,
                                className: i.spinner
                            }) : (0, a.jsx)(n.Text, {
                                variant: "text-md/medium",
                                className: i.label,
                                children: t
                            }), (0, a.jsx)(l.default, {
                                className: i.arrow
                            })]
                        })
                    })
                }
        },
        762740: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("469563"),
                l = s("491589"),
                i = s("75196"),
                r = (0, n.replaceIcon)(function(e) {
                    let {
                        width: t = 16,
                        height: s = 16,
                        color: n = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        className: l,
                        width: t,
                        height: s,
                        viewBox: "0 0 16 16",
                        ...(0, i.default)(o),
                        children: (0, a.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, a.jsx)("path", {
                                className: r,
                                fill: n,
                                d: "M0,1.99406028 C0,0.892771196 0.894513756,0 1.99406028,0 L14.0059397,0 C15.1072288,0 16,0.894513756 16,1.99406028 L16,14.0059397 C16,15.1072288 15.1054862,16 14.0059397,16 L1.99406028,16 C0.892771196,16 0,15.1054862 0,14.0059397 L0,1.99406028 Z M8.23182341,16 L10.3991764,16 L10.3991764,9.93141161 L12.5663127,9.93141161 L13,7.76405862 L10.3991764,7.76405862 L10.3246195,6.3468265 C10.3246195,5.66107601 10.5049432,5.17342158 11.4698488,5.17342158 L12.974642,5.17385505 L12.974642,3.12202197 C12.7618079,3.09319618 12.3142495,3 11.4644304,3 C9.69001851,3 8.18500859,4.20353112 8.18500859,6.23043964 L8.23182341,7.76405862 L6.06425368,7.76405862 L6.06425368,9.93141161 L8.23182341,9.93141161 L8.23182341,16 Z"
                            }), (0, a.jsx)("rect", {
                                width: "16",
                                height: "16"
                            })]
                        })
                    })
                }, l.FacebookIcon, void 0, {
                    size: 16
                })
        },
        273293: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("75196");

            function l(e) {
                let {
                    width: t = 251,
                    height: s = 24,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, n.default)(r),
                    width: t,
                    height: s,
                    viewBox: "0 0 251 24",
                    children: (0, a.jsx)("g", {
                        fill: l,
                        className: i,
                        children: (0, a.jsx)("path", {
                            d: "M3.494 16.768c.32-.258.794-.187 1.08.107.447.46.993.824 1.638 1.092.898.374 1.796.56 2.694.56.809 0 1.527-.142 2.156-.428.629-.286 1-.736 1.112-1.352.067-.351 0-.66-.202-.923a2.177 2.177 0 0 0-.842-.692 5.764 5.764 0 0 0-1.28-.429c-.472-.132-.944-.23-1.415-.296a9.625 9.625 0 0 1-2.695-.857c-.83-.44-1.55-1-2.156-1.682a6.19 6.19 0 0 1-1.313-2.373C2 8.57 1.967 7.56 2.17 6.462c.224-1.187.64-2.187 1.246-3A7.497 7.497 0 0 1 5.673 1.45 9.23 9.23 0 0 1 8.536.33 15.82 15.82 0 0 1 11.769 0c.719 0 1.426.055 2.123.165.696.11 1.37.308 2.02.593.652.286 1.27.67 1.853 1.154.429.355.839.775 1.231 1.26.241.298.16.73-.16.945L15.55 6.345c-.292.198-.686.146-.954-.083a4.584 4.584 0 0 0-1.41-.822 6.76 6.76 0 0 0-2.123-.429c-.763-.022-1.426.11-1.987.396-.562.285-.876.725-.943 1.318-.09.682.134 1.198.673 1.55.54.33 1.269.593 2.19.79a22.17 22.17 0 0 1 2.998.792c.988.308 1.819.77 2.492 1.385.696.593 1.202 1.373 1.516 2.34.314.945.337 2.143.067 3.594-.224 1.143-.64 2.143-1.246 3a7.925 7.925 0 0 1-2.19 2.11c-.875.571-1.886 1-3.031 1.285A14.575 14.575 0 0 1 7.997 24c-.719 0-1.471-.088-2.257-.264a11.036 11.036 0 0 1-2.257-.79 10.817 10.817 0 0 1-2.054-1.32 7.69 7.69 0 0 1-1.306-1.349c-.209-.277-.143-.66.128-.88l3.243-2.629zM29.31 8.579a.692.692 0 0 0 .694.784h8.053c.426 0 .753.368.695.78l-.547 3.869a.697.697 0 0 1-.695.592h-8.446a.697.697 0 0 0-.695.591l-.307 2.12a.692.692 0 0 0 .695.784h8.897c.426 0 .753.367.696.78l-.584 4.197a.697.697 0 0 1-.695.594H21.884a.692.692 0 0 1-.695-.782L24.328.921a.697.697 0 0 1 .695-.591H40.21c.427 0 .755.37.695.783l-.61 4.198a.697.697 0 0 1-.694.59h-9.292a.697.697 0 0 0-.695.59l-.304 2.088zM50.653 16.57a.706.706 0 0 0-.591-.317h-.082a.697.697 0 0 0-.695.593l-.878 6.231a.697.697 0 0 1-.695.593h-4.678a.692.692 0 0 1-.695-.782L45.477.921a.697.697 0 0 1 .695-.591h8.922c1.235 0 2.358.165 3.369.494 1.033.33 1.897.824 2.593 1.484.719.659 1.235 1.494 1.55 2.505.314 1.011.393 2.198.236 3.56-.158 1.078-.393 2-.708 2.77a7.315 7.315 0 0 1-1.179 1.945 8.12 8.12 0 0 1-1.684 1.418c-.444.27-.925.534-1.443.794a.696.696 0 0 0-.27 1.026l4.477 6.264c.326.455-.007 1.08-.574 1.08h-5.78a.706.706 0 0 1-.592-.316l-4.436-6.785zm2.993-5.394c.943 0 1.673-.275 2.19-.824.516-.572.819-1.198.909-1.88.09-.703-.056-1.318-.438-1.846-.36-.527-.988-.79-1.886-.79h-2.928a.697.697 0 0 0-.695.59l-.575 3.966a.692.692 0 0 0 .695.784h2.728zM81.555.694a.703.703 0 0 1 .637-.397h4.884c.522 0 .861.537.628.993l-11.223 22a.703.703 0 0 1-.628.38h-4.526a.699.699 0 0 1-.685-.539l-4.946-22a.69.69 0 0 1 .685-.834h5.009c.339 0 .63.237.69.563l2.017 10.843.335 5.535a.04.04 0 0 0 .04.037.04.04 0 0 0 .039-.028l1.81-5.51L81.555.693zM95.982 8.579a.692.692 0 0 0 .695.784h8.053c.425 0 .753.368.695.78l-.547 3.869a.697.697 0 0 1-.695.592h-8.447a.697.697 0 0 0-.695.591l-.306 2.12a.692.692 0 0 0 .695.784h8.897c.425 0 .753.367.696.78l-.584 4.197a.696.696 0 0 1-.695.594H88.557a.692.692 0 0 1-.695-.782L91 .921a.697.697 0 0 1 .695-.591h15.187c.427 0 .755.37.695.783l-.609 4.198a.697.697 0 0 1-.695.59h-9.291a.697.697 0 0 0-.695.59l-.305 2.088zM117.326 16.57a.706.706 0 0 0-.591-.317h-.083a.697.697 0 0 0-.695.593l-.877 6.231a.697.697 0 0 1-.695.593h-4.678a.692.692 0 0 1-.695-.782L112.15.921a.697.697 0 0 1 .695-.591h8.922c1.235 0 2.358.165 3.368.494 1.033.33 1.898.824 2.594 1.484.719.659 1.235 1.494 1.549 2.505.315 1.011.393 2.198.236 3.56-.157 1.078-.393 2-.707 2.77a7.295 7.295 0 0 1-1.179 1.945c-.472.527-1.033 1-1.684 1.418-.445.27-.926.534-1.443.794a.697.697 0 0 0-.27 1.026l4.477 6.264c.326.455-.007 1.08-.575 1.08h-5.78a.706.706 0 0 1-.591-.316l-4.436-6.785zm2.993-5.394c.943 0 1.673-.275 2.189-.824.517-.572.82-1.198.91-1.88.089-.703-.057-1.318-.438-1.846-.36-.527-.988-.79-1.887-.79h-2.927a.697.697 0 0 0-.695.59l-.576 3.966a.692.692 0 0 0 .695.784h2.729zM158.699 7.45a3.965 3.965 0 0 1-.303.924 4.234 4.234 0 0 1-.607 1.055c-.247.351-.55.692-.909 1.022l-.049.044c-.428.378-.443 1.14-.013 1.516.232.202.432.419.601.648.404.55.685 1.121.842 1.715a4.66 4.66 0 0 1 .135 1.747 7.08 7.08 0 0 1-.27 1.516c-.584 1.89-1.628 3.374-3.132 4.45-1.482 1.056-3.548 1.583-6.198 1.583h-8.928a.692.692 0 0 1-.695-.782L142.311.921a.697.697 0 0 1 .695-.591h8.956c1.145 0 2.167.165 3.065.494.921.33 1.685.802 2.291 1.418.606.593 1.033 1.33 1.28 2.209.269.879.303 1.879.101 3zm-8.051 2.012c.741 0 1.325-.21 1.752-.627.449-.44.707-.923.775-1.45.09-.528-.023-1-.337-1.418-.292-.44-.82-.66-1.583-.66h-2.895a.696.696 0 0 0-.694.59l-.406 2.78a.691.691 0 0 0 .694.785h2.694zm-1.28 9.032c.899 0 1.606-.241 2.123-.725.538-.505.842-1.055.909-1.648a2.07 2.07 0 0 0-.438-1.648c-.382-.506-1.022-.759-1.92-.759h-2.891a.698.698 0 0 0-.696.593l-.48 3.407c-.058.413.27.78.696.78h2.697zM163.079 8.011c.202-1.34.652-2.505 1.348-3.495a9.593 9.593 0 0 1 2.593-2.505 11.606 11.606 0 0 1 3.369-1.516c1.235-.33 2.47-.495 3.705-.495 1.235 0 2.425.165 3.57.495 1.146.33 2.134.835 2.965 1.516a6.245 6.245 0 0 1 1.886 2.505c.426.99.539 2.154.337 3.495l-1.179 7.978c-.202 1.34-.652 2.517-1.348 3.527a9.329 9.329 0 0 1-2.526 2.506 11.578 11.578 0 0 1-3.368 1.484c-1.235.33-2.504.494-3.807.494-1.235 0-2.425-.165-3.57-.494-1.123-.33-2.1-.825-2.931-1.484a6.56 6.56 0 0 1-1.886-2.505c-.426-1.011-.539-2.187-.337-3.528l1.179-7.978zm4.851 7.978c-.068.418-.011.791.168 1.12.18.309.427.572.741.792.315.198.685.352 1.112.462.449.11.898.165 1.347.165.494 0 .977-.055 1.449-.165.494-.11.943-.275 1.347-.495.404-.22.741-.494 1.01-.824.292-.352.472-.758.539-1.22l1.179-7.813c.068-.44.023-.824-.134-1.154a2.099 2.099 0 0 0-.708-.824 3.38 3.38 0 0 0-1.145-.495 5.526 5.526 0 0 0-1.381-.164c-.494 0-.988.055-1.482.164-.472.11-.91.275-1.314.495-.404.22-.752.494-1.044.824-.27.33-.438.714-.505 1.154l-1.179 7.978zM186.795 8.011c.202-1.34.651-2.505 1.347-3.495a9.597 9.597 0 0 1 2.594-2.505 11.6 11.6 0 0 1 3.368-1.516c1.235-.33 2.47-.495 3.705-.495 1.235 0 2.426.165 3.571.495 1.145.33 2.133.835 2.964 1.516a6.227 6.227 0 0 1 1.886 2.505c.427.99.539 2.154.337 3.495l-1.179 7.978c-.202 1.34-.651 2.517-1.347 3.527a9.357 9.357 0 0 1-2.526 2.506 11.596 11.596 0 0 1-3.369 1.484c-1.235.33-2.504.494-3.806.494a12.85 12.85 0 0 1-3.571-.494c-1.122-.33-2.099-.825-2.93-1.484a6.54 6.54 0 0 1-1.886-2.505c-.427-1.011-.539-2.187-.337-3.528l1.179-7.978zm4.85 7.978c-.067.418-.011.791.169 1.12.179.309.426.572.741.792a3.9 3.9 0 0 0 1.111.462c.449.11.898.165 1.348.165a6.36 6.36 0 0 0 1.448-.165c.494-.11.943-.275 1.347-.495.405-.22.741-.494 1.011-.824.292-.352.471-.758.539-1.22l1.179-7.813c.067-.44.022-.824-.135-1.154a2.096 2.096 0 0 0-.707-.824 3.394 3.394 0 0 0-1.146-.495 5.52 5.52 0 0 0-1.381-.164c-.494 0-.988.055-1.482.164-.471.11-.909.275-1.313.495-.405.22-.753.494-1.045.824a2.35 2.35 0 0 0-.505 1.154l-1.179 7.978zM211.767 16.768c.319-.258.794-.187 1.08.107.448.46.994.824 1.638 1.092.898.374 1.796.56 2.695.56.808 0 1.527-.142 2.155-.428.629-.286 1-.736 1.112-1.352.067-.351 0-.66-.202-.923a2.178 2.178 0 0 0-.842-.692 5.777 5.777 0 0 0-1.28-.429c-.472-.132-.943-.23-1.415-.296a9.636 9.636 0 0 1-2.695-.857 7.63 7.63 0 0 1-2.155-1.682 6.176 6.176 0 0 1-1.314-2.373c-.27-.924-.303-1.935-.101-3.033.224-1.187.64-2.187 1.246-3a7.498 7.498 0 0 1 2.257-2.011A9.23 9.23 0 0 1 216.809.33c1.055-.22 2.133-.33 3.234-.33.718 0 1.426.055 2.122.165.696.11 1.37.308 2.021.593.651.286 1.269.67 1.852 1.154a8.82 8.82 0 0 1 1.231 1.26c.241.298.16.73-.159.945l-3.288 2.228c-.292.198-.686.146-.953-.083a4.582 4.582 0 0 0-1.412-.822 6.756 6.756 0 0 0-2.122-.429c-.763-.022-1.426.11-1.987.396-.561.285-.876.725-.943 1.318-.09.682.135 1.198.674 1.55.538.33 1.268.593 2.189.79 1.033.199 2.032.462 2.998.792.988.308 1.819.77 2.492 1.385.697.593 1.202 1.373 1.516 2.34.315.945.337 2.143.068 3.594-.225 1.143-.64 2.143-1.247 3a7.922 7.922 0 0 1-2.189 2.11c-.876.571-1.886 1-3.032 1.285a14.575 14.575 0 0 1-3.604.429c-.718 0-1.471-.088-2.257-.264a11.068 11.068 0 0 1-2.257-.79 10.823 10.823 0 0 1-2.054-1.32c-.493-.399-.928-.849-1.306-1.349-.208-.277-.143-.66.128-.88l3.243-2.629zM243.571 5.703a.698.698 0 0 0-.696.593l-2.359 16.781a.697.697 0 0 1-.695.593h-4.68a.692.692 0 0 1-.695-.78l2.306-16.406a.692.692 0 0 0-.695-.78h-4.817a.692.692 0 0 1-.694-.787l.603-4.033a.698.698 0 0 1 .695-.587h17.545c.428 0 .756.371.694.786l-.603 4.033a.697.697 0 0 1-.694.587h-5.215z"
                        })
                    })
                })
            }
        },
        369952: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("469563"),
                l = s("887560"),
                i = s("75196"),
                r = (0, n.replaceIcon)(function(e) {
                    let {
                        width: t = 16,
                        height: s = 16,
                        color: n = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        className: l,
                        xmlns: "http://www.w3.org/2000/svg",
                        width: t,
                        height: s,
                        viewBox: "0 0 16 16",
                        ...(0, i.default)(o),
                        children: (0, a.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, a.jsx)("path", {
                                className: r,
                                fill: n,
                                d: "M4.70012698,0.0531746 C3.84888888,0.092 3.2675238,0.22720635 2.7588254,0.42492063 C2.23292063,0.62926983 1.78692063,0.90273016 1.3422857,1.34733333 C0.89768254,1.79196825 0.62422222,2.23796825 0.41987302,2.76387303 C0.22215872,3.27257143 0.08695238,3.85393651 0.04812698,4.7051746 C0.00920635,5.55819048 0,5.83053968 0,8.00253968 C0,10.1745079 0.00920635,10.4468571 0.04812698,11.299873 C0.08695238,12.1511111 0.22215873,12.7324762 0.41987302,13.2411746 C0.62422222,13.7670794 0.89768254,14.2130794 1.34228572,14.6577143 C1.78692062,15.1023175 2.23292062,15.3757778 2.7588254,15.5801587 C3.2675238,15.7778413 3.8488889,15.9130476 4.70012698,15.951873 C5.55314286,15.9907937 5.82549206,16 7.99749206,16 C10.1694603,16 10.4418095,15.9907937 11.2948254,15.951873 C12.1460635,15.9130476 12.7274286,15.7778413 13.236127,15.5801587 C13.7620317,15.3757778 14.2080317,15.1023175 14.6526667,14.6577143 C15.0972698,14.2130794 15.3707302,13.7670794 15.5751111,13.2411746 C15.7727937,12.7324762 15.908,12.1511111 15.9468254,11.299873 C15.985746,10.4468571 15.9949524,10.1745079 15.9949524,8.00253968 C15.9949524,5.83053968 15.985746,5.55819048 15.9468254,4.7051746 C15.908,3.8539365 15.7727937,3.27257143 15.5751111,2.76387302 C15.3707302,2.23796825 15.0972698,1.79196825 14.6526667,1.34733332 C14.2080317,0.90273016 13.7620317,0.62926984 13.236127,0.42492064 C12.7274286,0.22720634 12.1460635,0.092 11.2948254,0.0531746 C10.4418095,0.01425397 10.1694603,0.00504762 7.99749206,0.00504762 C5.82549206,0.00504762 5.55314286,0.01425397 4.70012698,0.0531746 L4.70012698,0.0531746 Z M8.00001453,2.00504762 C9.95416635,2.00504762 10.185649,2.01251386 10.9573741,2.04772432 C11.6709381,2.08026206 12.0584565,2.19948958 12.3163471,2.29971739 C12.6579641,2.43248289 12.9017646,2.59107525 13.157854,2.84719363 C13.4139723,3.10328295 13.5725647,3.34708347 13.7053302,3.68870053 C13.805558,3.94659105 13.9247856,4.33410953 13.9573233,5.04767346 C13.9925338,5.8193986 14,6.05088127 14,8.00506213 C14,9.95921396 13.9925338,10.1906966 13.9573233,10.9624217 C13.9247856,11.6759857 13.805558,12.0635042 13.7053302,12.3213947 C13.5725647,12.6630117 13.4139723,12.9068123 13.157854,13.1629016 C12.9017646,13.41902 12.6579641,13.5776123 12.3163471,13.7103779 C12.0584565,13.8106057 11.6709381,13.9298332 10.9573741,13.9623709 C10.1857652,13.9975814 9.9543116,14.0050476 8.00001453,14.0050476 C6.04568839,14.0050476 5.81426383,13.9975814 5.04262587,13.9623709 C4.32906195,13.9298332 3.94154347,13.8106057 3.68365294,13.7103779 C3.34203588,13.5776123 3.09823536,13.41902 2.84214604,13.1629016 C2.58605671,12.9068123 2.42743531,12.6630117 2.29466977,12.3213947 C2.19444197,12.0635042 2.07521444,11.6759857 2.04267671,10.9624217 C2.00746628,10.1906966 2,9.95921395 2,8.00506212 C2,6.05088125 2.00746625,5.81939858 2.0426767,5.04767347 C2.07521444,4.33410953 2.19444196,3.94659104 2.29466977,3.68870052 C2.42743531,3.34708346 2.58602767,3.10328294 2.84214604,2.84719362 C3.09823536,2.59107524 3.34203588,2.43248288 3.68365294,2.29971735 C3.94154346,2.19948953 4.32906194,2.08026201 5.04262587,2.04772428 C5.81435097,2.01251381 6.04583365,2.00504758 8.00001453,2.00504758 L8.00001453,2.00504762 Z"
                            }), (0, a.jsx)("path", {
                                className: r,
                                fill: n,
                                d: "M8.0000119,10 C6.89542535,10 6,9.10457466 6,8.0000119 C6,6.89542535 6.89542534,6 8.0000119,6 C9.10457467,6 10,6.89542534 10,8.0000119 C10,9.10457467 9.10457466,10 8.0000119,10 L8.0000119,10 Z M8.00001546,4 C5.7908468,4 4,5.7908468 4,8.00001546 C4,10.2091532 5.7908468,12 8.00001546,12 C10.2091532,12 12,10.2091532 12,8.00001546 C12,5.7908468 10.2091532,4 8.00001546,4 L8.00001546,4 Z M13,4.00001654 C13,4.55230644 12.5522734,5 11.9999835,5 C11.4477266,5 11,4.55230645 11,4.00001654 C11,3.44772664 11.4477266,3 11.9999835,3 C12.5522734,3 13,3.44772663 13,4.00001654 L13,4.00001654 Z"
                            }), (0, a.jsx)("rect", {
                                width: "16",
                                height: "16"
                            })]
                        })
                    })
                }, l.InstagramIcon, void 0, {
                    size: 16
                })
        },
        249900: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return n
                }
            });
            var a = s("37983");
            s("884691");
            var n = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    className: n
                } = e;
                return (0, a.jsx)("svg", {
                    width: t,
                    height: s,
                    className: n,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    children: (0, a.jsx)("path", {
                        d: "M7.50072 21.7034C8.82348 20.9382 10.359 20.4999 12 20.4999C13.641 20.4999 15.1765 20.9382 16.4993 21.7034C16.9773 21.9799 17.5891 21.8165 17.8656 21.3385C18.1421 20.8604 17.9788 20.2487 17.5007 19.9722C16.8983 19.6236 16.2597 19.3306 15.5921 19.1001C16.1421 18.8061 16.6546 18.4467 17.1213 18.0323C17.6815 18.3308 18.321 18.5 19 18.5C20.5899 18.5 21.9631 17.5725 22.6081 16.229C22.7681 15.8955 22.6686 15.4975 22.3709 15.2781C21.7964 14.8546 21.1045 14.5811 20.353 14.5154C21.8963 13.9607 23 12.4843 23 10.75C23 10.6561 22.9968 10.5629 22.9904 10.4706C22.964 10.0882 22.6618 9.78601 22.2795 9.75963C22.1871 9.75326 22.0939 9.75002 22 9.75002C21.5351 9.75002 21.0888 9.82932 20.6737 9.97513C21.488 9.24291 22 8.18126 22 7.00001C22 6.11257 21.711 5.29262 21.222 4.62916C21.0025 4.33142 20.6045 4.23193 20.2711 4.392C19.5214 4.75187 18.9013 5.33848 18.4995 6.06295C18.4998 6.042 18.5 6.02102 18.5 6C18.5 3.79086 16.7091 2 14.5 2C14.1914 2 13.891 2.03494 13.6025 2.10108C13.2635 2.17879 13.0194 2.47236 13.004 2.8198C13.0013 2.87954 13 2.93961 13 3C13 5.10749 14.6299 6.83432 16.6979 6.98876C17.5896 8.28674 18 9.9366 18 11.5C18 15.1559 15.2498 18 12 18C8.75055 17.9995 6 15.1556 6 11.5C6 9.9366 6.41044 8.28674 7.30214 6.98876C9.37015 6.83431 11 5.10749 11 3C11 2.93961 10.9987 2.87954 10.996 2.8198C10.9806 2.47236 10.7365 2.17879 10.3975 2.10108C10.109 2.03494 9.80856 2 9.5 2C7.29086 2 5.5 3.79086 5.5 6C5.5 6.02102 5.50016 6.042 5.50049 6.06295C5.09872 5.33848 4.47858 4.75187 3.72894 4.392C3.39549 4.23193 2.99747 4.33142 2.77802 4.62916C2.289 5.29262 2 6.11257 2 7.00001C2 8.18126 2.51203 9.24291 3.32625 9.97513C2.91121 9.82932 2.46487 9.75002 2 9.75002C1.90605 9.75002 1.81286 9.75326 1.72054 9.75963C1.33822 9.78601 1.03599 10.0882 1.00961 10.4706C1.00324 10.5629 1 10.6561 1 10.75C1 12.4843 2.10367 13.9607 3.64696 14.5154C2.89551 14.5811 2.20362 14.8546 1.62909 15.2781C1.33135 15.4975 1.23187 15.8955 1.39194 16.229C2.0369 17.5725 3.41013 18.5 4.99999 18.5C5.67902 18.5 6.31853 18.3308 6.87867 18.0323C7.34537 18.4467 7.8579 18.8061 8.4079 19.1001C7.74034 19.3306 7.10174 19.6236 6.49927 19.9722C6.02121 20.2487 5.85785 20.8604 6.13439 21.3385C6.41094 21.8165 7.02266 21.9799 7.50072 21.7034Z",
                        fill: "#DBDEE1"
                    })
                })
            }
        },
        893596: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("469563"),
                l = s("65969"),
                i = s("75196"),
                r = (0, n.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: s = 24,
                        color: n = "currentColor",
                        ...l
                    } = e;
                    return (0, a.jsxs)("svg", {
                        width: t,
                        height: s,
                        ...(0, i.default)(l),
                        viewBox: "0 0 24 24",
                        children: [(0, a.jsx)("path", {
                            d: "M13.8003 3.59643V7.86267C13.8003 9.15683 14.8448 10.2011 16.1393 10.2011H20.4067C20.9334 10.2011 21.2012 9.56739 20.8263 9.19253L14.8091 3.17694C14.4341 2.80208 13.8003 3.06092 13.8003 3.59643Z",
                            fill: n
                        }), (0, a.jsx)("path", {
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M11.9727 7.88073C11.9727 10.1692 13.8304 12.0269 16.1189 12.0269H20.9471V19.2064C20.9471 20.1936 20.1394 21.0013 19.1523 21.0013H4.79318C3.80599 21.0013 2.99829 20.1936 2.99829 19.2064V4.84737C2.99829 3.86019 3.80599 3.05249 4.79318 3.05249H11.9727V7.88073ZM13.8 14C13.8 14.9941 12.9941 15.8 12 15.8C11.0059 15.8 10.2 14.9941 10.2 14H9C9 15.6569 10.3431 17 12 17C13.6569 17 15 15.6569 15 14H13.8ZM7 15C7 15.5523 6.55228 16 6 16C5.44772 16 5 15.5523 5 15C5 14.4477 5.44772 14 6 14C6.55228 14 7 14.4477 7 15ZM18 16C18.5523 16 19 15.5523 19 15C19 14.4477 18.5523 14 18 14C17.4477 14 17 14.4477 17 15C17 15.5523 17.4477 16 18 16Z",
                            fill: n
                        })]
                    })
                }, l.StickerIcon, void 0, {
                    size: 24
                })
        },
        198911: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("75196"),
                l = e => {
                    let {
                        width: t = 24,
                        height: s = 24,
                        color: l = "currentColor",
                        className: i,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        width: t,
                        height: s,
                        viewBox: "0 0 24 24",
                        className: i,
                        ...(0, n.default)(o),
                        children: (0, a.jsx)("path", {
                            className: r,
                            fill: l,
                            d: "M17.836 6.009A4.794 4.794 0 0 1 15.658 2h-3.439l-.005 13.78a2.892 2.892 0 0 1-2.885 2.782 2.893 2.893 0 0 1-2.89-2.89 2.894 2.894 0 0 1 2.89-2.89c.298 0 .583.048.853.133v-3.51a6.308 6.308 0 0 0-.853-.062A6.336 6.336 0 0 0 3 15.672a6.324 6.324 0 0 0 2.702 5.181A6.29 6.29 0 0 0 9.329 22a6.336 6.336 0 0 0 6.329-6.329V8.683c1.348.968 3 1.539 4.784 1.539V6.783c-.96 0-1.855-.285-2.605-.775v.001Z"
                        })
                    })
                }
        },
        578521: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("37983");
            s("884691");
            var n = s("75196"),
                l = e => {
                    let {
                        width: t = 24,
                        height: s = 24,
                        color: l = "currentColor",
                        className: i,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        width: t,
                        height: s,
                        viewBox: "0 0 24 24",
                        className: i,
                        ...(0, n.default)(o),
                        children: (0, a.jsx)("path", {
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M21.3766 4.10479C22.4093 4.38257 23.2225 5.20102 23.4985 6.24038C24 8.12411 24 12.0545 24 12.0545C24 12.0545 24 15.9848 23.4985 17.8688C23.2225 18.908 22.4093 19.7265 21.3766 20.0044C19.505 20.5091 12 20.5091 12 20.5091C12 20.5091 4.49496 20.5091 2.62336 20.0044C1.59082 19.7265 0.777545 18.908 0.501545 17.8688C0 15.9848 0 12.0545 0 12.0545C0 12.0545 0 8.12411 0.501545 6.24038C0.777545 5.20102 1.59082 4.38257 2.62336 4.10479C4.49496 3.59998 12 3.59998 12 3.59998C12 3.59998 19.505 3.59998 21.3766 4.10479ZM15.8182 12.0546L9.54551 15.623V8.48596L15.8182 12.0546Z",
                            fill: l,
                            className: r
                        })
                    })
                }
        },
        314892: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("222007");
            var a = s("37983"),
                n = s("884691"),
                l = s("414456"),
                i = s.n(l),
                r = s("77078"),
                o = s("468759"),
                d = s("49111"),
                u = s("782340"),
                c = s("363188"),
                S = s("926622");
            let E = 0,
                f = () => "notification-position-selector-".concat(E++),
                T = e => {
                    switch (e) {
                        case d.OverlayNotificationPositions.TOP_LEFT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_TOP_LEFT;
                        case d.OverlayNotificationPositions.TOP_RIGHT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_TOP_RIGHT;
                        case d.OverlayNotificationPositions.BOTTOM_LEFT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_BOTTOM_LEFT;
                        case d.OverlayNotificationPositions.BOTTOM_RIGHT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_BOTTOM_RIGHT;
                        default:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_DISABLED
                    }
                },
                m = [d.OverlayNotificationPositions.DISABLED, d.OverlayNotificationPositions.TOP_LEFT, d.OverlayNotificationPositions.TOP_RIGHT, d.OverlayNotificationPositions.BOTTOM_LEFT, d.OverlayNotificationPositions.BOTTOM_RIGHT];

            function _(e) {
                let {
                    position: t,
                    onChange: s
                } = e, [l] = n.useState(() => f()), E = t === d.OverlayNotificationPositions.DISABLED ? u.default.Messages.OVERLAY_NOTIFICATION_SETTINGS_DISABLED : u.default.Messages.OVERLAY_NOTIFICATION_SETTINGS_POSITION.format({
                    position: T(t)
                });
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(r.FocusRing, {
                        within: !0,
                        offset: -2,
                        children: (0, a.jsx)("div", {
                            className: i(c.wrapper, {
                                [c.disabledSelected]: t === d.OverlayNotificationPositions.DISABLED
                            }),
                            children: m.map(e => (0, a.jsxs)("label", {
                                className: i({
                                    [c.selected]: e === t,
                                    [c.disabled]: e === d.OverlayNotificationPositions.DISABLED,
                                    [c.topRight]: e === d.OverlayNotificationPositions.TOP_RIGHT,
                                    [c.topLeft]: e === d.OverlayNotificationPositions.TOP_LEFT,
                                    [c.bottomRight]: e === d.OverlayNotificationPositions.BOTTOM_RIGHT,
                                    [c.bottomLeft]: e === d.OverlayNotificationPositions.BOTTOM_LEFT
                                }),
                                children: [T(e), e === d.OverlayNotificationPositions.DISABLED ? (0, a.jsx)(o.default, {
                                    className: c.disabledIcon
                                }) : null, (0, a.jsx)("input", {
                                    type: "radio",
                                    name: l,
                                    value: e,
                                    onChange: t => s(t, e),
                                    className: c.hiddenInput
                                })]
                            }, e))
                        })
                    }), (0, a.jsx)(r.FormText, {
                        type: r.FormTextTypes.DESCRIPTION,
                        className: S.marginTop8,
                        children: E
                    })]
                })
            }
            _.Positions = d.OverlayNotificationPositions;
            var g = _
        },
        417809: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                formatExpiration: function() {
                    return n
                }
            }), s("781738"), s("424973");
            let a = /[^0-9/]/g;

            function n(e) {
                let t = e.replace(a, "").split("/"),
                    s = t[0],
                    n = t[1],
                    l = [];
                return parseInt(s, 10) > 12 && (s = s.substring(0, 1)), l.push(s), (parseInt(s, 10) > 1 || 2 === s.length || null != n && "" !== n) && l.push("/"), null != n && "" !== n && parseInt(n, 10) > 99 && (n = (n + "").substring(0, 2)), l.push(n), l.join("")
            }
        },
        575209: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getCurrencyFullName: function() {
                    return n
                }
            });
            var a = s("782340");

            function n(e) {
                switch (e) {
                    case "brl":
                        return a.default.Messages.BRL_NAME;
                    case "pln":
                        return a.default.Messages.PLN_NAME;
                    case "try":
                        return a.default.Messages.TRY_NAME;
                    case "usd":
                        return a.default.Messages.USD_NAME;
                    case "aud":
                        return a.default.Messages.AUD_NAME;
                    case "pen":
                        return a.default.Messages.PEN_NAME;
                    case "php":
                        return a.default.Messages.PHP_NAME;
                    case "ars":
                        return a.default.Messages.ARS_NAME;
                    case "cop":
                        return a.default.Messages.COP_NAME;
                    case "clr":
                        return a.default.Messages.CLR_NAME;
                    case "jpy":
                        return a.default.Messages.JPY_NAME;
                    case "idr":
                        return a.default.Messages.IDR_NAME;
                    case "vnd":
                        return a.default.Messages.VND_NAME;
                    case "thb":
                        return a.default.Messages.THB_NAME;
                    case "myr":
                        return a.default.Messages.MYR_NAME;
                    case "krw":
                        return a.default.Messages.KRW_NAME;
                    case "mxn":
                        return a.default.Messages.MXN_NAME;
                    case "bgn":
                        return a.default.Messages.BGN_NAME;
                    case "czk":
                        return a.default.Messages.CZK_NAME;
                    case "dkk":
                        return a.default.Messages.DKK_NAME;
                    case "huf":
                        return a.default.Messages.HUF_NAME;
                    case "ron":
                        return a.default.Messages.RON_NAME;
                    case "sek":
                        return a.default.Messages.SEK_NAME;
                    case "eur":
                        return a.default.Messages.EUR_NAME;
                    default:
                        return ""
                }
            }
        },
        843039: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            }), s("222007");
            var a = s("917351"),
                n = s.n(a),
                l = s("211470"),
                i = s("760190"),
                r = s("565034");

            function o(e) {
                for (let t of e) {
                    let e = i.default.getEligibleExperiment(t);
                    if (null != e) return [t, e]
                }
                return null
            }
            var d = {
                getFirstEligibleUserExperiment: o,
                isInExperimentBucket: function(e, t) {
                    let s = i.default.getExperimentBucket(e);
                    return s === t
                },
                experimentDescriptorEquals: function(e, t) {
                    if (null == e && null == t || e === t) return !0;
                    if (null == e && null != t || null != e && null == t) return !1;
                    if (null != e && null != t) {
                        if (e.type !== t.type || e.bucket !== t.bucket || e.revision !== t.revision) return !1;
                        if (e.type === r.ExperimentTypes.USER && t.type === r.ExperimentTypes.USER) return n.isEqual(e.context, t.context)
                    }
                    return !0
                },
                trackExposureToFirstEligibleUserExperiment: function(e) {
                    let t = o(e);
                    if (null != t) {
                        let [e, s] = t;
                        return (0, l.trackExposureToExperiment)(e, s), s
                    }
                },
                getExperimentBucketName: function(e) {
                    let t;
                    return t = e === r.ExperimentBuckets.CONTROL ? "Control" : e === r.ExperimentBuckets.NOT_ELIGIBLE ? "Not Eligible" : "Treatment ".concat(e)
                }
            }
        },
        259051: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getRandomHouse: function() {
                    return r
                },
                getQuestions: function() {
                    return S
                },
                getHouseNameFromHouseID: function() {
                    return E
                }
            }), s("424973");
            var a = s("627445"),
                n = s.n(a),
                l = s("49111"),
                i = s("782340");
            let r = () => {
                    let e = Object.keys(l.HypeSquadHouses);
                    return e[Math.floor(Math.random() * e.length)]
                },
                o = () => {
                    let e = [];
                    for (; e.length < 5;) {
                        let t = Math.floor(15 * Math.random());
                        !e.includes(t) && e.push(t)
                    }
                    return e
                },
                d = () => [i.default.Messages.HYPESQUAD_QUESTION_0_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_1_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_2_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_3_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_4_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_5_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_6_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_7_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_8_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_9_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_10_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_11_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_12_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_13_PROMPT, i.default.Messages.HYPESQUAD_QUESTION_14_PROMPT],
                u = () => [
                    [i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_D],
                    [i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_A, i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_B, i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_C, i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_D]
                ],
                c = () => [l.HypeSquadHouses.HOUSE_1, l.HypeSquadHouses.HOUSE_2, l.HypeSquadHouses.HOUSE_3, l.RANDOM_HYPESQUAD_HOUSE],
                S = () => {
                    let e = c(),
                        t = d(),
                        s = u(),
                        a = o();
                    return a.map(a => {
                        let l = t[a],
                            i = s[a];
                        return n(null != l && null != i, "Invalid HypeSquad quiz question index"), {
                            prompt: l,
                            options: i.map((t, s) => {
                                let a = e[s];
                                return n(null !== a, "Invalid HypeSquad quiz question option index"), {
                                    copy: t,
                                    house: a
                                }
                            })
                        }
                    })
                },
                E = e => {
                    let t = {
                        [l.HypeSquadHouses.HOUSE_1]: i.default.Messages.HYPESQUAD_HOUSE_1,
                        [l.HypeSquadHouses.HOUSE_2]: i.default.Messages.HYPESQUAD_HOUSE_2,
                        [l.HypeSquadHouses.HOUSE_3]: i.default.Messages.HYPESQUAD_HOUSE_3
                    };
                    return t[e]
                }
        },
        222038: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                hasCrypto: function() {
                    return d
                },
                hasWebAuthn: function() {
                    return u
                },
                generateTotpSecret: function() {
                    return c
                },
                encodeTotpSecret: function() {
                    return S
                },
                encodeTotpSecretAsUrl: function() {
                    return E
                }
            }), s("311790"), s("477657"), s("811875"), s("90301"), s("652153"), s("28797"), s("817884"), s("597349"), s("667536"), s("690341"), s("781738");
            var a, n, l, i = s("584811");
            let r = null !== (l = null === (a = window) || void 0 === a ? void 0 : a.crypto) && void 0 !== l ? l : null === (n = window) || void 0 === n ? void 0 : n.msCrypto,
                o = "Uint8Array" in window,
                d = null != r && "getRandomValues" in r && o,
                u = "PublicKeyCredential" in window && o;

            function c() {
                var e;
                return function(e) {
                    let t = i.encode(e).toString("utf8").replace(/=/g, "");
                    return t.toLowerCase().replace(/(\w{4})/g, "$1 ").trim()
                }((e = 20, r.getRandomValues(new Uint8Array(20))))
            }

            function S(e) {
                return e.replace(/[\s._-]+/g, "").toUpperCase()
            }

            function E(e, t) {
                let s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Discord";
                return "otpauth://totp/".concat(encodeURI(s), ":").concat(encodeURI(e), "?secret=").concat(S(t), "&issuer=").concat(encodeURIComponent(s))
            }
        },
        241088: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getSanitizedRestrictedGuilds: function() {
                    return c
                },
                getSanitizedMessageRequestRestrictedGuilds: function() {
                    return S
                },
                getSanitizedActivityRestrictedGuilds: function() {
                    return E
                },
                getSanitizedActivityJoiningRestrictedGuilds: function() {
                    return f
                },
                computeFlags: function() {
                    return T
                },
                harvestDisabled: function() {
                    return m
                },
                NonSpamRetrainingOptInOptions: function() {
                    return n
                },
                NonSpamRetrainingOptInOptionsToValue: function() {
                    return _
                },
                generateNonSpamRetrainingOptInSettingOptions: function() {
                    return g
                }
            });
            var a, n, l = s("845579"),
                i = s("341542"),
                r = s("305961");
            s("599110");
            var o = s("49111"),
                d = s("782340");
            let u = 864e5 * o.REQUEST_DATA_LIMIT_DAYS;

            function c() {
                let e = l.RestrictedGuildIds.getSetting();
                return 0 === i.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function S() {
                let e = l.MessageRequestRestrictedGuildIds.getSetting();
                return 0 === i.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function E() {
                let e = l.ActivityRestrictedGuilds.getSetting();
                return 0 === i.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function f() {
                let e = l.ActivityJoiningRestrictedGuilds.getSetting();
                return 0 === i.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function T(e) {
                return (e & o.AllFriendSourceFlags) === o.AllFriendSourceFlags ? {
                    all: !0,
                    mutualFriends: !0,
                    mutualGuilds: !0
                } : {
                    all: !1,
                    mutualFriends: (e & o.FriendSourceFlags.MUTUAL_FRIENDS) === o.FriendSourceFlags.MUTUAL_FRIENDS,
                    mutualGuilds: (e & o.FriendSourceFlags.MUTUAL_GUILDS) === o.FriendSourceFlags.MUTUAL_GUILDS
                }
            }

            function m(e, t) {
                return !t.verified || null != e && u > Date.now() - new Date(e.created_at).getTime()
            }(a = n || (n = {}))[a.UNDECIDED = 0] = "UNDECIDED", a[a.OPTIN = 1] = "OPTIN", a[a.OPTOUT = 2] = "OPTOUT";
            let _ = {
                0: void 0,
                1: !0,
                2: !1
            };

            function g() {
                return [{
                    name: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_IN_HEADER,
                    desc: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_IN_DESC,
                    value: 1
                }, {
                    name: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_OUT_HEADER,
                    desc: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_OUT_DESC,
                    value: 2
                }, {
                    name: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_UNSET_HEADER,
                    desc: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_UNSET_DESC,
                    value: 0
                }]
            }
        },
        927858: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                TEXT_VARIANT: function() {
                    return a
                }
            });
            let a = ["heading-sm/normal", "heading-sm/medium", "heading-sm/semibold", "heading-sm/bold", "heading-sm/extrabold", "heading-md/normal", "heading-md/medium", "heading-md/semibold", "heading-md/bold", "heading-md/extrabold", "heading-lg/normal", "heading-lg/medium", "heading-lg/semibold", "heading-lg/bold", "heading-lg/extrabold", "heading-xl/normal", "heading-xl/medium", "heading-xl/semibold", "heading-xl/bold", "heading-xl/extrabold", "heading-xxl/normal", "heading-xxl/medium", "heading-xxl/semibold", "heading-xxl/bold", "heading-xxl/extrabold", "eyebrow", "heading-deprecated-12/normal", "heading-deprecated-12/medium", "heading-deprecated-12/semibold", "heading-deprecated-12/bold", "heading-deprecated-12/extrabold", "redesign/heading-18/bold", "text-xxs/normal", "text-xxs/medium", "text-xxs/semibold", "text-xxs/bold", "text-xs/normal", "text-xs/medium", "text-xs/semibold", "text-xs/bold", "text-sm/normal", "text-sm/medium", "text-sm/semibold", "text-sm/bold", "text-md/normal", "text-md/medium", "text-md/semibold", "text-md/bold", "text-lg/normal", "text-lg/medium", "text-lg/semibold", "text-lg/bold", "redesign/message-preview/normal", "redesign/message-preview/medium", "redesign/message-preview/semibold", "redesign/message-preview/bold", "redesign/channel-title/normal", "redesign/channel-title/medium", "redesign/channel-title/semibold", "redesign/channel-title/bold", "display-sm", "display-md", "display-lg", "code"]
        },
        106076: function(e, t, s) {
            "use strict";
            var a, n;
            s.r(t), s.d(t, {
                ConsoleOAuthApplications: function() {
                    return a
                },
                ConsoleOAuthApplicationsSets: function() {
                    return l
                }
            }), s("222007"), (n = a || (a = {})).XBOX_APPLICATION_ID = "622174530214821906", n.PLAYSTATION_APPLICATION_ID = "1008890872156405890", n.PLAYSTATION_STAGING_APPLICATION_ID = "984193235868065795";
            let l = {
                PLAYSTATION_APPLICATION_IDS: new Set(["984193235868065795", "1008890872156405890"]),
                ALL: new Set(["622174530214821906", "984193235868065795", "1008890872156405890"])
            }
        }
    }
]);